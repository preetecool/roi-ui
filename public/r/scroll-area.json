{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "scroll-area",
  "type": "registry:item",
  "title": "Scroll Area",
  "description": "A native scroll container with custom scrollbars.",
  "files": [
    {
      "path": "registry/brook/ui/scroll-area/scroll-area.tsx",
      "content": "\"use client\";\n\nimport { ScrollArea } from \"@base-ui-components/react/scroll-area\";\nimport { cn } from \"@/lib/utils\";\nimport styles from \"./scroll-area.module.css\";\n\nfunction ScrollAreaRoot({\n  className,\n  ...props\n}: React.ComponentProps<typeof ScrollArea.Root>) {\n  return <ScrollArea.Root className={cn(styles.root, className)} {...props} />;\n}\n\nfunction ScrollAreaViewport({\n  className,\n  ...props\n}: React.ComponentProps<typeof ScrollArea.Viewport>) {\n  return (\n    <ScrollArea.Viewport\n      className={cn(styles.viewport, className)}\n      {...props}\n    />\n  );\n}\n\nfunction ScrollAreaContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof ScrollArea.Content>) {\n  return (\n    <ScrollArea.Content className={cn(styles.content, className)} {...props} />\n  );\n}\n\nfunction ScrollAreaScrollbar({\n  className,\n  orientation = \"vertical\",\n  ...props\n}: React.ComponentProps<typeof ScrollArea.Scrollbar>) {\n  return (\n    <ScrollArea.Scrollbar\n      className={cn(\n        styles.scrollbar,\n        orientation === \"horizontal\" && styles.horizontal,\n        className\n      )}\n      orientation={orientation}\n      {...props}\n    />\n  );\n}\n\nfunction ScrollAreaThumb({\n  className,\n  ...props\n}: React.ComponentProps<typeof ScrollArea.Thumb>) {\n  return (\n    <ScrollArea.Thumb className={cn(styles.thumb, className)} {...props} />\n  );\n}\n\nfunction ScrollAreaCorner({\n  className,\n  ...props\n}: React.ComponentProps<typeof ScrollArea.Corner>) {\n  return (\n    <ScrollArea.Corner className={cn(styles.corner, className)} {...props} />\n  );\n}\n\nexport {\n  ScrollAreaRoot as ScrollArea,\n  ScrollAreaContent,\n  ScrollAreaCorner,\n  ScrollAreaScrollbar,\n  ScrollAreaThumb,\n  ScrollAreaViewport,\n};\n",
      "type": "registry:file",
      "target": "~/components/ui/scroll-area/scroll-area.tsx"
    },
    {
      "path": "registry/brook/ui/scroll-area/scroll-area.module.css",
      "content": ".root {\n  box-sizing: border-box;\n  width: 24rem;\n  height: 8.5rem;\n  max-width: calc(100vw - 8rem);\n}\n\n.viewport {\n  height: 100%;\n  border-radius: 0.375rem;\n\n  outline-offset: -1px;\n  overscroll-behavior: contain;\n  overflow: scroll;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n}\n\n.viewport::-webkit-scrollbar {\n  display: none;\n}\n\n.viewport:focus-visible {\n  outline: 2px solid var(--ring);\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  padding-block: 0.75rem;\n  padding-left: 1rem;\n  padding-right: 1.5rem;\n}\n\n.scrollbar {\n  display: flex;\n  justify-content: center;\n  background-color: var(--border);\n  width: 0.25rem;\n  border-radius: 0.375rem;\n  margin: 0.5rem;\n  opacity: 0;\n  transition: opacity 150ms 300ms;\n  touch-action: none;\n  user-select: none;\n}\n\n.scrollbar[data-scrolling] {\n  opacity: 1;\n  transition-duration: 75ms;\n  transition-delay: 0ms;\n}\n\n.scrollbar[data-hovering]:not([data-scrolling]) {\n  opacity: 0;\n}\n\n.scrollbar::before {\n  content: \"\";\n  position: absolute;\n  width: 1.25rem;\n  height: 100%;\n}\n\n.thumb {\n  width: 100%;\n  border-radius: inherit;\n  background-color: var(--muted-foreground);\n}\n\n.corner {\n  display: none;\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/scroll-area/scroll-area.module.css"
    }
  ]
}