{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "combobox",
  "type": "registry:item",
  "title": "Combobox",
  "description": "A searchable select component.",
  "files": [
    {
      "path": "registry/brook/ui/combobox/combobox.tsx",
      "content": "\"use client\";\n\nimport { Combobox } from \"@base-ui-components/react/combobox\";\nimport { Check, ChevronsUpDown, X } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport styles from \"./combobox.module.css\";\nimport React from \"react\";\n\nconst ComboboxRoot = ({ ...props }: React.ComponentProps<typeof Combobox.Root>) => (\n  <Combobox.Root {...props} />\n);\n\nconst ComboboxTrigger = ({ \n  className, \n  children,\n  ...props \n}: React.ComponentProps<typeof Combobox.Trigger>) => (\n  <Combobox.Trigger className={cn(styles.trigger, className)} {...props}>\n    {children}\n    <ChevronsUpDown size={16} className={styles.icon} />\n  </Combobox.Trigger>\n);\n\nconst ComboboxInput = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Combobox.Input>) => (\n  <Combobox.Input \n    className={cn(styles.input, className)} \n    {...props}\n  />\n);\n\nconst ComboboxClear = ({ \n  className,\n  children,\n  ...props \n}: React.ComponentProps<typeof Combobox.Clear>) => (\n  <Combobox.Clear className={cn(styles.clear, className)} {...props}>\n    {children || <X size={16} />}\n  </Combobox.Clear>\n);\n\nconst ComboboxPortal = Combobox.Portal;\n\nconst ComboboxPositioner = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Combobox.Positioner>) => (\n  <Combobox.Positioner \n    className={cn(styles.positioner, className)}\n    sideOffset={4}\n    {...props}\n  />\n);\n\nconst ComboboxPopup = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Combobox.Popup>) => (\n  <Combobox.Popup className={cn(styles.popup, className)} {...props} />\n);\n\nconst ComboboxList = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Combobox.List>) => (\n  <Combobox.List className={cn(styles.list, className)} {...props} />\n);\n\nconst ComboboxEmpty = ({ \n  className,\n  children,\n  ...props \n}: React.ComponentProps<typeof Combobox.Empty>) => (\n  <Combobox.Empty className={cn(styles.empty, className)} {...props}>\n    {children || \"No items found\"}\n  </Combobox.Empty>\n);\n\nconst ComboboxItem = ({ \n  className,\n  children,\n  indicatorPosition = \"left\",\n  ...props \n}: React.ComponentProps<typeof Combobox.Item> & { indicatorPosition?: \"left\" | \"right\" }) => (\n  <Combobox.Item className={cn(styles.item, className)} {...props}>\n    {indicatorPosition === \"left\" && (\n      <Combobox.ItemIndicator className={styles.itemIndicator}>\n        <Check size={16} />\n      </Combobox.ItemIndicator>\n    )}\n    {children}\n    {indicatorPosition === \"right\" && (\n      <Combobox.ItemIndicator className={styles.itemIndicator}>\n        <Check size={16} />\n      </Combobox.ItemIndicator>\n    )}\n  </Combobox.Item>\n);\n\nconst ComboboxItemIndicator = ({ \n  className,\n  children,\n  ...props \n}: React.ComponentProps<typeof Combobox.ItemIndicator>) => (\n  <Combobox.ItemIndicator className={cn(styles.itemIndicator, className)} {...props}>\n    {children || <Check size={16} />}\n  </Combobox.ItemIndicator>\n);\n\nconst ComboboxGroup = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Combobox.Group>) => (\n  <Combobox.Group className={cn(styles.group, className)} {...props} />\n);\n\nconst ComboboxGroupLabel = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Combobox.GroupLabel>) => (\n  <Combobox.GroupLabel className={cn(styles.groupLabel, className)} {...props} />\n);\n\nconst ComboboxArrow = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Combobox.Arrow>) => (\n  <Combobox.Arrow className={cn(styles.arrow, className)} {...props} />\n);\n\nconst ComboboxNoItems = ({ \n  className,\n  children,\n  ...props \n}: React.ComponentProps<\"div\">) => (\n  <div className={cn(styles.noItems, className)} {...props}>\n    {children || \"No items found\"}\n  </div>\n);\n\nexport {\n  ComboboxRoot as Combobox,\n  ComboboxTrigger,\n  ComboboxInput,\n  ComboboxClear,\n  ComboboxPortal,\n  ComboboxPositioner,\n  ComboboxPopup,\n  ComboboxList,\n  ComboboxEmpty,\n  ComboboxItem,\n  ComboboxItemIndicator,\n  ComboboxGroup,\n  ComboboxGroupLabel,\n  ComboboxArrow,\n  ComboboxNoItems,\n};",
      "type": "registry:file",
      "target": "~/components/ui/combobox/combobox.tsx"
    },
    {
      "path": "registry/brook/ui/combobox/combobox.module.css",
      "content": ".trigger {\n    box-sizing: border-box;\n    border: none;\n\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding: 0 0.5rem;\n}\n\n.trigger:focus-visible {\n    outline: 2px solid var(--ring);\n    outline-offset: 2px;\n}\n\n.trigger[data-disabled] {\n    opacity: 0.5;\n    cursor: not-allowed;\n}\n\n.input {\n    flex: 1;\n    background: transparent;\n    border: none;\n    outline: none;\n    font-size: 0.875rem;\n    color: var(--foreground);\n    width: 100%;\n    padding: 0.5rem 0.75rem;\n    height: 2.5rem;\n}\n\n.input::placeholder {\n    color: var(--muted-foreground);\n}\n\n.clear {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0.25rem;\n    border-radius: calc(var(--radius) - 2px);\n    cursor: pointer;\n    color: var(--muted-foreground);\n    transition: all 150ms ease;\n}\n\n.clear:hover {\n    color: var(--foreground);\n    background: var(--accent);\n}\n\n.icon {\n    margin-left: 0.5rem;\n    height: 1rem;\n    width: 1rem;\n    flex-shrink: 0;\n    opacity: 0.5;\n}\n\n.positioner {\n    position: absolute;\n    top: 100%;\n    left: 0;\n    z-index: 50;\n    width: var(--anchor-width);\n    margin-top: 0.25rem;\n}\n\n.popup {\n    max-height: 20rem;\n    overflow: auto;\n    background: var(--card);\n    border: 1px solid var(--border);\n    border-radius: var(--radius);\n    box-shadow:\n        0 10px 15px -3px rgba(0, 0, 0, 0.1),\n        0 4px 6px -2px rgba(0, 0, 0, 0.05);\n    outline: none;\n    animation: slideDown 150ms ease-out;\n    width: 100%;\n    padding: 0.25rem;\n}\n\n.popup[data-starting-style],\n.popup[data-ending-style] {\n    opacity: 0;\n    transform: translateY(-0.5rem);\n}\n\n@keyframes slideDown {\n    from {\n        opacity: 0;\n        transform: translateY(-0.5rem);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n.item {\n    position: relative;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    padding: 0.5rem 0.75rem;\n    font-size: 0.875rem;\n    border-radius: calc(var(--radius) - 2px);\n    cursor: pointer;\n    transition: all 150ms ease;\n    user-select: none;\n}\n\n.item:hover,\n.item[data-highlighted] {\n    background: var(--accent);\n    color: var(--foreground);\n}\n\n.item[data-disabled] {\n    opacity: 0.5;\n    cursor: not-allowed;\n}\n\n.item[data-selected] {\n    background: var(--accent);\n}\n\n.itemText {\n    flex: 1;\n}\n\n.itemIndicator {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 1rem;\n    width: 1rem;\n    opacity: 0;\n    transition: opacity 150ms ease;\n}\n\n.item[data-selected] .itemIndicator {\n    opacity: 1;\n}\n\n.group {\n    padding: 0.25rem 0;\n}\n\n.groupLabel {\n    padding: 0.5rem 0.75rem;\n    font-size: 0.75rem;\n    font-weight: 500;\n    color: var(--muted-foreground);\n}\n\n.arrow {\n    position: absolute;\n    top: -0.25rem;\n    left: 1rem;\n    width: 0.5rem;\n    height: 0.5rem;\n    background: var(--card);\n    border-top: 1px solid var(--border);\n    border-left: 1px solid var(--border);\n    transform: rotate(45deg);\n}\n\n.noItems {\n    padding: 2rem 1rem;\n    text-align: center;\n    font-size: 0.875rem;\n    color: var(--muted-foreground);\n}\n\n@media (max-width: 640px) {\n    .popup {\n        max-width: calc(100vw - 2rem);\n    }\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/combobox/combobox.module.css"
    }
  ]
}