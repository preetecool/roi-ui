{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "ai-chat",
  "type": "registry:block",
  "title": "AI Chat",
  "description": "An AI chat input component with mode selector and action buttons.",
  "files": [
    {
      "path": "registry/brook/blocks/ai-chat/ai-chat.tsx",
      "content": "\"use client\";\n\nimport {\n  ArrowUp,\n  AudioLines,\n  GraduationCap,\n  Lightbulb,\n  Paperclip,\n  WandSparkles,\n  Zap,\n} from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Button } from \"@/registry/brook/ui/button/button\";\nimport { Card, CardContent, CardFooter } from \"@/registry/brook/ui/card/card\";\nimport { Field, FieldControl } from \"@/registry/brook/ui/field/field\";\nimport { Form } from \"@/registry/brook/ui/form/form\";\nimport {\n  Select,\n  SelectIcon,\n  SelectItem,\n  SelectItemIndicator,\n  SelectItemText,\n  SelectPopup,\n  SelectPortal,\n  SelectPositioner,\n  SelectTrigger,\n  SelectValue,\n} from \"@/registry/brook/ui/select/select\";\nimport styles from \"./ai-chat.module.css\";\n\nconst aiModes = [\n  { value: \"creative\", label: \"Creative\", icon: WandSparkles },\n  { value: \"fast\", label: \"Fast\", icon: Zap },\n  { value: \"reasoning\", label: \"Reason\", icon: Lightbulb },\n  { value: \"teach\", label: \"Teach\", icon: GraduationCap },\n];\n\nexport function AiChat() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [selectedItem, setSelectedItem] = useState<string>(aiModes[0].value);\n\n  return (\n    <Form className={styles.form}>\n      <Card id={styles.card}>\n        <CardContent>\n          <Field className={styles.field}>\n            <FieldControl\n              placeholder=\"Ask and i'll answer.\"\n              render={\n                <textarea\n                  onChange={(e) => setInputValue(e.target.value)}\n                  style={{ outline: \"none\" }}\n                  value={inputValue}\n                />\n              }\n            />\n          </Field>\n        </CardContent>\n        <CardFooter className={styles.footer}>\n          <div style={{ display: \"flex\", gap: \"0.5rem\", alignItems: \"center\" }}>\n            <Button\n              className={styles.iconButton}\n              size=\"icon\"\n              style={{ width: \"32px\", height: \"32px\", borderRadius: \"50%\" }}\n              type=\"button\"\n              variant=\"outline\"\n            >\n              <Paperclip size={14} />\n            </Button>\n\n            <Select\n              defaultValue={aiModes[0].value}\n              items={aiModes}\n              onValueChange={(value) => setSelectedItem(value as string)}\n              value={selectedItem}\n            >\n              <SelectTrigger render={<Button size=\"sm\" variant=\"outline\" />}>\n                <SelectValue>\n                  {(value) => {\n                    const selectedMode = aiModes.find(\n                      (mode) => mode.value === value\n                    );\n                    const IconComponent = selectedMode?.icon;\n                    return (\n                      <div className={styles.triggerContent}>\n                        {IconComponent && <IconComponent size={14} />}\n                        <span>{selectedMode?.label}</span>\n                      </div>\n                    );\n                  }}\n                </SelectValue>\n                <SelectIcon />\n              </SelectTrigger>\n              <SelectPortal>\n                <SelectPositioner alignItemWithTrigger={false} sideOffset={8}>\n                  <SelectPopup className={styles.popup}>\n                    {aiModes.map(({ label, value, icon: IconComponent }) => (\n                      <SelectItem key={value} value={value}>\n                        <div className={styles.triggerContent}>\n                          <IconComponent size={14} />\n                          <SelectItemText>{label}</SelectItemText>\n                          <SelectItemIndicator />\n                        </div>\n                      </SelectItem>\n                    ))}\n                  </SelectPopup>\n                </SelectPositioner>\n              </SelectPortal>\n            </Select>\n          </div>\n\n          <Button\n            className={styles.iconButton}\n            size=\"icon\"\n            style={{ borderRadius: \"50%\", width: \"36px\", height: \"36px\" }}\n            type=\"submit\"\n            variant=\"outline\"\n          >\n            {inputValue.trim() ? (\n              <ArrowUp size={16} />\n            ) : (\n              <AudioLines size={16} />\n            )}\n          </Button>\n        </CardFooter>\n      </Card>\n    </Form>\n  );\n}\n",
      "type": "registry:file",
      "target": "~/components/blocks/ai-chat/ai-chat.tsx"
    },
    {
      "path": "registry/brook/blocks/ai-chat/ai-chat.module.css",
      "content": "#card {\n  padding: 0.75rem;\n  gap: 0.75rem;\n  width: 100%;\n  height: auto;\n  max-width: none;\n  min-width: 0;\n  flex: 1;\n  border-radius: var(--radius-lg);\n  border-color: var(--border);\n  background-color: var(--mix-card-50-bg);\n}\n\n.form {\n  width: 100%;\n}\n\n.iconButton {\n  padding: 8px;\n  border-radius: 50%;\n}\n\n.iconButton:first-child svg {\n  transform: rotate(-45deg);\n}\n\n.field textarea {\n  background-color: transparent;\n  border: none;\n  padding: 0.25rem;\n  resize: none;\n  min-height: 2.5rem;\n  height: auto;\n  outline: none !important;\n}\n\n.footer {\n  gap: 0.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.iconLabel {\n  display: \"flex\";\n  gap: 0.5rem;\n}\n\n.triggerContent {\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n  width: 100%;\n}\n\n.popup {\n  padding: 0.25rem;\n  width: 144px;\n  min-width: 144px;\n  max-width: 144px;\n  box-sizing: border-box;\n}\n\n@media (max-width: 1280px) {\n  .form {\n    height: 100%;\n  }\n\n  #aiChatCard {\n    height: 100%;\n  }\n\n  .field textarea {\n    min-height: 4rem;\n    height: 100%;\n    padding: 0.5rem;\n  }\n}\n\n@media (max-width: 640px) {\n  .form {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  #card {\n    margin: 0 auto;\n  }\n}\n",
      "type": "registry:file",
      "target": "~/components/blocks/ai-chat/ai-chat.module.css"
    }
  ]
}