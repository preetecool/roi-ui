{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "select",
  "type": "registry:item",
  "title": "Select",
  "description": "A customizable select component for choosing from a list of options.",
  "files": [
    {
      "path": "registry/brook/ui/select/select.tsx",
      "content": "\"use client\";\n\nimport { Select } from \"@base-ui-components/react/select\";\nimport { ChevronDown, Check } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport styles from \"./select.module.css\";\n\nconst SelectRoot = ({ ...props }: React.ComponentProps<typeof Select.Root>) => <Select.Root {...props} />;\n\nconst SelectTrigger = ({ className, children, ...props }: React.ComponentPropsWithoutRef<typeof Select.Trigger>) => (\n  <Select.Trigger className={cn(styles.trigger, className)} nativeButton {...props}>\n    {children}\n  </Select.Trigger>\n);\n\nconst SelectValue = ({ className, children, ...props }: React.ComponentPropsWithoutRef<typeof Select.Value>) => (\n  <Select.Value className={cn(styles.value, className)} {...props}>\n    {children}\n  </Select.Value>\n);\n\nconst SelectIcon = ({ className, children, ...props }: React.ComponentPropsWithoutRef<typeof Select.Icon>) => (\n  <Select.Icon className={cn(styles.icon, className)} {...props}>\n    {children || <ChevronDown size={16} />}\n  </Select.Icon>\n);\n\nconst SelectPortal = ({ ...props }: React.ComponentPropsWithoutRef<typeof Select.Portal>) => (\n  <Select.Portal {...props} />\n);\n\nconst SelectPositioner = ({ className, ...props }: React.ComponentPropsWithoutRef<typeof Select.Positioner>) => (\n  <Select.Positioner className={cn(styles.positioner, className)} {...props} />\n);\n\nconst SelectPopup = ({ className, ...props }: React.ComponentPropsWithoutRef<typeof Select.Popup>) => (\n  <Select.Popup className={cn(styles.popup, className)} {...props} />\n);\n\nconst SelectList = ({ className, ...props }: React.ComponentPropsWithoutRef<typeof Select.List>) => (\n  <Select.List className={cn(className)} {...props} />\n);\n\nconst SelectItem = ({ className, ...props }: React.ComponentPropsWithoutRef<typeof Select.Item>) => (\n  <Select.Item className={cn(styles.item, className)} {...props} />\n);\n\nconst SelectItemText = ({ className, ...props }: React.ComponentPropsWithoutRef<typeof Select.ItemText>) => (\n  <Select.ItemText className={cn(styles.itemText, className)} {...props} />\n);\n\nconst SelectGroup = ({ className, ...props }: React.ComponentProps<typeof Select.Group>) => (\n  <Select.Group className={cn(styles.selectGroup, className)} {...props} />\n);\n\nconst SelectItemIndicator = ({\n  className,\n  children,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof Select.ItemIndicator>) => (\n  <Select.ItemIndicator className={cn(styles.indicator, className)} {...props}>\n    {children || <Check size={16} />}\n  </Select.ItemIndicator>\n);\n\nexport {\n  SelectRoot as Select,\n  SelectTrigger,\n  SelectValue,\n  SelectIcon,\n  SelectPortal,\n  SelectPositioner,\n  SelectPopup,\n  SelectList,\n  SelectItem,\n  SelectItemText,\n  SelectGroup,\n  SelectItemIndicator,\n};\n",
      "type": "registry:file",
      "target": "~/components/ui/select/select.tsx"
    },
    {
      "path": "registry/brook/ui/select/select.module.css",
      "content": ".container {\n    position: relative;\n    display: inline-block;\n}\n\n.trigger {\n    min-width: 9rem;\n}\n.trigger:hover:not(.disabled) {\n    background-color: var(--muted);\n    color: var(--title-hover);\n}\n\n.trigger:focus-visible {\n    outline: 2px solid var(--ring);\n    outline-offset: 2px;\n}\n\n.trigger[data-popup-open] {\n    background-color: var(--muted);\n    color: var(--title-hover);\n}\n\n.trigger.disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n}\n\n.value {\n    flex: 1;\n    text-align: left;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.value[data-placeholder] {\n    color: var(--muted-foreground);\n}\n\n.icon {\n    margin-left: 0.5rem;\n    height: 1rem;\n    width: 1rem;\n    flex-shrink: 0;\n    opacity: 0.5;\n    transition: transform 0.2s ease-in-out;\n}\n\n.trigger[data-popup-open] .icon {\n    transform: rotate(180deg);\n}\n\n.popup {\n    min-width: var(--anchor-width);\n    padding: 0.25rem;\n    background: color-mix(in oklch, var(--card) 33%, var(--background));\n    border: 1px solid var(--border);\n    border-radius: var(--radius);\n    animation: popup-in 0.15s ease-out;\n    max-height: 300px;\n    overflow-y: auto;\n    z-index: 100;\n}\n\n.item {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0.5rem 0.75rem;\n    font-size: 0.875rem;\n    color: var(--foreground);\n    cursor: pointer;\n    border-radius: calc(var(--radius) - 2px);\n    transition: all 0.2s ease-in-out;\n    outline: none;\n}\n\n.item:hover:not(.itemDisabled) {\n    background-color: var(--muted);\n    color: var(--title-hover);\n}\n\n.item[data-highlighted] {\n    background-color: var(--muted);\n    color: var(--title-hover);\n}\n\n.item[data-selected] {\n    background-color: transparent;\n}\n\n.item.itemDisabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n}\n\n.itemText {\n    flex: 1;\n    text-align: left;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n\n.indicator {\n    margin-left: 0.5rem;\n    height: 1rem;\n    width: 1rem;\n    flex-shrink: 0;\n    opacity: 0;\n    transition: opacity 0.2s ease-in-out;\n}\n\n.item[data-selected] .indicator {\n    opacity: 1;\n}\n\n@keyframes popup-in {\n    from {\n        opacity: 0;\n        transform: scale(0.95) translateY(-10px);\n    }\n    to {\n        opacity: 1;\n        transform: scale(1) translateY(0);\n    }\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/select/select.module.css"
    }
  ]
}