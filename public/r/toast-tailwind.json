{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "toast-tailwind",
  "type": "registry:ui",
  "title": "Toast (Tailwind)",
  "description": "A succinct message notification.",
  "files": [
    {
      "path": "registry/brook/tailwind/ui/toast.tsx",
      "content": "\"use client\";\n\nimport { Toast } from \"@base-ui-components/react/toast\";\nimport { X } from \"lucide-react\";\nimport { cn } from \"@/lib/tw-utils\";\n\nconst toastManager = Toast.createToastManager();\n\nfunction ToastProvider({ children, ...props }: Toast.Provider.Props) {\n  return (\n    <Toast.Provider toastManager={toastManager} {...props}>\n      {children}\n      <Toast.Portal>\n        <ToastViewport>\n          <ToastList />\n        </ToastViewport>\n      </Toast.Portal>\n    </Toast.Provider>\n  );\n}\n\nfunction ToastViewport({ className, ...props }: Toast.Viewport.Props) {\n  return (\n    <Toast.Viewport\n      className={cn(\n        \"fixed top-auto right-4 bottom-4 left-auto z-[1000] m-auto w-[250px]\",\n        \"sm:right-8 sm:bottom-8 sm:w-[340px]\",\n        className\n      )}\n      data-slot=\"toast-viewport\"\n      {...props}\n    />\n  );\n}\n\nfunction ToastRoot({ className, ...props }: Toast.Root.Props) {\n  return (\n    <Toast.Root\n      className={cn(\n        \"[--gap:0.75rem]\",\n        \"[--peek:0.75rem]\",\n        \"[--scale:calc(max(0,1-(var(--toast-index)*0.1)))]\",\n        \"[--shrink:calc(1-var(--scale))]\",\n        \"[--height:var(--toast-frontmost-height,var(--toast-height))]\",\n        \"[--offset-y:calc(var(--toast-offset-y)*-1+calc(var(--toast-index)*var(--gap)*-1)+var(--toast-swipe-movement-y))]\",\n        \"absolute right-0 bottom-0 left-auto z-[calc(1000-var(--toast-index))] mr-0 w-full origin-bottom\",\n        \"select-none rounded-[0.5rem] border-[0.5px] border-[oklch(from_var(--border)_l_c_h_/_0.5)] bg-[var(--mix-card-5-bg)] bg-clip-padding p-4\",\n        \"shadow-[oklch(from_var(--border)_l_c_h_/_0.2)_0px_1px_1px,oklch(from_var(--border)_l_c_h_/_0.2)_0px_1px_1px,oklch(from_var(--border)_l_c_h_/_0.2)_0px_1px_1px]\",\n        \"[transform:translateX(var(--toast-swipe-movement-x))_translateY(calc(var(--toast-swipe-movement-y)-(var(--toast-index)*var(--peek))-(var(--shrink)*var(--height))))_scale(var(--scale))]\",\n        \"after:absolute after:top-full after:left-0 after:h-[calc(var(--gap)+1px)] after:w-full after:content-['']\",\n        \"data-[ending-style]:opacity-0\",\n        \"data-[expanded]:[transform:translateX(var(--toast-swipe-movement-x))_translateY(calc(var(--offset-y)))]\",\n        \"data-[limited]:opacity-0\",\n        \"data-[starting-style]:[transform:translateY(150%)]\",\n        \"[&[data-ending-style]:not([data-limited]):not([data-swipe-direction])]:[transform:translateY(150%)]\",\n        \"data-[ending-style]:data-[swipe-direction=down]:[transform:translateY(calc(var(--toast-swipe-movement-y)+150%))]\",\n        \"data-[expanded]:data-[ending-style]:data-[swipe-direction=down]:[transform:translateY(calc(var(--toast-swipe-movement-y)+150%))]\",\n        \"data-[ending-style]:data-[swipe-direction=left]:[transform:translateX(calc(var(--toast-swipe-movement-x)-150%))_translateY(var(--offset-y))]\",\n        \"data-[expanded]:data-[ending-style]:data-[swipe-direction=left]:[transform:translateX(calc(var(--toast-swipe-movement-x)-150%))_translateY(var(--offset-y))]\",\n        \"data-[ending-style]:data-[swipe-direction=right]:[transform:translateX(calc(var(--toast-swipe-movement-x)+150%))_translateY(var(--offset-y))]\",\n        \"data-[expanded]:data-[ending-style]:data-[swipe-direction=right]:[transform:translateX(calc(var(--toast-swipe-movement-x)+150%))_translateY(var(--offset-y))]\",\n        \"data-[ending-style]:data-[swipe-direction=up]:[transform:translateY(calc(var(--toast-swipe-movement-y)-150%))]\",\n        \"data-[expanded]:data-[ending-style]:data-[swipe-direction=up]:[transform:translateY(calc(var(--toast-swipe-movement-y)-150%))]\",\n        \"h-[var(--height)]\",\n        \"data-[expanded]:h-[var(--toast-height)]\",\n        \"[transition:transform_0.6s_cubic-bezier(0.22,1,0.36,1),opacity_0.5s,height_0.17s_var(--ease-out-expo)]\",\n        className\n      )}\n      data-slot=\"toast-root\"\n      {...props}\n    />\n  );\n}\n\nfunction ToastContent({ className, ...props }: Toast.Content.Props) {\n  return (\n    <Toast.Content\n      className={cn(\n        \"overflow-hidden transition-opacity [transition-duration:350ms]\",\n        \"data-[behind]:pointer-events-none data-[behind]:opacity-0\",\n        \"data-[expanded]:pointer-events-auto data-[expanded]:opacity-100\",\n        className\n      )}\n      data-slot=\"toast-content\"\n      {...props}\n    />\n  );\n}\n\nfunction ToastTitle({ className, ...props }: Toast.Title.Props) {\n  return (\n    <Toast.Title\n      className={cn(\n        \"m-0 font-[450] text-[0.975rem] text-[var(--foreground)] leading-5 tracking-[-0.02em]\",\n        className\n      )}\n      data-slot=\"toast-title\"\n      {...props}\n    />\n  );\n}\n\nfunction ToastDescription({ className, ...props }: Toast.Description.Props) {\n  return (\n    <Toast.Description\n      className={cn(\n        \"m-0 mt-1 text-[0.875rem] text-[var(--secondary-foreground)] leading-5 tracking-[-0.02em]\",\n        className\n      )}\n      data-slot=\"toast-description\"\n      {...props}\n    />\n  );\n}\n\nfunction ToastAction({ className, ...props }: Toast.Action.Props) {\n  return (\n    <Toast.Action\n      className={cn(\n        \"inline-flex h-8 items-center justify-center rounded px-3\",\n        \"font-medium text-sm leading-5\",\n        \"mt-2 cursor-pointer border-none\",\n        \"bg-[var(--primary)] text-[var(--primary-foreground)]\",\n        \"transition-all duration-150\",\n        \"hover:opacity-90\",\n        \"focus:outline-none\",\n        \"focus-visible:outline focus-visible:outline-2 focus-visible:outline-[var(--ring)] focus-visible:outline-offset-2\",\n        className\n      )}\n      data-slot=\"toast-action\"\n      {...props}\n    />\n  );\n}\n\nfunction ToastClose({ className, children, ...props }: Toast.Close.Props) {\n  return (\n    <Toast.Close\n      className={cn(\n        \"absolute top-2 right-2 flex h-5 w-5 items-center justify-center rounded-sm border-none bg-transparent\",\n        \"text-[oklch(from_var(--foreground)_l_c_h_/_0.3)] transition-all duration-150\",\n        \"hover:bg-[var(--muted)] hover:text-[var(--foreground)]\",\n        \"focus:outline-none\",\n        \"focus-visible:outline focus-visible:outline-2 focus-visible:outline-[var(--ring)] focus-visible:outline-offset-2\",\n        className\n      )}\n      data-slot=\"toast-close\"\n      {...props}\n    >\n      {children}\n    </Toast.Close>\n  );\n}\n\nfunction ToastList() {\n  const { toasts } = Toast.useToastManager();\n  return toasts.map((toast) => (\n    <ToastRoot key={toast.id} toast={toast}>\n      <ToastContent>\n        <div className=\"flex items-start justify-between gap-2\">\n          <div className=\"min-w-0 flex-1\">\n            <div className=\"flex items-center gap-2\">\n              <ToastTitle />\n              {toast.type && (\n                <span\n                  className={cn(\n                    \"inline-block h-[5px] w-[10px] rounded-[var(--radius)]\",\n                    toast.type === \"success\" && \"bg-[var(--success)]\",\n                    toast.type === \"error\" && \"bg-[var(--destructive)]\",\n                    toast.type === \"warning\" && \"bg-[var(--warning)]\",\n                    toast.type === \"info\" && \"bg-[var(--info)]\"\n                  )}\n                />\n              )}\n            </div>\n            <ToastDescription />\n            {toast.actionProps && (\n              <ToastAction className=\"mt-2\">\n                {toast.actionProps.children}\n              </ToastAction>\n            )}\n          </div>\n        </div>\n        {toast.data?.showCloseButton === true && (\n          <ToastClose>\n            <X className=\"h-4 w-4\" />\n          </ToastClose>\n        )}\n      </ToastContent>\n    </ToastRoot>\n  ));\n}\n\n// biome-ignore lint/performance/noBarrelFile: Re-exporting icon as part of component API\nexport { X as CloseIcon } from \"lucide-react\";\n\nexport { ToastProvider, toastManager };\n",
      "type": "registry:file",
      "target": "~/components/ui/toast/toast.tsx"
    }
  ]
}