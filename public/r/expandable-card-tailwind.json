{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "expandable-card-tailwind",
  "type": "registry:item",
  "title": "Expandable Card (Tailwind)",
  "description": "A card component that can expand to show more content.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "registry/brook/tailwind/blocks/expandable-card.tsx",
      "content": "\"use client\";\nimport { Dialog } from \"@base-ui-components/react/dialog\";\nimport { Plus, X } from \"lucide-react\";\nimport { AnimatePresence, motion } from \"motion/react\";\nimport { useState } from \"react\";\nimport { cn } from \"@/lib/tw-utils\";\n\ntype ExpandableCardItem = {\n  id: string | number;\n  imageSrc: string;\n  alt: string;\n  cardHeading: string;\n  content?: React.ReactNode;\n};\n\ntype ExpandableCardProps = {\n  item: ExpandableCardItem;\n};\n\nexport default function ExpandableCard({ item }: ExpandableCardProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className=\"relative h-fit w-fit\">\n      <Dialog.Root onOpenChange={setIsOpen} open={isOpen}>\n        <AnimatePresence>\n          {isOpen && (\n            <Dialog.Backdrop\n              hidden={undefined}\n              key=\"overlay\"\n              render={\n                <motion.div\n                  animate={{\n                    opacity: 0.99,\n                  }}\n                  className=\"fixed inset-0 z-[100] min-h-dvh bg-background\"\n                  exit={{ opacity: 0 }}\n                  initial={{ opacity: 0 }}\n                  transition={{\n                    delay: 0.1,\n                    duration: 0.25,\n                    // biome-ignore lint/style/noMagicNumbers: cubic-bezier easing values\n                    ease: [0.19, 1, 0.22, 1],\n                  }}\n                />\n              }\n            />\n          )}\n        </AnimatePresence>\n        <Dialog.Portal keepMounted>\n          <AnimatePresence>\n            {isOpen && (\n              <div\n                className=\"pointer-events-none fixed inset-0 z-[9999] flex max-h-full items-center justify-center overflow-y-auto\"\n                key=\"positioner\"\n              >\n                <Dialog.Popup\n                  hidden={undefined}\n                  render={\n                    <motion.div\n                      className={cn(\n                        \"fixed top-[5vh] max-h-dvh w-full max-w-[960px] overflow-hidden\",\n                        \"border-[0.5px] border-[oklch(from_var(--border)_l_c_h/0.6)] bg-[var(--mix-card-15-bg)] p-0\",\n                        \"pointer-events-auto flex flex-col items-center gap-[16px]\",\n                        \"transform-none animate-none opacity-100 transition-none\",\n                        \"scrollbar-thin scrollbar-thumb-[var(--border)] scrollbar-track-transparent\"\n                      )}\n                      layoutId={`card-${item.id}`}\n                      style={{\n                        borderRadius: \"32px\",\n                        overflow: \"hidden\",\n                      }}\n                    />\n                  }\n                >\n                  <div\n                    className={cn(\n                      \"relative flex h-full w-full flex-col items-center gap-[16px] overflow-y-auto px-6 pt-0 pb-[12vh]\",\n                      \"scrollbar-thin scrollbar-thumb-[var(--border)] scrollbar-track-transparent\"\n                    )}\n                    style={{\n                      maskImage:\n                        \"linear-gradient(to bottom, var(--background) calc(100% - 10vh), oklch(from var(--background) l c h / 0.33) calc(100% - calc(8vh / 2)), transparent 100%)\",\n                      WebkitMaskImage:\n                        \"linear-gradient(to bottom, var(--background) calc(100% - 10vh), oklch(from var(--background) l c h / 0.33) calc(100% - calc(8vh / 2)), transparent 100%)\",\n                    }}\n                  >\n                    <div className=\"sticky top-8 z-20 flex h-11 w-11 cursor-pointer items-center justify-center self-end rounded-full\">\n                      <Dialog.Close\n                        aria-label=\"Close\"\n                        className={cn(\n                          \"z-20 h-8 w-8 rounded-full border-[0.5px] border-[oklch(from_var(--border)_l_c_h_/_0.7)]\",\n                          \"flex cursor-pointer items-center justify-center bg-transparent text-[var(--muted-foreground)] transition-[150ms_ease-out]\",\n                          \"hover:bg-[var(--muted)] hover:text-[var(--foreground)]\"\n                        )}\n                        render={\n                          <motion.button\n                            animate={{ opacity: 1 }}\n                            exit={{ opacity: 0, display: \"flex\" }}\n                            initial={{ opacity: 0 }}\n                            transition={{\n                              type: \"spring\",\n                              duration: 0.3,\n                              delay: 0.1,\n                            }}\n                          />\n                        }\n                      >\n                        <X height={21} strokeWidth={2} width={21} />\n                      </Dialog.Close>\n                    </div>\n\n                    <motion.img\n                      alt={item.alt}\n                      className=\"h-auto w-full max-w-[700px] object-contain\"\n                      height={600}\n                      layoutId={`image-${item.id}`}\n                      src={item.imageSrc}\n                      style={{ borderRadius: \"24px\" }}\n                      width={600}\n                    />\n\n                    <motion.div className=\"mx-auto flex h-auto w-full max-w-[700px] flex-col items-start gap-9 pt-7 pr-0 pb-0 pl-0 text-left leading-[2]\">\n                      <motion.div layoutId={`heading-${item.id}`}>\n                        <h3 className=\"m-0 w-full self-start font-medium text-[48px] text-[var(--foreground)] leading-[1.5] tracking-[-0.02em]\">\n                          {item.cardHeading}\n                        </h3>\n                      </motion.div>\n\n                      <motion.div\n                        animate={{ opacity: 1, y: 0, scale: 1 }}\n                        className=\"text-[oklch(from_var(--secondary-foreground)_l_c_h_/_0.8)]\"\n                        exit={{\n                          opacity: 0,\n                          display: \"block\",\n                          y: -40,\n                          scale: 0.92,\n                        }}\n                        initial={{ opacity: 0, y: -40, scale: 0.92 }}\n                        transition={{\n                          delay: 0.1,\n                          duration: 0.3,\n                          type: \"spring\",\n                        }}\n                      >\n                        {item.content}\n                      </motion.div>\n                    </motion.div>\n                  </div>\n                </Dialog.Popup>\n              </div>\n            )}\n          </AnimatePresence>\n        </Dialog.Portal>\n\n        <Dialog.Trigger\n          render={\n            <motion.button\n              className=\"flex w-[320px] cursor-pointer flex-col items-center overflow-hidden border-[0.5px] border-[oklch(from_var(--border)_l_c_h_/_0.7)] bg-transparent p-0 focus-visible:outline-2 focus-visible:outline-[var(--ring)] focus-visible:outline-offset-2\"\n              layoutId={`card-${item.id}`}\n              style={{\n                all: \"unset\",\n                cursor: \"pointer\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                width: \"320px\",\n                border: \"0.5px solid oklch(from var(--border) l c h / 0.7)\",\n                overflow: \"hidden\",\n                borderRadius: \"24px\",\n              }}\n            />\n          }\n        >\n          <motion.img\n            alt={item.alt}\n            className=\"h-[320px] w-full object-cover\"\n            height={300}\n            layoutId={`image-${item.id}`}\n            src={item.imageSrc}\n            style={{ borderRadius: \"24px\" }}\n            width={300}\n          />\n\n          <div className=\"flex w-full items-center justify-center p-4\">\n            <motion.div layoutId={`heading-${item.id}`}>\n              <h3 className=\"m-0 font-medium text-2xl text-[var(--secondary-foreground)] leading-[1.5] tracking-[-0.02em] transition-[150ms_ease-out]\">\n                {item.cardHeading}\n              </h3>\n            </motion.div>\n\n            <motion.div className=\"ml-auto flex h-9 min-h-9 w-9 min-w-9 shrink-0 items-center justify-center rounded-full border-[0.5px] border-[oklch(from_var(--border)_l_c_h_/_0.7)] text-[var(--muted-foreground)] transition-[150ms_ease-out] hover:bg-[var(--card)] hover:text-[var(--foreground)]\">\n              <Plus height={21} strokeWidth={2} width={21} />\n            </motion.div>\n          </div>\n        </Dialog.Trigger>\n      </Dialog.Root>\n    </div>\n  );\n}\n\nexport type { ExpandableCardItem };\n",
      "type": "registry:file",
      "target": "~/components/blocks/expandable-card/expandable-card.tsx"
    }
  ]
}