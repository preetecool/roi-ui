{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "card-task-tailwind",
  "type": "registry:block",
  "title": "Card Task (Tailwind)",
  "description": "A task card component with badges, avatars, and action menu.",
  "files": [
    {
      "path": "registry/brook/tailwind/blocks/card-task.tsx",
      "content": "\"use client\";\n\nimport {\n  Calendar,\n  ListTodo,\n  MessageCircleMore,\n  MoreHorizontal,\n  Trash,\n  UserPlus,\n  Users,\n} from \"lucide-react\";\nimport { useRef, useState } from \"react\";\nimport { cn } from \"@/lib/tw-utils\";\nimport {\n  AlertDialog,\n  AlertDialogClose,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/registry/brook/tailwind/ui/alert-dialog\";\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/registry/brook/tailwind/ui/avatar\";\nimport { Badge } from \"@/registry/brook/tailwind/ui/badge\";\nimport { Button } from \"@/registry/brook/tailwind/ui/button\";\nimport {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/brook/tailwind/ui/card\";\nimport {\n  Combobox,\n  ComboboxEmpty,\n  ComboboxInput,\n  ComboboxItem,\n  ComboboxList,\n  ComboboxPopup,\n  ComboboxPortal,\n  ComboboxPositioner,\n  ComboboxTrigger,\n} from \"@/registry/brook/tailwind/ui/combobox\";\nimport {\n  Dialog,\n  DialogClose,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPopup,\n  DialogPortal,\n  DialogTitle,\n} from \"@/registry/brook/tailwind/ui/dialog\";\nimport {\n  DropdownMenu,\n  DropdownMenuItem,\n  DropdownMenuPopup,\n  DropdownMenuPortal,\n  DropdownMenuPositioner,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/registry/brook/tailwind/ui/dropdown-menu\";\nimport {\n  Tooltip,\n  TooltipArrow,\n  TooltipPopup,\n  TooltipPortal,\n  TooltipPositioner,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/registry/brook/tailwind/ui/tooltip\";\n\ntype User = {\n  value: string;\n  label: string;\n  email: string;\n  avatar: string;\n};\n\nconst users: User[] = [\n  {\n    value: \"preetecool\",\n    label: \"preetecool\",\n    email: \"@preetecool\",\n    avatar: \"/preetecool.png\",\n  },\n  {\n    value: \"john-doe\",\n    label: \"John Doe\",\n    email: \"john@example.com\",\n    avatar:\n      \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=32&h=32&fit=crop&crop=face\",\n  },\n  {\n    value: \"jane-smith\",\n    label: \"Jane Smith\",\n    email: \"jane@example.com\",\n    avatar:\n      \"https://images.unsplash.com/photo-1494790108755-2616b612b786?w=32&h=32&fit=crop&crop=face\",\n  },\n  {\n    value: \"mike-johnson\",\n    label: \"Mike Johnson\",\n    email: \"mike@example.com\",\n    avatar:\n      \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=32&h=32&fit=crop&crop=face\",\n  },\n];\n\nexport function CardTask() {\n  const [alertOpen, setAlertOpen] = useState(false);\n  const [collaboratorDialogOpen, setCollaboratorDialogOpen] = useState(false);\n  const [currentCollaborators] = useState<User[]>([users[0]]);\n  const comboboxAnchorRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <>\n      <Card className=\"w-full max-w-[300px] gap-4 p-4 xl:min-h-auto\">\n        <CardHeader>\n          <CardTitle style={{ fontSize: \"1rem\" }}>\n            {\" \"}\n            Update Documentation\n          </CardTitle>\n          <CardDescription>\n            Update the card component documentation to reflect the new style\n          </CardDescription>\n          <CardAction>\n            <DropdownMenu>\n              <DropdownMenuTrigger\n                render={(props) => (\n                  <Button {...props} size=\"icon\" variant=\"ghost\">\n                    <MoreHorizontal\n                      size=\"16\"\n                      style={{\n                        color:\n                          \"oklch(from var(--muted-foreground) l c h / 0.8)\",\n                      }}\n                    />\n                  </Button>\n                )}\n              />\n              <DropdownMenuPortal>\n                <DropdownMenuPositioner sideOffset={8}>\n                  <DropdownMenuPopup\n                    render={<ul />}\n                    style={{ minWidth: \"160px\" }}\n                  >\n                    <div style={{ height: \"4px\", width: \"100%\" }} />\n                    <DropdownMenuItem\n                      icon={<UserPlus size=\"14\" />}\n                      onClick={() => setCollaboratorDialogOpen(true)}\n                      render={<li />}\n                    >\n                      Add collaborator\n                    </DropdownMenuItem>\n                    <DropdownMenuItem\n                      icon={<Calendar size=\"14\" />}\n                      render={<li />}\n                    >\n                      Change due date\n                    </DropdownMenuItem>\n                    <DropdownMenuSeparator />\n                    <DropdownMenuItem\n                      className={cn(\n                        \"isolate text-[var(--destructive)]\",\n                        \"[&_svg]:text-[var(--destructive)]\",\n                        \"before:-z-[1] before:absolute before:inset-0 before:inset-x-1 before:rounded-[0.3rem] before:bg-transparent before:content-['']\",\n                        \"hover:before:bg-[var(--destructive)]\",\n                        \"hover:text-[var(--destructive-foreground)]\",\n                        \"hover:[&_svg]:text-[var(--destructive-foreground)]\"\n                      )}\n                      icon={<Trash size=\"14\" />}\n                      onClick={() => setAlertOpen(true)}\n                      render={<li />}\n                    >\n                      Delete task\n                    </DropdownMenuItem>\n                    <div style={{ height: \"4px\", width: \"100%\" }} />\n                  </DropdownMenuPopup>\n                </DropdownMenuPositioner>\n              </DropdownMenuPortal>\n            </DropdownMenu>\n          </CardAction>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex w-full items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <Badge size=\"sm\" variant=\"destructive\">\n                <span>Urgent</span>\n              </Badge>\n              <Badge size=\"sm\">\n                <span>Docs</span>\n              </Badge>\n            </div>\n            <TooltipProvider>\n              <Tooltip>\n                <TooltipTrigger\n                  render={\n                    <div>\n                      <Avatar style={{ width: \"24px\", height: \"24px\" }}>\n                        <AvatarImage\n                          alt=\"profile image for @preetecool\"\n                          src=\"/preetecool.png\"\n                        />\n                        <AvatarFallback>AD</AvatarFallback>\n                      </Avatar>\n                    </div>\n                  }\n                />\n                <TooltipPortal>\n                  <TooltipPositioner>\n                    <TooltipPopup>\n                      <TooltipArrow />\n                      preetecool\n                    </TooltipPopup>\n                  </TooltipPositioner>\n                </TooltipPortal>\n              </Tooltip>\n            </TooltipProvider>\n          </div>\n        </CardContent>\n\n        <CardFooter className=\"mt-0 mb-0 flex flex-col gap-[0.65rem]\">\n          <div\n            style={{\n              padding: \"5px 0\",\n              width: \"calc(100% + 32px)\",\n              marginLeft: \"-16px\",\n              marginRight: \"-16px\",\n            }}\n          >\n            <div\n              style={{\n                height: \"1px\",\n                width: \"100%\",\n                borderBottom:\n                  \"0.5px solid oklch(from var(--border) l c h / 0.6)\",\n              }}\n            />\n          </div>\n          <div className=\"flex w-full justify-between text-[oklch(from_var(--muted-foreground)_l_c_h_/_0.6)] text-xs\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"flex items-center justify-center gap-1\">\n                <Users size=\"14\" />\n\n                <span>2</span>\n              </div>\n              <div className=\"flex items-center justify-center gap-1\">\n                <MessageCircleMore size=\"14\" />\n                <span>4</span>\n              </div>\n              <div className=\"flex items-center justify-center gap-1\">\n                <ListTodo size=\"14\" />\n                <span>4/5</span>\n              </div>\n            </div>\n            <div className=\"flex items-center justify-center gap-1\">\n              <Calendar size=\"14\" />\n              <span className=\"text-[var(--warning-foreground)]\">1d </span>\n            </div>\n          </div>\n        </CardFooter>\n      </Card>\n\n      <AlertDialog onOpenChange={setAlertOpen} open={alertOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Delete Task</AlertDialogTitle>\n            <AlertDialogDescription>\n              Are you sure you want to delete this task?\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogClose\n              render={<Button variant=\"outline\">Cancel</Button>}\n            />\n            <Button onClick={() => setAlertOpen(false)} variant=\"destructive\">\n              Delete\n            </Button>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n\n      <Dialog\n        onOpenChange={setCollaboratorDialogOpen}\n        open={collaboratorDialogOpen}\n      >\n        <DialogPortal>\n          <DialogOverlay />\n          <DialogPopup style={{ maxWidth: \"410px\" }}>\n            <DialogHeader>\n              <DialogTitle>Add Collaborator</DialogTitle>\n              <DialogDescription>\n                Invite a team member to collaborate on this task.\n              </DialogDescription>\n            </DialogHeader>\n\n            <div\n              style={{ display: \"flex\", flexDirection: \"column\", gap: \"1rem\" }}\n            >\n              {/* Current Collaborators */}\n              <div>\n                <div\n                  style={{\n                    fontSize: \"0.875rem\",\n                    fontWeight: 500,\n                    marginBottom: \"0.5rem\",\n                    display: \"block\",\n                  }}\n                >\n                  Current Collaborators\n                </div>\n                <div\n                  style={{\n                    display: \"flex\",\n                    gap: \"0.5rem\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <TooltipProvider>\n                    {currentCollaborators.map((collaborator) => (\n                      <Tooltip key={collaborator.value}>\n                        <TooltipTrigger\n                          render={\n                            <div>\n                              <Avatar style={{ width: \"32px\", height: \"32px\" }}>\n                                <AvatarImage\n                                  alt={collaborator.label}\n                                  src={collaborator.avatar}\n                                />\n                                <AvatarFallback>\n                                  {collaborator.label\n                                    .split(\" \")\n                                    .map((n: string) => n[0])\n                                    .join(\"\")}\n                                </AvatarFallback>\n                              </Avatar>\n                            </div>\n                          }\n                        />\n                        <TooltipPortal>\n                          <TooltipPositioner>\n                            <TooltipPopup>\n                              <TooltipArrow />\n                              {collaborator.label}\n                            </TooltipPopup>\n                          </TooltipPositioner>\n                        </TooltipPortal>\n                      </Tooltip>\n                    ))}\n                  </TooltipProvider>\n                </div>\n              </div>\n\n              {/* Add New Collaborator */}\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"0.5rem\",\n                }}\n              >\n                <div style={{ fontSize: \"0.875rem\", fontWeight: 500 }}>\n                  Add New Collaborator\n                </div>\n                <Combobox<User>\n                  items={users}\n                  itemToStringLabel={(item) => item?.label || \"\"}\n                  itemToStringValue={(item) => item?.value || \"\"}\n                >\n                  <div\n                    ref={comboboxAnchorRef}\n                    style={{\n                      position: \"relative\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      width: \"100%\",\n                      border: \"1px solid var(--border)\",\n                      borderRadius: \"var(--radius)\",\n                      background: \"var(--mix-card-50-bg)\",\n                      transition: \"all 150ms ease\",\n                    }}\n                  >\n                    <ComboboxInput placeholder=\"Search users...\" />\n                    <ComboboxTrigger />\n                  </div>\n\n                  <ComboboxPortal>\n                    <ComboboxPositioner anchor={comboboxAnchorRef}>\n                      <ComboboxPopup style={{ width: \"var(--anchor-width)\" }}>\n                        <ComboboxEmpty>No user found.</ComboboxEmpty>\n                        <ComboboxList>\n                          {(user: User) => (\n                            <ComboboxItem\n                              indicatorPosition=\"right\"\n                              key={user.value}\n                              value={user}\n                            >\n                              <div\n                                style={{\n                                  display: \"flex\",\n                                  alignItems: \"center\",\n                                  gap: \"1rem\",\n                                  flex: 1,\n                                }}\n                              >\n                                <Avatar\n                                  style={{ width: \"1.5rem\", height: \"1.5rem\" }}\n                                >\n                                  <AvatarImage\n                                    alt={user.label}\n                                    src={user.avatar}\n                                  />\n                                  <AvatarFallback>\n                                    {user.label\n                                      .split(\" \")\n                                      .map((n: string) => n[0])\n                                      .join(\"\")}\n                                  </AvatarFallback>\n                                </Avatar>\n                                <div style={{ textAlign: \"left\" }}>\n                                  <div\n                                    style={{\n                                      fontSize: \"0.875rem\",\n                                      fontWeight: 500,\n                                    }}\n                                  >\n                                    {user.label}\n                                  </div>\n                                  <div\n                                    style={{\n                                      fontSize: \"0.75rem\",\n                                      color: \"var(--muted-foreground)\",\n                                    }}\n                                  >\n                                    {user.email}\n                                  </div>\n                                </div>\n                              </div>\n                            </ComboboxItem>\n                          )}\n                        </ComboboxList>\n                      </ComboboxPopup>\n                    </ComboboxPositioner>\n                  </ComboboxPortal>\n                </Combobox>\n              </div>\n            </div>\n\n            <DialogFooter>\n              <DialogClose render={<Button variant=\"outline\">Cancel</Button>} />\n              <Button onClick={() => setCollaboratorDialogOpen(false)}>\n                Add\n              </Button>\n            </DialogFooter>\n          </DialogPopup>\n        </DialogPortal>\n      </Dialog>\n    </>\n  );\n}\n",
      "type": "registry:file",
      "target": "~/components/blocks/card-task/card-task.tsx"
    }
  ]
}