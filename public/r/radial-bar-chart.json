{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "radial-bar-chart",
  "type": "registry:item",
  "title": "Radial Bar Chart",
  "description": "Circular progress-style charts for displaying progress and comparative metrics.",
  "dependencies": [
    "recharts"
  ],
  "files": [
    {
      "path": "registry/brook/ui/charts/chart-tooltip.tsx",
      "content": "\"use client\";\n\nexport interface ChartTooltipProps {\n  active?: boolean;\n  payload?: any[];\n  label?: string | number;\n  labelFormatter?: (value: any) => string;\n  valueFormatter?: (value: any, name?: string) => string;\n}\n\nexport function ChartTooltip({\n  active,\n  payload,\n  label,\n  labelFormatter,\n  valueFormatter,\n}: ChartTooltipProps) {\n  if (!active || !payload || !payload.length) {\n    return null;\n  }\n\n  const formatLabel = (value: any) => {\n    if (labelFormatter) {\n      return labelFormatter(value);\n    }\n    return String(value);\n  };\n\n  const formatValue = (value: any, name?: string) => {\n    if (valueFormatter) {\n      return valueFormatter(value, name);\n    }\n    if (typeof value === 'number') {\n      return value.toLocaleString();\n    }\n    return String(value);\n  };\n\n  return (\n    <div\n      style={{\n        backgroundColor: \"var(--muted)\",\n        color: \"var(--foreground)\",\n        borderRadius: \"var(--radius)\",\n        padding: \"8px\",\n        fontSize: \"12px\",\n        border: \"1px solid var(--border)\",\n        boxShadow: \"0 4px 6px -1px rgb(0 0 0 / 0.1)\",\n      }}\n    >\n      {label && (\n        <div style={{ fontSize: \"11px\", fontWeight: \"500\", marginBottom: \"4px\" }}>\n          {formatLabel(label)}\n        </div>\n      )}\n      {payload.map((entry: any, index: number) => (\n        <div key={index} style={{ fontSize: \"11px\", marginBottom: \"2px\" }}>\n          <span style={{ color: entry.color, marginRight: \"4px\" }}>‚óè</span>\n          {entry.name || entry.dataKey}: {formatValue(entry.value, entry.name || entry.dataKey)}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ChartTooltip;",
      "type": "registry:file",
      "target": "~/components/ui/charts/chart-tooltip.tsx"
    },
    {
      "path": "registry/brook/ui/charts/radial-bar-chart.tsx",
      "content": "\"use client\";\n\nimport { RadialBarChart as RechartsRadialBarChart, RadialBar, ResponsiveContainer, Tooltip } from \"recharts\";\nimport ChartTooltip from \"./chart-tooltip\";\nimport styles from \"./radial-bar-chart.module.css\";\n\nexport interface RadialBarChartData {\n  category: string;\n  value: number;\n}\n\nexport interface RadialBarChartProps {\n  data: RadialBarChartData[];\n  innerRadius?: number | string;\n  outerRadius?: number | string;\n  showLabels?: boolean;\n  animated?: boolean;\n}\n\nfunction RadialBarChart({ data, innerRadius, outerRadius, showLabels = true, animated = false }: RadialBarChartProps) {\n  const colors = [\"var(--chart1)\", \"var(--chart2)\", \"var(--accent)\", \"var(--warning)\", \"var(--destructive)\"];\n\n  const transformedData = data.map((item, index) => ({\n    ...item,\n    fill: colors[index % colors.length],\n  }));\n\n  return (\n    <div\n      className={styles.radialBarChart}\n      style={{\n        position: \"relative\",\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"var(--card)\",\n        borderRadius: \"14px\",\n      }}\n    >\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <RechartsRadialBarChart\n          cx=\"50%\"\n          cy=\"50%\"\n          innerRadius={innerRadius || \"20%\"}\n          outerRadius={outerRadius || \"80%\"}\n          barCategoryGap=\"10%\"\n          data={transformedData}\n        >\n          <RadialBar\n            dataKey=\"value\"\n            cornerRadius={4}\n            fill=\"var(--chart1)\"\n            animationDuration={animated ? 800 : 0}\n            animationBegin={animated ? 0 : undefined}\n          />\n          <Tooltip content={<ChartTooltip />} />\n        </RechartsRadialBarChart>\n      </ResponsiveContainer>\n      {showLabels && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            textAlign: \"center\",\n            color: \"var(--foreground)\",\n            fontSize: \"12px\",\n          }}\n        >\n          {data.length} items\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default RadialBarChart;\n",
      "type": "registry:file",
      "target": "~/components/ui/charts/radial-bar-chart.tsx"
    },
    {
      "path": "registry/brook/ui/charts/radial-bar-chart.module.css",
      "content": ".radialBarChart {\n    position: relative;\n    width: 100%;\n    height: 100%;\n}\n\n.radialBarChart *:focus,\n.radialBarChart *:focus-visible {\n    outline: none !important;\n}",
      "type": "registry:file",
      "target": "~/components/ui/charts/radial-bar-chart.module.css"
    }
  ]
}