{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "command",
  "type": "registry:item",
  "title": "Command",
  "description": "A command palette component.",
  "files": [
    {
      "path": "registry/brook/ui/command/command.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Command as CommandPrimitive } from \"cmdk\";\nimport { Command } from \"lucide-react\";\nimport { Children, cloneElement, isValidElement } from \"react\";\nimport styles from \"./command.module.css\";\n\nfunction CommandRoot({ className, ...props }: React.ComponentPropsWithoutRef<typeof CommandPrimitive>) {\n  return <CommandPrimitive className={cn(styles.root, className)} {...props} />;\n}\n\nfunction CommandDialog({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof CommandPrimitive.Dialog>) {\n  return <CommandPrimitive.Dialog className={cn(styles.dialog, className)} {...props} />;\n}\n\nfunction CommandInput({\n  className,\n  ...props\n}: React.ComponentPropsWithRef<typeof CommandPrimitive.Input>) {\n  return <CommandPrimitive.Input className={cn(styles.input, className)} {...props} />;\n}\n\nfunction CommandList({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>) {\n  return <CommandPrimitive.List className={cn(styles.list, className)} {...props} />;\n}\n\nfunction CommandItem({\n  className,\n  icon,\n  keyboardShortcut,\n  children,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item> & {\n  icon?: boolean;\n  keyboardShortcut?: string;\n}) {\n  const processedChildren =\n    icon && Children.count(children) > 0\n      ? Children.map(children, (child, index) => {\n          if (index === 0 && isValidElement(child)) {\n            const typedChild = child as React.ReactElement<React.HTMLAttributes<HTMLElement>>;\n            return cloneElement(typedChild, {\n              className: cn(styles.iconBackground, typedChild.props.className),\n            });\n          }\n          return child;\n        })\n      : children;\n\n  return (\n    <CommandPrimitive.Item className={cn(styles.item, className)} {...props}>\n      {processedChildren}\n      {keyboardShortcut && (\n        <span className={styles.keyboardShortcut}>\n          <Command size={11} />\n          {keyboardShortcut}\n        </span>\n      )}\n    </CommandPrimitive.Item>\n  );\n}\n\nfunction CommandGroup({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>) {\n  return <CommandPrimitive.Group className={cn(styles.group, className)} {...props} />;\n}\n\nfunction CommandEmpty({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>) {\n  return <CommandPrimitive.Empty className={cn(styles.empty, className)} {...props} />;\n}\n\nfunction CommandSeparator({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>) {\n  return <CommandPrimitive.Separator className={cn(styles.separator, className)} {...props} />;\n}\n\nfunction CommandLoading({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof CommandPrimitive.Loading>) {\n  return <CommandPrimitive.Loading className={cn(styles.loading, className)} {...props} />;\n}\n\nexport {\n  CommandRoot as Command,\n  CommandDialog,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandLoading,\n  CommandSeparator,\n};\n",
      "type": "registry:file",
      "target": "~/components/ui/command/command.tsx"
    },
    {
      "path": "registry/brook/ui/command/command.module.css",
      "content": ".root[cmdk-root] {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    max-height: 400px;\n    overflow: hidden;\n    color: var(--foreground);\n}\n\n.dialog[cmdk-dialog] {\n    position: fixed;\n    inset: 0;\n    z-index: 50;\n    background-color: oklch(0 0 0 / 0.8);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 1rem;\n}\n\n.dialog .root {\n    max-width: 32rem;\n    width: 100%;\n    box-shadow: var(--shadow-lg);\n    border-radius: var(--radius);\n    border: 1px solid var(--border);\n    background-color: var(--card);\n}\n\n.input[cmdk-input] {\n    display: flex;\n    height: 2.75rem;\n    width: 100%;\n    border-radius: var(--radius);\n    border: none;\n    background-color: transparent;\n    padding: 0.75rem 1rem;\n    font-size: 0.875rem;\n    outline: none;\n    color: var(--foreground);\n    caret-color: var(--primary);\n}\n\n.input[cmdk-input]::placeholder {\n    color: var(--muted-foreground);\n}\n\n.input[cmdk-input]:focus {\n    outline: none;\n}\n\n.list[cmdk-list] {\n    max-height: 300px;\n    overflow: auto;\n    padding: 0.25rem;\n\n    scrollbar-width: thin;\n}\n\n.item[cmdk-item] {\n    position: relative;\n    display: flex;\n    cursor: pointer;\n    user-select: none;\n    align-items: center;\n    border-radius: var(--radius);\n    padding: 0.5rem;\n    font-size: 0.875rem;\n    gap: 0.5rem;\n    outline: none;\n    margin-top: 0.5rem;\n}\n\n.item[cmdk-item]:hover,\n.item[cmdk-item][data-selected=\"true\"] {\n    background-color: color-mix(in oklch, var(--card) 80%, var(--muted));\n    color: var(--foreground);\n}\n\n.item[cmdk-item][data-disabled=\"true\"] {\n    pointer-events: none;\n    opacity: 0.5;\n}\n\n.item[cmdk-item] svg:not(.keyboardShortcut svg) {\n    height: 1rem;\n    width: 1rem;\n    flex-shrink: 0;\n}\n\n.keyboardShortcut svg {\n    flex-shrink: 0;\n}\n\n.item[cmdk-item]:has(svg) {\n    padding: 0.25rem;\n}\n\n.iconBackground {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--muted);\n    padding: 0.4rem;\n    border-radius: 0.4rem;\n    border: 1px solid var(--border);\n}\n\n.keyboardShortcut {\n    margin-left: auto;\n    padding: 0.125rem 0.25rem;\n    background-color: var(--background);\n    border: 1px solid var(--border);\n    border-radius: 0.25rem;\n    font-size: 0.75rem;\n    font-family: monospace;\n    color: var(--muted-foreground);\n    font-weight: 500;\n    display: flex;\n    align-items: center;\n    gap: 0.25rem;\n}\n\n.group[cmdk-group] {\n    overflow: hidden;\n    padding: 0.25rem 0;\n    color: var(--foreground);\n}\n\n.group[cmdk-group]:not(:first-child) {\n    padding-top: 0.75rem;\n}\n\n.group[cmdk-group] [cmdk-group-heading] {\n    padding: 0 0.5rem;\n    font-size: 0.71875rem;\n    font-weight: 500;\n    color: var(--muted-foreground);\n    text-transform: uppercase;\n    letter-spacing: 0.025em;\n}\n\n.empty[cmdk-empty] {\n    padding: 1.5rem;\n    text-align: center;\n    color: var(--muted-foreground);\n    font-size: 0.875rem;\n}\n\n.separator[cmdk-separator] {\n    height: 1px;\n    width: 100%;\n    background-color: var(--border);\n    margin: 0.25rem 0;\n}\n\n.loading[cmdk-loading] {\n    padding: 1rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: var(--muted-foreground);\n    font-size: 0.875rem;\n}\n\n.dialog[cmdk-dialog] {\n    animation: command-dialog-in 200ms ease-out;\n}\n\n@keyframes command-dialog-in {\n    from {\n        opacity: 0;\n        transform: scale(0.95);\n    }\n    to {\n        opacity: 1;\n        transform: scale(1);\n    }\n}\n\n.root[cmdk-root]:focus-within .input[cmdk-input] {\n    outline: none;\n}\n\n[data-theme=\"dark\"] .dialog[cmdk-dialog] {\n    background-color: oklch(0 0 0 / 0.8);\n}\n\n@media (max-width: 640px) {\n    .dialog .root {\n        max-width: calc(100vw - 2rem);\n        margin: 1rem;\n    }\n\n    .list[cmdk-list] {\n        max-height: 200px;\n    }\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/command/command.module.css"
    }
  ]
}