{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "copy-button-tailwind",
  "type": "registry:item",
  "title": "Copy Button (Tailwind)",
  "description": "A button component with animated copy-to-clipboard functionality.",
  "dependencies": [
    "motion",
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/brook/tailwind/ui/copy-button.tsx",
      "content": "\"use client\";\n\nimport { Check } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { cn } from \"@/lib/tw-utils\";\n\nconst COPIED_RESET_DELAY_MS = 700;\n\nconst CopyIcon = ({ size = 14, copied = false }: { size?: number; copied?: boolean }) => (\n  <svg\n    aria-label=\"copy-icon\"\n    height={size}\n    role=\"img\"\n    stroke=\"currentColor\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    strokeWidth=\"2\"\n    style={{ transform: \"scaleX(-1)\" }}\n    viewBox=\"0 0 24 24\"\n    width={size}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <rect\n      className={cn(\n        \"origin-center transition-all duration-300 ease-in-out will-change-transform\",\n        copied && \"translate-x-[-4px] translate-y-[-4px] scale-80 opacity-0 transition-[transform_0.1s_ease,opacity_0.1s_ease_0.1s]\"\n      )}\n      data-element=\"front\"\n      fill=\"none\"\n      height=\"14\"\n      rx=\"2\"\n      ry=\"2\"\n      width=\"14\"\n      x=\"8\"\n      y=\"8\"\n    />\n    <path\n      className={cn(\n        \"origin-center transition-all duration-300 ease-in-out will-change-transform\",\n        copied && \"scale-80 opacity-0 transition-[transform_0.1s_ease,opacity_0.1s_ease_50ms]\"\n      )}\n      d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"\n      data-element=\"back\"\n      fill=\"none\"\n    />\n  </svg>\n);\n\n/**\n * CopyButton component for copying text to clipboard with animated feedback.\n * Shows a copy icon that animates to a check mark when clicked.\n *\n * @param code - The text content to copy to clipboard\n * @param className - Optional CSS class names\n *\n * @example\n * ```tsx\n * <CopyButton code=\"const example = 'Hello World';\" />\n * ```\n */\nfunction CopyButton({ code, className }: { code: string; className?: string }) {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(code);\n      setCopied(true);\n      setTimeout(() => setCopied(false), COPIED_RESET_DELAY_MS);\n    } catch (_error) {\n      // Error handling - Silently fail by default\n    }\n  };\n\n  return (\n    <button\n      className={cn(\n        \"flex h-[1.875rem] w-[1.875rem] items-center justify-center\",\n        \"cursor-pointer rounded-md p-2 transition-all duration-200\",\n        \"[-webkit-tap-highlight-color:transparent]\",\n        \"focus-visible:outline-2 focus-visible:outline-ring focus-visible:outline-offset-2\",\n        className\n      )}\n      data-copied={copied}\n      data-slot=\"copy-button\"\n      onClick={handleCopy}\n      type=\"button\"\n    >\n      <div\n        className={cn(\n          \"absolute flex items-center justify-center will-change-transform\",\n          \"transition-all duration-300 ease-in-out\",\n          copied\n            ? \"opacity-0 transition-opacity delay-[50ms] duration-[250ms] ease-in-out\"\n            : \"opacity-100 scale-100 rotate-0 blur-0\"\n        )}\n        data-icon=\"copy\"\n      >\n        <CopyIcon size={14} copied={copied} />\n      </div>\n      <div\n        className={cn(\n          \"absolute flex items-center justify-center will-change-transform\",\n          \"transition-all duration-300 ease-in-out\",\n          copied\n            ? \"rotate-0 scale-100 opacity-100 blur-0 transition-all delay-[50ms] duration-[250ms] ease-in-out\"\n            : \"-rotate-45 scale-0 opacity-0 blur-[4px]\"\n        )}\n        data-icon=\"check\"\n      >\n        <Check size={14} />\n      </div>\n    </button>\n  );\n}\n\nexport { CopyButton };\n",
      "type": "registry:file",
      "target": "~/components/ui/copy-button/copy-button.tsx"
    }
  ]
}