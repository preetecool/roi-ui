{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "select-tailwind",
  "type": "registry:item",
  "title": "Select (Tailwind)",
  "description": "A customizable select component for choosing from a list of options.",
  "files": [
    {
      "path": "registry/brook/tailwind/ui/select.tsx",
      "content": "\"use client\";\n\nimport { Select } from \"@base-ui-components/react/select\";\nimport { Check, ChevronDown } from \"lucide-react\";\nimport { cn } from \"@/lib/tw-utils\";\n\nfunction SelectRoot({ ...props }: React.ComponentProps<typeof Select.Root>) {\n  return <Select.Root {...props} />;\n}\n\nfunction SelectTrigger({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof Select.Trigger>) {\n  return (\n    <Select.Trigger\n      className={cn(\n        \"min-w-36 bg-(--mix-card-50-bg)\",\n        \"`hover:text-(--foreground) hover:bg-muted\",\n        \"focus-visible:outline-2 focus-visible:outline-ring focus-visible:outline-offset-2\",\n        \"data-popup-open:bg-muted data-popup-open:text-(--foreground\",\n        \"data-disabled:cursor-not-allowed data-disabled:opacity-50\",\n        className\n      )}\n      data-slot=\"select-trigger\"\n      nativeButton\n      {...props}\n    >\n      {children}\n    </Select.Trigger>\n  );\n}\n\nfunction SelectValue({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof Select.Value>) {\n  return (\n    <Select.Value\n      className={cn(\n        \"flex-1 overflow-hidden text-ellipsis whitespace-nowrap text-left\",\n        \"`data-placeholder:text-muted-foreground\",\n        className\n      )}\n      data-slot=\"select-value\"\n      {...props}\n    >\n      {children}\n    </Select.Value>\n  );\n}\n\nfunction SelectIcon({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof Select.Icon>) {\n  return (\n    <Select.Icon\n      className={cn(\n        \"ml-2 h-4 w-4 shrink-0 opacity-50 transition-transform duration-200 ease-in-out\",\n        \"[.trigger[data-popup-open]_&]:rotate-180\",\n        className\n      )}\n      data-slot=\"select-icon\"\n      {...props}\n    >\n      {children || <ChevronDown size={16} />}\n    </Select.Icon>\n  );\n}\n\nfunction SelectPortal({\n  ...props\n}: React.ComponentProps<typeof Select.Portal>) {\n  return <Select.Portal {...props} />;\n}\n\nfunction SelectOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof Select.Backdrop>) {\n  return (\n    <Select.Backdrop\n      className={cn(\n        \"fixed inset-0 z-140 bg-[rgba(0,0,0,0.5)] transition-opacity duration-150\",\n        className\n      )}\n      data-slot=\"select-backdrop\"\n      {...props}\n    />\n  );\n}\n\nfunction SelectPositioner({\n  className,\n  ...props\n}: React.ComponentProps<typeof Select.Positioner>) {\n  return <Select.Positioner className={cn(\"z-150\", className)} {...props} />;\n}\n\nfunction SelectScrollUpArrow({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof Select.ScrollUpArrow>) {\n  return (\n    <Select.ScrollUpArrow\n      className={cn(\n        \"flex h-6 cursor-pointer items-center justify-center border-none bg-(--mix-card-33-bg) text-(--foreground) transition-colors duration-200 ease-in-out\",\n        \"hover:bg-muted\",\n        \"data-[state=hidden]:hidden\",\n        className\n      )}\n      data-slot=\"select-scrolluparrow\"\n      {...props}\n    >\n      {children || (\n        <ChevronDown size={16} style={{ transform: \"rotate(180deg)\" }} />\n      )}\n    </Select.ScrollUpArrow>\n  );\n}\n\nfunction SelectPopup({\n  className,\n  ...props\n}: React.ComponentProps<typeof Select.Popup>) {\n  return (\n    <Select.Popup\n      className={cn(\n        \"z-[150] w-[var(--anchor-width)] origin-[var(--transform-origin)] overflow-y-auto rounded-[var(--radius)] border border-[var(--border)] bg-[var(--mix-card-75-bg)]\",\n        \"transition-[transform,scale,opacity] duration-150 ease-in-out\",\n        \"data-[starting-style]:scale-90 data-[starting-style]:opacity-0\",\n        \"data-[ending-style]:scale-90 data-[ending-style]:opacity-0\",\n        \"data-[side=none]:data-[starting-style]:scale-100 data-[side=none]:data-[starting-style]:opacity-100 data-[side=none]:data-[starting-style]:transition-none\",\n        \"data-[side=none]:data-[ending-style]:transition-none\",\n        className\n      )}\n      data-slot=\"select-popup\"\n      {...props}\n    />\n  );\n}\n\nfunction SelectArrow({\n  className,\n  ...props\n}: React.ComponentProps<typeof Select.Arrow>) {\n  return (\n    <Select.Arrow\n      className={cn(\n        \"-z-[1] h-3 w-3 rotate-45 border border-[var(--border)] border-r-0 border-b-0 bg-[var(--mix-card-33-bg)]\",\n        className\n      )}\n      data-slot=\"select-arrow\"\n      {...props}\n    />\n  );\n}\n\nfunction SelectScrollDownArrow({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof Select.ScrollDownArrow>) {\n  return (\n    <Select.ScrollDownArrow\n      className={cn(\n        \"flex h-6 cursor-pointer items-center justify-center border-none bg-[var(--mix-card-33-bg)] text-[var(--foreground)] transition-colors duration-200 ease-in-out\",\n        \"hover:bg-[var(--muted)]\",\n        \"data-[state=hidden]:hidden\",\n        className\n      )}\n      data-slot=\"select-scrolldownarrow\"\n      {...props}\n    >\n      {children || <ChevronDown size={16} />}\n    </Select.ScrollDownArrow>\n  );\n}\n\nfunction SelectList({\n  className,\n  ...props\n}: React.ComponentProps<typeof Select.List>) {\n  return (\n    <Select.List\n      className={cn(\"scroll-py-6 px-1 py-1\", className)}\n      data-slot=\"select-list\"\n      {...props}\n    />\n  );\n}\n\nfunction SelectItem({\n  className,\n  ...props\n}: React.ComponentProps<typeof Select.Item>) {\n  return (\n    <Select.Item\n      className={cn(\n        \"flex cursor-pointer items-center justify-between rounded-[calc(var(--radius)-2px)] py-2 pr-4 pl-3 text-[var(--foreground)] text-sm outline-none transition-all duration-200 ease-in-out\",\n        \"hover:bg-[var(--muted)] hover:text-[var(--foreground)]\",\n        \"data-[highlighted]:bg-[var(--muted)] data-[highlighted]:text-[var(--foreground)]\",\n        \"data-[selected]:bg-transparent\",\n        \"data-[disabled]:cursor-not-allowed data-[disabled]:opacity-50\",\n        className\n      )}\n      data-slot=\"select-item\"\n      {...props}\n    />\n  );\n}\n\nfunction SelectItemText({\n  className,\n  ...props\n}: React.ComponentProps<typeof Select.ItemText>) {\n  return (\n    <Select.ItemText\n      className={cn(\n        \"flex-1 overflow-hidden text-ellipsis whitespace-nowrap text-left\",\n        className\n      )}\n      data-slot=\"select-itemtext\"\n      {...props}\n    />\n  );\n}\n\nfunction SelectGroup({\n  className,\n  ...props\n}: React.ComponentProps<typeof Select.Group>) {\n  return <Select.Group className={cn(\"p-0\", className)} {...props} />;\n}\n\nfunction SelectGroupLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof Select.GroupLabel>) {\n  return (\n    <Select.GroupLabel\n      className={cn(\n        \"px-3 py-1.5 font-semibold text-[var(--muted-foreground)] text-xs uppercase tracking-wider\",\n        className\n      )}\n      data-slot=\"select-grouplabel\"\n      {...props}\n    />\n  );\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Select.Separator>) {\n  return (\n    <Select.Separator\n      className={cn(\"my-1 h-px bg-[var(--color-border)]\", className)}\n      data-slot=\"select-separator\"\n      {...props}\n    />\n  );\n}\n\nfunction SelectItemIndicator({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof Select.ItemIndicator>) {\n  return (\n    <Select.ItemIndicator\n      className={cn(\n        \"ml-2 h-4 w-4 shrink-0 opacity-0\",\n\n        \"transition-opacity duration-200 ease-in-out\",\n        \"[[data-selected]_&]:opacity-100\",\n        className\n      )}\n      data-slot=\"select-itemindicator\"\n      {...props}\n    >\n      {children || <Check size={16} />}\n    </Select.ItemIndicator>\n  );\n}\n\nfunction SelectSpacer() {\n  return <div style={{ height: \"4px\", width: \"100%\" }} />;\n}\n\nexport {\n  SelectRoot as Select,\n  SelectArrow,\n  SelectGroup,\n  SelectGroupLabel,\n  SelectIcon,\n  SelectItem,\n  SelectItemIndicator,\n  SelectItemText,\n  SelectList,\n  SelectOverlay,\n  SelectPopup,\n  SelectPortal,\n  SelectPositioner,\n  SelectRoot,\n  SelectScrollDownArrow,\n  SelectScrollUpArrow,\n  SelectSeparator,\n  SelectSpacer,\n  SelectTrigger,\n  SelectValue,\n};\n",
      "type": "registry:file",
      "target": "~/components/ui/select/select.tsx"
    }
  ]
}