{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "number-field",
  "type": "registry:item",
  "title": "Number Field",
  "description": "A numeric input element with increment/decrement buttons and a scrub area.",
  "files": [
    {
      "path": "registry/brook/ui/number-field/number-field.tsx",
      "content": "\"use client\";\n\nimport { NumberField } from \"@base-ui-components/react/number-field\";\nimport { cn } from \"@/lib/utils\";\nimport styles from \"./number-field.module.css\";\n\nconst NumberFieldRoot = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof NumberField.Root>) => (\n  <NumberField.Root className={cn(styles.root, className)} {...props} />\n);\n\nconst NumberFieldGroup = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(styles.group, className)} {...props} />\n);\n\nconst NumberFieldInput = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof NumberField.Input>) => (\n  <NumberField.Input className={cn(styles.input, className)} {...props} />\n);\n\nconst NumberFieldIncrement = ({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof NumberField.Increment>) => (\n  <NumberField.Increment className={cn(styles.increment, className)} {...props}>\n    {children || (\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" className={styles.icon}>\n        <path\n          d=\"M12 5v14m-7-7h14\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </svg>\n    )}\n  </NumberField.Increment>\n);\n\nconst NumberFieldDecrement = ({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof NumberField.Decrement>) => (\n  <NumberField.Decrement className={cn(styles.decrement, className)} {...props}>\n    {children || (\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" className={styles.icon}>\n        <path\n          d=\"M5 12h14\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </svg>\n    )}\n  </NumberField.Decrement>\n);\n\nconst NumberFieldScrubArea = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof NumberField.ScrubArea>) => (\n  <NumberField.ScrubArea className={cn(styles.scrubArea, className)} {...props} />\n);\n\nconst NumberFieldScrubAreaCursor = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof NumberField.ScrubAreaCursor>) => (\n  <NumberField.ScrubAreaCursor className={cn(styles.scrubAreaCursor, className)} {...props} />\n);\n\nexport {\n  NumberFieldRoot as NumberField,\n  NumberFieldGroup,\n  NumberFieldInput,\n  NumberFieldIncrement,\n  NumberFieldDecrement,\n  NumberFieldScrubArea,\n  NumberFieldScrubAreaCursor,\n};\n\n",
      "type": "registry:file",
      "target": "~/components/ui/number-field/number-field.tsx"
    },
    {
      "path": "registry/brook/ui/number-field/number-field.module.css",
      "content": ".root {\n    position: relative;\n    display: inline-flex;\n    flex-direction: column;\n    width: 100%;\n    max-width: 12rem;\n}\n\n.scrubArea {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 1;\n    cursor: col-resize;\n    user-select: none;\n    -webkit-user-select: none;\n}\n\n.scrubAreaCursor {\n    position: absolute;\n    pointer-events: none;\n    background: rgba(59, 130, 246, 0.8);\n    width: 2px;\n    height: 100%;\n    border-radius: 1px;\n    opacity: 0;\n    transition: opacity 0.15s ease;\n}\n\n.scrubArea:active .scrubAreaCursor {\n    opacity: 1;\n}\n\n.group {\n    position: relative;\n    display: flex;\n    align-items: center;\n    gap: 0;\n    z-index: 2;\n}\n\n.input {\n    flex: 0 1 6rem;\n    min-width: 6rem;\n    height: 2.5rem;\n    border: 1px solid var(--border);\n    padding: 0 0.5rem;\n    outline: none;\n    font-size: 0.875rem;\n    color: var(--foreground);\n    text-align: center;\n    transition: all 150ms ease-out;\n    background-color: var(--card);\n}\n\n.input::placeholder {\n    color: var(--muted-foreground);\n}\n\n.input:focus {\n    border-color: var(--ring);\n    box-shadow: 0 0 0 2px var(--ring) / 0.2;\n}\n\n.input:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n}\n\n.increment,\n.decrement {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0 1rem;\n    height: 2.5rem;\n    border: 1px solid var(--border);\n    background-color: var(--card);\n    color: var(--muted-foreground);\n    cursor: pointer;\n    transition: all 150ms ease-out;\n}\n\n.decrement {\n    border-radius: var(--radius) 0 0 var(--radius);\n    border-right: none;\n}\n\n.increment {\n    border-radius: 0 var(--radius) var(--radius) 0;\n    border-left: none;\n}\n\n.increment:hover,\n.decrement:hover {\n    color: var(--foreground);\n    background: var(--muted);\n}\n\n.increment:active,\n.decrement:active {\n    background: var(--muted);\n}\n\n.increment:disabled,\n.decrement:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n}\n\n.increment:disabled:hover,\n.decrement:disabled:hover {\n    color: var(--muted-foreground);\n    background: transparent;\n}\n\n.icon {\n    flex-shrink: 0;\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/number-field/number-field.module.css"
    }
  ]
}