{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "toast",
  "type": "registry:item",
  "title": "Toast",
  "description": "A succinct message notification.",
  "files": [
    {
      "path": "registry/brook/ui/toast/toast.tsx",
      "content": "\"use client\";\n\nimport { Toast } from \"@base-ui-components/react/toast\";\nimport { X } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport styles from \"./toast.module.css\";\n\nconst ToastProvider = ({ ...props }: React.ComponentPropsWithoutRef<typeof Toast.Provider>) => (\n  <Toast.Provider {...props} />\n);\n\nconst ToastPortal = ({ ...props }: React.ComponentPropsWithoutRef<typeof Toast.Portal>) => <Toast.Portal {...props} />;\n\nconst ToastViewport = ({ className, ...props }: React.ComponentPropsWithoutRef<typeof Toast.Viewport>) => (\n  <Toast.Viewport className={cn(styles.Viewport, className)} {...props} />\n);\n\nconst ToastRoot = ({ className, ...props }: React.ComponentPropsWithoutRef<typeof Toast.Root>) => (\n  <Toast.Root className={cn(styles.root, className)} {...props} />\n);\n\nconst ToastTitle = ({ className, ...props }: React.ComponentPropsWithoutRef<typeof Toast.Title>) => (\n  <Toast.Title className={cn(styles.title, className)} {...props} />\n);\n\nconst ToastDescription = ({ className, ...props }: React.ComponentPropsWithoutRef<typeof Toast.Description>) => (\n  <Toast.Description className={cn(styles.description, className)} {...props} />\n);\n\nconst ToastClose = ({\n  className,\n  render,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof Toast.Close> & {\n  render?: (props: React.ButtonHTMLAttributes<HTMLButtonElement>) => React.ReactNode;\n}) => <Toast.Close className={cn(styles.close, className)} render={render} {...props} />;\n\nexport {\n  ToastProvider,\n  ToastPortal,\n  ToastViewport,\n  ToastRoot as Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  X as CloseIcon,\n};\n",
      "type": "registry:file",
      "target": "~/components/ui/toast/toast.tsx"
    },
    {
      "path": "registry/brook/ui/toast/toast.module.css",
      "content": ".Viewport {\n    position: fixed;\n    width: 250px;\n    margin: 0 auto;\n    bottom: 1rem;\n    right: 1rem;\n    left: auto;\n    top: auto;\n\n    @media (min-width: 500px) {\n        bottom: 2rem;\n        right: 2rem;\n        width: 300px;\n    }\n}\n\n.root {\n    --gap: 0.75rem;\n    --offset-y: calc(\n        var(--toast-offset-y) * -1 + (var(--toast-index) * var(--gap) * -1) + var(--toast-swipe-movement-y)\n    );\n    position: absolute;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    box-sizing: border-box;\n    background: var(--card);\n    color: var(--muted-foreground);\n    border: 1px solid var(--border);\n    padding: 1rem;\n    width: 100%;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n    background-clip: padding-box;\n    border-radius: 0.5rem;\n    bottom: 0;\n    left: auto;\n    margin-right: 0;\n    -webkit-user-select: none;\n    user-select: none;\n    transition:\n        transform 0.5s cubic-bezier(0.22, 1, 0.36, 1),\n        opacity 0.5s;\n    cursor: default;\n    z-index: calc(1000 - var(--toast-index));\n    transform: translateX(var(--toast-swipe-movement-x))\n        translateY(calc(var(--toast-swipe-movement-y) + (min(var(--toast-index), 10) * -20%)))\n        scale(calc(max(0, 1 - (var(--toast-index) * 0.1))));\n\n    &::after {\n        top: 100%;\n        content: \"\";\n        position: absolute;\n        width: 100%;\n        left: 0;\n        height: calc(var(--gap) + 1px);\n    }\n\n    &[data-expanded] {\n        transform: translateX(var(--toast-swipe-movement-x)) translateY(var(--offset-y));\n    }\n\n    &[data-starting-style],\n    &[data-ending-style] {\n        transform: translateY(150%);\n    }\n\n    &[data-limited] {\n        opacity: 0;\n    }\n\n    &[data-ending-style] {\n        opacity: 0;\n\n        &[data-swipe-direction=\"up\"] {\n            transform: translateY(calc(var(--toast-swipe-movement-y) - 150%));\n        }\n        &[data-swipe-direction=\"left\"] {\n            transform: translateX(calc(var(--toast-swipe-movement-x) - 150%)) translateY(var(--offset-y));\n        }\n        &[data-swipe-direction=\"right\"] {\n            transform: translateX(calc(var(--toast-swipe-movement-x) + 150%)) translateY(var(--offset-y));\n        }\n        &[data-swipe-direction=\"down\"] {\n            transform: translateY(calc(var(--toast-swipe-movement-y) + 150%));\n        }\n    }\n\n    &[data-type=\"success\"] {\n        border-color: #10b981;\n        background: #ecfdf5;\n\n        .title {\n            color: #047857;\n        }\n\n        .description {\n            color: #065f46;\n        }\n    }\n\n    &[data-type=\"error\"] {\n        border-color: #ef4444;\n        background: #fef2f2;\n\n        .title {\n            color: #dc2626;\n        }\n\n        .description {\n            color: #991b1b;\n        }\n    }\n\n    &[data-type=\"warning\"] {\n        border-color: #f59e0b;\n        background: #fffbeb;\n\n        .title {\n            color: #d97706;\n        }\n\n        .description {\n            color: #92400e;\n        }\n    }\n\n    &[data-type=\"info\"] {\n        border-color: #3b82f6;\n        background: #eff6ff;\n\n        .title {\n            color: #2563eb;\n        }\n\n        .description {\n            color: #1e40af;\n        }\n    }\n}\n\n.title {\n    font-weight: 500;\n    font-size: 0.975rem;\n    line-height: 1.25rem;\n    margin: 0;\n    color: var(--title, var(--color-gray-900));\n}\n\n.description {\n    font-size: 0.925rem;\n    line-height: 1.25rem;\n    margin: 0;\n    margin-top: 0.25rem;\n    color: var(--foreground, var(--color-gray-700));\n}\n\n.close {\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n    border: none;\n    background: transparent;\n    width: 1.25rem;\n    height: 1.25rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 0.25rem;\n    color: var(--foreground, var(--color-gray-700));\n    cursor: pointer;\n    transition: all 0.15s ease;\n\n    &:hover {\n        background-color: var(--muted);\n        color: var(--title);\n    }\n\n    &:focus {\n        outline: none;\n    }\n\n    &:focus-visible {\n        outline: 2px solid var(--ring, var(--color-blue));\n        outline-offset: 2px;\n    }\n\n    svg {\n        height: 1rem;\n        width: 1rem;\n    }\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/toast/toast.module.css"
    }
  ]
}