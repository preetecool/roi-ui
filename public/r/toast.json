{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "toast",
  "type": "registry:item",
  "title": "Toast",
  "description": "A succinct message notification.",
  "files": [
    {
      "path": "registry/brook/ui/toast/toast.tsx",
      "content": "\"use client\";\n\nimport { Toast } from \"@base-ui-components/react/toast\";\nimport { cn } from \"@/lib/utils\";\nimport styles from \"./toast.module.css\";\n\nfunction ToastProvider({\n  ...props\n}: React.ComponentPropsWithoutRef<typeof Toast.Provider>) {\n  return <Toast.Provider {...props} />;\n}\n\nfunction ToastPortal({\n  ...props\n}: React.ComponentPropsWithoutRef<typeof Toast.Portal>) {\n  return <Toast.Portal {...props} />;\n}\n\nfunction ToastViewport({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof Toast.Viewport>) {\n  return (\n    <Toast.Viewport className={cn(styles.viewport, className)} {...props} />\n  );\n}\n\nfunction ToastRoot({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof Toast.Root>) {\n  return <Toast.Root className={cn(styles.root, className)} {...props} />;\n}\n\nfunction ToastTitle({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof Toast.Title>) {\n  return <Toast.Title className={cn(styles.title, className)} {...props} />;\n}\n\nfunction ToastDescription({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof Toast.Description>) {\n  return (\n    <Toast.Description\n      className={cn(styles.description, className)}\n      {...props}\n    />\n  );\n}\n\nfunction ToastClose({\n  className,\n  render,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof Toast.Close> & {\n  render?: (\n    props: React.ButtonHTMLAttributes<HTMLButtonElement>\n  ) => React.ReactNode;\n}) {\n  return (\n    <Toast.Close\n      className={cn(styles.close, className)}\n      render={render}\n      {...props}\n    />\n  );\n}\n\n// biome-ignore lint/performance/noBarrelFile: Re-exporting icon as part of component API\nexport { X as CloseIcon } from \"lucide-react\";\n\nexport {\n  ToastRoot as Toast,\n  ToastClose,\n  ToastDescription,\n  ToastPortal,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n};\n",
      "type": "registry:file",
      "target": "~/components/ui/toast/toast.tsx"
    },
    {
      "path": "registry/brook/ui/toast/toast.module.css",
      "content": ".viewport {\n  position: fixed;\n  width: 250px;\n  margin: 0 auto;\n  bottom: 1rem;\n  right: 1rem;\n  left: auto;\n  top: auto;\n  z-index: 1000;\n\n  @media (min-width: 500px) {\n    bottom: 2rem;\n    right: 2rem;\n    width: 300px;\n  }\n}\n\n.root {\n  --gap: 0.75rem;\n  --offset-y: calc(\n    var(--toast-offset-y) *\n    -1 +\n    (var(--toast-index) * var(--gap) * -1) +\n    var(--toast-swipe-movement-y)\n  );\n  position: absolute;\n  right: 0;\n  margin: 0 auto;\n  box-sizing: border-box;\n  background: var(--mix-card-33-bg);\n  color: var(--muted-foreground);\n  border: 0.5px solid oklch(from var(--border) l c h / 0.9);\n  padding: 1rem;\n  width: 100%;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  background-clip: padding-box;\n  border-radius: 0.5rem;\n  bottom: 0;\n  left: auto;\n  margin-right: 0;\n  -webkit-user-select: none;\n  user-select: none;\n  transition:\n    transform 0.5s cubic-bezier(0.22, 1, 0.36, 1),\n    opacity 0.5s;\n  cursor: default;\n  z-index: calc(1000 - var(--toast-index));\n  transform: translateX(var(--toast-swipe-movement-x))\n    translateY(\n      calc(var(--toast-swipe-movement-y) + (min(var(--toast-index), 10) * -20%))\n    )\n    scale(calc(max(0, 1 - (var(--toast-index) * 0.1))));\n\n  &::after {\n    top: 100%;\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    left: 0;\n    height: calc(var(--gap) + 1px);\n  }\n\n  &[data-expanded] {\n    transform: translateX(var(--toast-swipe-movement-x))\n      translateY(var(--offset-y));\n  }\n\n  &[data-starting-style],\n  &[data-ending-style] {\n    transform: translateY(150%);\n  }\n\n  &[data-limited] {\n    opacity: 0;\n  }\n\n  &[data-ending-style] {\n    opacity: 0;\n\n    &[data-swipe-direction=\"up\"] {\n      transform: translateY(calc(var(--toast-swipe-movement-y) - 150%));\n    }\n    &[data-swipe-direction=\"left\"] {\n      transform: translateX(calc(var(--toast-swipe-movement-x) - 150%))\n        translateY(var(--offset-y));\n    }\n    &[data-swipe-direction=\"right\"] {\n      transform: translateX(calc(var(--toast-swipe-movement-x) + 150%))\n        translateY(var(--offset-y));\n    }\n    &[data-swipe-direction=\"down\"] {\n      transform: translateY(calc(var(--toast-swipe-movement-y) + 150%));\n    }\n  }\n}\n\n.title {\n  font-weight: 500;\n  font-size: 0.975rem;\n  line-height: 1.25rem;\n  margin: 0;\n  color: var(--foreground);\n}\n\n.description {\n  font-size: 0.925rem;\n  line-height: 1.25rem;\n  margin: 0;\n  margin-top: 0.25rem;\n  color: var(--foreground, var(--color-gray-700));\n}\n\n.root[data-type=\"success\"] {\n  border-color: #10b981;\n  background: #ecfdf5;\n}\n\n.root[data-type=\"success\"] .title {\n  color: #047857;\n}\n\n.root[data-type=\"success\"] .description {\n  color: #065f46;\n}\n\n.root[data-type=\"error\"] {\n  border-color: #ef4444;\n  background: #fef2f2;\n}\n\n.root[data-type=\"error\"] .title {\n  color: #dc2626;\n}\n\n.root[data-type=\"error\"] .description {\n  color: #991b1b;\n}\n\n.root[data-type=\"warning\"] {\n  border-color: #f59e0b;\n  background: #fffbeb;\n}\n\n.root[data-type=\"warning\"] .title {\n  color: #d97706;\n}\n\n.root[data-type=\"warning\"] .description {\n  color: #92400e;\n}\n\n.root[data-type=\"info\"] {\n  border-color: #3b82f6;\n  background: #eff6ff;\n}\n\n.root[data-type=\"info\"] .title {\n  color: #2563eb;\n}\n\n.root[data-type=\"info\"] .description {\n  color: #1e40af;\n}\n\n.close {\n  position: absolute;\n  top: 0.5rem;\n  right: 0.5rem;\n  border: none;\n  background: transparent;\n  width: 1.25rem;\n  height: 1.25rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 0.25rem;\n  color: var(--foreground, var(--color-gray-700));\n  cursor: pointer;\n  transition: all 0.15s ease;\n\n  &:hover {\n    background-color: var(--muted);\n    color: var(--foreground);\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:focus-visible {\n    outline: 2px solid var(--ring, var(--color-blue));\n    outline-offset: 2px;\n  }\n\n  svg {\n    height: 1rem;\n    width: 1rem;\n  }\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/toast/toast.module.css"
    }
  ]
}