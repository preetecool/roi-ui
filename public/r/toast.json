{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "toast",
  "type": "registry:item",
  "title": "Toast",
  "description": "A succinct message notification.",
  "files": [
    {
      "path": "registry/brook/ui/toast/toast.tsx",
      "content": "\"use client\";\n\nimport { Toast } from \"@base-ui-components/react/toast\";\nimport { X } from \"lucide-react\";\nimport type * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport styles from \"./toast.module.css\";\n\nconst toastManager = Toast.createToastManager();\n\nfunction ToastProvider({ children, ...props }: Toast.Provider.Props) {\n  return (\n    <Toast.Provider toastManager={toastManager} {...props}>\n      {children}\n      <ToastPortal>\n        <ToastViewport>\n          <ToastList />\n        </ToastViewport>\n      </ToastPortal>\n    </Toast.Provider>\n  );\n}\n\nfunction ToastPortal({ ...props }: Toast.Portal.Props) {\n  return <Toast.Portal {...props} />;\n}\n\nfunction ToastViewport({ className, ...props }: Toast.Viewport.Props) {\n  return (\n    <Toast.Viewport\n      className={cn(styles.viewport, className)}\n      data-slot=\"toast-viewport\"\n      {...props}\n    />\n  );\n}\n\nfunction ToastRoot({ className, ...props }: Toast.Root.Props) {\n  return <Toast.Root className={cn(styles.root, className)} {...props} />;\n}\n\nfunction ToastContent({ className, ...props }: Toast.Content.Props) {\n  return <Toast.Content className={cn(styles.content, className)} {...props} />;\n}\n\nfunction ToastTitle({ className, ...props }: Toast.Title.Props) {\n  return <Toast.Title className={cn(styles.title, className)} {...props} />;\n}\n\nfunction ToastDescription({ className, ...props }: Toast.Description.Props) {\n  return (\n    <Toast.Description\n      className={cn(styles.description, className)}\n      data-slot=\"toast-description\"\n      {...props}\n    />\n  );\n}\n\nfunction ToastAction({ className, ...props }: Toast.Action.Props) {\n  return (\n    <Toast.Action\n      className={cn(styles.action, className)}\n      data-slot=\"toast-action\"\n      {...props}\n    />\n  );\n}\n\nfunction ToastClose({\n  className,\n  render,\n  ...props\n}: Toast.Close.Props & {\n  render?: (\n    props: React.ButtonHTMLAttributes<HTMLButtonElement>\n  ) => React.ReactNode;\n}) {\n  return (\n    <Toast.Close\n      className={cn(styles.close, className)}\n      data-slot=\"toast-close\"\n      render={render}\n      {...props}\n    />\n  );\n}\n\nfunction ToastList() {\n  const { toasts } = Toast.useToastManager();\n  return toasts.map((toast) => (\n    <ToastRoot key={toast.id} toast={toast}>\n      <ToastContent>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"start\",\n            justifyContent: \"space-between\",\n            gap: \"0.5rem\",\n          }}\n        >\n          <div style={{ flex: 1, minWidth: 0 }}>\n            <div\n              style={{ display: \"flex\", alignItems: \"center\", gap: \"0.5rem\" }}\n            >\n              <ToastTitle />\n              {toast.type && (\n                <span className={styles.statusPill} data-type={toast.type} />\n              )}\n            </div>\n            <ToastDescription />\n            {toast.actionProps && (\n              <ToastAction className={styles.actionButton}>\n                {toast.actionProps.children}\n              </ToastAction>\n            )}\n          </div>\n        </div>\n        {toast.data?.showCloseButton === true && (\n          <ToastClose\n            render={(props: React.ButtonHTMLAttributes<HTMLButtonElement>) => (\n              <button {...props} aria-label=\"Close\">\n                <X className=\"h-4 w-4\" />\n              </button>\n            )}\n          />\n        )}\n      </ToastContent>\n    </ToastRoot>\n  ));\n}\n\n// biome-ignore lint/performance/noBarrelFile: Re-exporting icon as part of component API\nexport { X as CloseIcon } from \"lucide-react\";\n\nexport { ToastProvider, toastManager };\n",
      "type": "registry:file",
      "target": "~/components/ui/toast/toast.tsx"
    },
    {
      "path": "registry/brook/ui/toast/toast.module.css",
      "content": ".viewport {\n  position: fixed;\n  width: 250px;\n  margin: 0 auto;\n  bottom: 1rem;\n  right: 1rem;\n  left: auto;\n  top: auto;\n  z-index: 1000;\n\n  @media (min-width: 500px) {\n    bottom: 2rem;\n    right: 2rem;\n    width: 340px;\n  }\n}\n\n.root {\n  --gap: 0.75rem;\n  --peek: 0.75rem;\n  --scale: calc(max(0, 1 - (var(--toast-index) * 0.1)));\n  --shrink: calc(1 - var(--scale));\n  --height: var(--toast-frontmost-height, var(--toast-height));\n  --offset-y: calc(\n    var(--toast-offset-y) *\n    -1 +\n    (var(--toast-index) * var(--gap) * -1) +\n    var(--toast-swipe-movement-y)\n  );\n  position: absolute;\n  right: 0;\n  margin: 0 auto;\n  box-sizing: border-box;\n\n  background: var(--mix-card-5-bg);\n  color: var(--muted-foreground);\n  border: 0.5px solid oklch(from var(--border) l c h / 0.5);\n  padding: 1rem;\n  width: 100%;\n  box-shadow:\n    oklch(from var(--border) l c h / 0.2) 0px 1px 1px,\n    oklch(from var(--border) l c h / 0.2) 0px 1px 1px,\n    oklch(from var(--border) l c h / 0.2) 0px 1px 1px;\n  background-clip: padding-box;\n  border-radius: 0.5rem;\n  transform-origin: bottom center;\n  bottom: 0;\n  left: auto;\n  margin-right: 0;\n  -webkit-user-select: none;\n  user-select: none;\n  transition:\n    transform 0.6s cubic-bezier(0.22, 1, 0.36, 1),\n    opacity 0.5s,\n    height 0.17s var(--ease-out-expo);\n  cursor: default;\n  z-index: calc(1000 - var(--toast-index));\n  height: var(--height);\n  transform: translateX(var(--toast-swipe-movement-x))\n    translateY(\n      calc(\n        var(--toast-swipe-movement-y) -\n        (var(--toast-index) * var(--peek)) -\n        (var(--shrink) * var(--height))\n      )\n    )\n    scale(var(--scale));\n\n  &[data-expanded] {\n    transform: translateX(var(--toast-swipe-movement-x))\n      translateY(var(--offset-y));\n    height: var(--toast-height);\n  }\n\n  &[data-starting-style],\n  &[data-ending-style] {\n    transform: translateY(150%);\n  }\n\n  &[data-limited] {\n    opacity: 0;\n  }\n\n  &[data-ending-style] {\n    opacity: 0;\n\n    &[data-swipe-direction=\"up\"] {\n      transform: translateY(calc(var(--toast-swipe-movement-y) - 150%));\n    }\n    &[data-swipe-direction=\"left\"] {\n      transform: translateX(calc(var(--toast-swipe-movement-x) - 150%))\n        translateY(var(--offset-y));\n    }\n    &[data-swipe-direction=\"right\"] {\n      transform: translateX(calc(var(--toast-swipe-movement-x) + 150%))\n        translateY(var(--offset-y));\n    }\n    &[data-swipe-direction=\"down\"] {\n      transform: translateY(calc(var(--toast-swipe-movement-y) + 150%));\n    }\n  }\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 100%;\n    width: 100%;\n    left: 0;\n    height: calc(var(--gap) + 1px);\n  }\n}\n\n.content {\n  overflow: hidden;\n  transition: opacity 0.35s;\n\n  &[data-behind] {\n    pointer-events: none;\n    opacity: 0;\n  }\n\n  &[data-expanded] {\n    pointer-events: auto;\n    opacity: 1;\n  }\n}\n\n.title {\n  font-weight: 450;\n  font-size: 0.975rem;\n  line-height: 1.25rem;\n  letter-spacing: -0.02em;\n  margin: 0;\n  color: var(--foreground);\n}\n\n.description {\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  letter-spacing: -0.02em;\n  margin: 0;\n  margin-top: 0.25rem;\n  color: var(--secondary-foreground);\n}\n\n.statusPill {\n  display: inline-block;\n  width: 10px;\n  height: 5px;\n  border-radius: var(--radius);\n}\n\n.statusPill[data-type=\"success\"] {\n  background-color: var(--success);\n}\n\n.statusPill[data-type=\"error\"] {\n  background-color: var(--destructive);\n}\n\n.statusPill[data-type=\"warning\"] {\n  background-color: var(--warning);\n}\n\n.statusPill[data-type=\"info\"] {\n  background-color: var(--info);\n}\n\n.action {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  height: 2rem;\n  padding: 0 0.75rem;\n  font-size: 0.875rem;\n  font-weight: 500;\n  line-height: 1.25rem;\n  border-radius: 0.25rem;\n  margin-top: 0.5rem;\n  background-color: var(--primary);\n  color: var(--primary-foreground);\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.15s ease;\n\n  &:hover {\n    background-color: var(--primary);\n    opacity: 0.9;\n  }\n\n  &:focus-visible {\n    outline: 2px solid var(--ring);\n    outline-offset: 2px;\n  }\n}\n\n.actionButton {\n  margin-top: 0.5rem;\n}\n\n.close {\n  position: absolute;\n  top: 0.5rem;\n  right: 0.5rem;\n  border: none;\n  background: transparent;\n  width: 1.25rem;\n  height: 1.25rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 0.25rem;\n  color: oklch(from var(--foreground) l c h / 0.3);\n  cursor: pointer;\n  transition: all 0.15s ease;\n\n  &:hover {\n    background-color: var(--muted);\n    color: var(--foreground);\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:focus-visible {\n    outline: 2px solid var(--ring, var(--color-blue));\n    outline-offset: 2px;\n  }\n\n  svg {\n    height: 1rem;\n    width: 1rem;\n  }\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/toast/toast.module.css"
    }
  ]
}