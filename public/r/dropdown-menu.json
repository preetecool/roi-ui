{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dropdown-menu",
  "type": "registry:item",
  "title": "Dropdown Menu",
  "description": "A dropdown menu component.",
  "files": [
    {
      "path": "registry/brook/ui/dropdown-menu/dropdown-menu.tsx",
      "content": "\"use client\";\n\nimport { Menu } from \"@base-ui-components/react/menu\";\nimport type { ReactNode } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport styles from \"./dropdown-menu.module.css\";\n\nfunction DropdownMenuRoot({\n  ...props\n}: React.ComponentProps<typeof Menu.Root>) {\n  return <Menu.Root {...props} />;\n}\n\nfunction DropdownMenuTrigger({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof Menu.Trigger>) {\n  return <Menu.Trigger {...props} className={cn(styles.trigger, className)} />;\n}\n\nconst DropdownMenuPortal = Menu.Portal;\n\nfunction DropdownMenuPositioner({\n  className,\n  ...props\n}: React.ComponentProps<typeof Menu.Positioner>) {\n  return (\n    <Menu.Positioner\n      align=\"start\"\n      className={cn(styles.positioner, className)}\n      side=\"bottom\"\n      {...props}\n    />\n  );\n}\n\nfunction DropdownMenuPopup({\n  className,\n  ...props\n}: React.ComponentProps<typeof Menu.Popup>) {\n  return <Menu.Popup className={cn(styles.popup, className)} {...props} />;\n}\n\ninterface DropdownMenuItemProps extends React.ComponentProps<typeof Menu.Item> {\n  icon?: ReactNode;\n  className?: string;\n  children?: ReactNode;\n}\n\nfunction DropdownMenuItem({\n  className,\n  icon,\n  children,\n  ...props\n}: DropdownMenuItemProps) {\n  return (\n    <Menu.Item className={cn(styles.item, className)} {...props}>\n      {icon && <span className={styles.icon}>{icon}</span>}\n      {children}\n    </Menu.Item>\n  );\n}\n\nfunction DropdownMenuSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Menu.Separator>) {\n  return (\n    <Menu.Separator className={cn(styles.separator, className)} {...props} />\n  );\n}\n\nfunction DropdownMenuArrow({\n  className,\n  ...props\n}: React.ComponentProps<typeof Menu.Arrow>) {\n  return <Menu.Arrow className={cn(styles.arrow, className)} {...props} />;\n}\n\nfunction DropdownMenuSubmenuRoot({\n  ...props\n}: React.ComponentProps<typeof Menu.SubmenuRoot>) {\n  return <Menu.SubmenuRoot {...props} />;\n}\n\nfunction DropdownMenuSubmenuTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof Menu.SubmenuTrigger>) {\n  return (\n    <Menu.SubmenuTrigger\n      className={cn(styles.submenuTrigger, className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  DropdownMenuRoot as DropdownMenu,\n  DropdownMenuArrow,\n  DropdownMenuItem,\n  DropdownMenuPopup,\n  DropdownMenuPortal,\n  DropdownMenuPositioner,\n  DropdownMenuSeparator,\n  DropdownMenuSubmenuRoot,\n  DropdownMenuSubmenuTrigger,\n  DropdownMenuTrigger,\n};\n",
      "type": "registry:file",
      "target": "~/components/ui/dropdown-menu/dropdown-menu.tsx"
    },
    {
      "path": "registry/brook/ui/dropdown-menu/dropdown-menu.module.css",
      "content": ".root {\n  display: inline-block;\n}\n\n.trigger {\n  &[data-popup-open] {\n    background-color: var(--muted);\n    color: var(--foreground);\n  }\n\n  &:focus-visible {\n    outline: 2px solid var(--ring);\n    outline-offset: 2px;\n  }\n}\n\n.trigger:focus {\n  outline: none;\n}\n\n.trigger[data-disabled] {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n\n.positioner {\n  z-index: 150;\n  position: absolute;\n  left: 0;\n}\n\n.popup {\n  min-width: 200px;\n  padding: 0.25rem;\n  background: var(--mix-card-33-bg);\n  border: 1px solid var(--border);\n  border-radius: var(--radius);\n  box-shadow:\n    0 20px 25px -5px rgba(0, 0, 0, 0.1),\n    0 10px 10px -5px rgba(0, 0, 0, 0.04);\n  animation: popup-in 0.25s var(--ease-out-expo);\n  display: flex;\n  flex-direction: column;\n  backdrop-filter: blur(10px);\n  -webkit-backdrop-filter: blur(10px);\n}\n\n.popup[data-starting-style],\n.popup[data-ending-style] {\n  opacity: 0;\n  transform: scale(0.95) translateY(-0.25rem);\n}\n\n@keyframes popup-in {\n  from {\n    opacity: 0;\n    transform: scale(0.95) translateY(-0.25rem);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1) translateY(0);\n  }\n}\n\n.submenuTrigger,\n.item {\n  display: flex;\n  align-items: center;\n  padding: 0.5rem 0.4rem;\n  font-size: 0.875rem;\n  line-height: 1.2;\n  color: var(--secondary-foreground);\n  cursor: pointer;\n  border-radius: 0.3rem;\n  justify-content: flex-start;\n  margin: 0rem;\n\n  &[data-popup-open] {\n    background-color: var(--muted);\n    color: var(--foreground);\n  }\n\n  &[data-highlighted] {\n    background-color: var(--muted);\n    color: var(--foreground);\n  }\n}\n\n.icon {\n  margin-right: 0.75rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1rem;\n  color: var(--muted-foreground);\n  margin-left: 0.125rem;\n}\n\n.item:hover > .icon {\n  color: var(--secondary-foreground);\n}\n\n.submenuTrigger:hover,\n.item:hover {\n  background-color: var(--muted);\n  color: var(--foreground);\n}\n\n.item:hover .icon {\n  opacity: 1;\n}\n\n.item:focus {\n  outline: none;\n  background: var(--muted);\n  color: var(--foreground);\n}\n\n.item[data-disabled] {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n\n.item[data-disabled]:hover {\n  background: transparent;\n  color: var(--foreground);\n}\n\n.separator {\n  height: 1px;\n\n  margin: 0.125rem -0.25rem;\n\n  border-top: 1px solid var(--border);\n  opacity: 0.6;\n}\n\n.arrow {\n  fill: var(--background);\n  stroke: var(--border);\n  stroke-width: 1px;\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/dropdown-menu/dropdown-menu.module.css"
    }
  ]
}