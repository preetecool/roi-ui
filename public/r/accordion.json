{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "accordion",
  "type": "registry:item",
  "title": "Accordion",
  "description": "A collapsible content component.",
  "files": [
    {
      "path": "registry/brook/ui/accordion/accordion.tsx",
      "content": "\"use client\";\n\nimport { Accordion } from \"@base-ui-components/react/accordion\";\nimport { ChevronDown } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport styles from \"./accordion.module.css\";\n\nfunction AccordionRoot({\n  className,\n  ...props\n}: Accordion.Root.Props) {\n  return (\n    <Accordion.Root\n      className={cn(styles.root, className)}\n      data-slot=\"accordion-root\"\n      {...props}\n    />\n  );\n}\n\nfunction AccordionItem({\n  className,\n  ...props\n}: Accordion.Item.Props) {\n  return (\n    <Accordion.Item\n      className={cn(styles.item, className)}\n      data-slot=\"accordion-item\"\n      {...props}\n    />\n  );\n}\n\nfunction AccordionHeader({\n  className,\n  ...props\n}: Accordion.Header.Props) {\n  return (\n    <Accordion.Header\n      className={cn(styles.header, className)}\n      data-slot=\"accordion-header\"\n      {...props}\n    />\n  );\n}\n\nfunction AccordionTrigger({\n  className,\n  children,\n  ...props\n}: Accordion.Trigger.Props) {\n  return (\n    <Accordion.Trigger\n      className={cn(styles.trigger, className)}\n      data-slot=\"accordion-trigger\"\n      {...props}\n    >\n      {children}\n      <ChevronDown className={styles.chevron} />\n    </Accordion.Trigger>\n  );\n}\n\nfunction AccordionPanel({\n  className,\n  children,\n  ...props\n}: Accordion.Panel.Props) {\n  return (\n    <Accordion.Panel\n      className={cn(styles.panel, className)}\n      data-slot=\"accordion-panel\"\n      {...props}\n    >\n      <div className={styles.content}>{children}</div>\n    </Accordion.Panel>\n  );\n}\n\n// biome-ignore lint/performance/noBarrelFile: Re-exporting icon as part of component API\nexport { ChevronDown as ChevronDownIcon } from \"lucide-react\";\n\nexport {\n  AccordionRoot as Accordion,\n  AccordionHeader,\n  AccordionItem,\n  AccordionPanel,\n  AccordionRoot,\n  AccordionTrigger,\n};\n",
      "type": "registry:file",
      "target": "~/components/ui/accordion/accordion.tsx"
    },
    {
      "path": "registry/brook/ui/accordion/accordion.module.css",
      "content": ".root {\n  width: 32rem;\n  max-width: calc(100vw - 8rem);\n  cursor: inherit;\n  display: flex;\n  flex-direction: column;\n}\n\n.item {\n  border-bottom: 0.5px solid oklch(from var(--border) l c h / 0.8);\n}\n\n.item:last-child {\n  border-bottom: none;\n}\n\n.header {\n  margin: 0;\n  letter-spacing: inherit;\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n.trigger {\n  display: flex;\n  box-sizing: border-box;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  height: 41.5px;\n  font-weight: 400;\n  text-align: left;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  color: var(--secondary-foreground);\n\n  @media (hover: hover) {\n    &:hover {\n      color: var(--foreground);\n\n      svg {\n        color: var(--foreground);\n      }\n    }\n  }\n  &:focus-visible {\n    outline: 2px solid var(--ring);\n    outline-offset: 2px;\n    z-index: 1;\n  }\n}\n\n.chevron {\n  width: 1rem;\n  height: 1rem;\n  flex-shrink: 0;\n  transition: transform 150ms ease;\n  color: var(--muted-foreground);\n\n  [data-panel-open] > & {\n    transform: rotate(180deg);\n  }\n}\n\n.panel {\n  box-sizing: border-box;\n  height: var(--accordion-panel-height);\n  overflow: hidden;\n  line-height: 1.4rem;\n  transition: height 150ms var(--ease-out-expo);\n  &[data-starting-style],\n  &[data-ending-style] {\n    height: 0;\n  }\n}\n\n.content {\n  padding: 0rem 0.75rem 1.25rem 0rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: var(--secondary-foreground);\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/accordion/accordion.module.css"
    }
  ]
}