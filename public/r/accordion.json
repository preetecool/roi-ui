{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "accordion",
  "type": "registry:item",
  "title": "Accordion",
  "description": "A collapsible content component.",
  "files": [
    {
      "path": "registry/brook/ui/accordion/accordion.tsx",
      "content": "\"use client\";\n\nimport { Accordion } from \"@base-ui-components/react/accordion\";\nimport { ChevronDown } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport styles from \"./accordion.module.css\";\n\nfunction AccordionRoot({\n  className,\n  ...props\n}: React.ComponentProps<typeof Accordion.Root>) {\n  return <Accordion.Root className={cn(styles.root, className)} {...props} />;\n}\n\nfunction AccordionItem({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof Accordion.Item>) {\n  return <Accordion.Item className={cn(styles.item, className)} {...props} />;\n}\n\nfunction AccordionHeader({\n  className,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof Accordion.Header>) {\n  return (\n    <Accordion.Header className={cn(styles.header, className)} {...props} />\n  );\n}\n\nfunction AccordionTrigger({\n  className,\n  children,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof Accordion.Trigger>) {\n  return (\n    <Accordion.Trigger className={cn(styles.trigger, className)} {...props}>\n      {children}\n      <ChevronDown className={styles.chevron} />\n    </Accordion.Trigger>\n  );\n}\n\nfunction AccordionPanel({\n  className,\n  children,\n  ...props\n}: React.ComponentPropsWithoutRef<typeof Accordion.Panel>) {\n  return (\n    <Accordion.Panel className={cn(styles.panel, className)} {...props}>\n      <div className={styles.content}>{children}</div>\n    </Accordion.Panel>\n  );\n}\n\n// biome-ignore lint/performance/noBarrelFile: Re-exporting icon as part of component API\nexport { ChevronDown as ChevronDownIcon } from \"lucide-react\";\n\nexport {\n  AccordionRoot as Accordion,\n  AccordionHeader,\n  AccordionItem,\n  AccordionPanel,\n  AccordionRoot,\n  AccordionTrigger,\n};\n",
      "type": "registry:file",
      "target": "~/components/ui/accordion/accordion.tsx"
    },
    {
      "path": "registry/brook/ui/accordion/accordion.module.css",
      "content": ".root {\n  width: 32rem;\n  max-width: calc(100vw - 8rem);\n  cursor: inherit;\n}\n\n.item {\n  border-bottom: 0.5px solid oklch(from var(--border) l c h / 0.8);\n}\n\n.item:last-child {\n  border-bottom: none;\n}\n\n.header {\n  margin: 0;\n  letter-spacing: inherit;\n  font-size: 0.875rem;\n  font-weight: 500;\n}\n\n.trigger {\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  height: 41.5px;\n  font-weight: 400;\n  text-align: left;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  color: var(--secondary-foreground);\n  transition: padding 150ms ease-in-out;\n}\n\n.trigger:hover {\n  color: var(--foreground);\n  text-decoration: underline solid;\n\n  svg {\n    color: var(--foreground);\n  }\n}\n\n.trigger:focus {\n  outline: none;\n}\n\n.trigger:focus-visible {\n  outline: 2px solid var(--ring);\n  outline-offset: 2px;\n}\n\n.trigger[data-disabled] {\n  cursor: not-allowed;\n  opacity: 0.5;\n}\n\n.trigger[data-disabled]:hover {\n  background: transparent;\n}\n\n.chevron {\n  width: 1rem;\n  height: 1rem;\n  flex-shrink: 0;\n  transition: transform 150ms ease-in-out;\n  color: var(--muted-foreground);\n}\n\n.trigger[data-panel-open] {\n  transition: padding-bottom 150ms ease-in-out;\n}\n\n[data-panel-open] > .chevron {\n  transform: rotate(180deg);\n}\n\n.panel {\n  box-sizing: border-box;\n  height: var(--accordion-panel-height);\n  overflow: hidden;\n  transition: height 150ms ease-in-out;\n}\n\n.panel[data-starting-style],\n.panel[data-ending-style] {\n  height: 0;\n}\n\n.content {\n  padding: 0rem 0.75rem 1.25rem 0rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: var(--secondary-foreground);\n  position: relative;\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/accordion/accordion.module.css"
    }
  ]
}