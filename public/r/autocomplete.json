{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "autocomplete",
  "type": "registry:item",
  "title": "Autocomplete",
  "description": "An input that suggests options as you type.",
  "files": [
    {
      "path": "registry/brook/ui/autocomplete/autocomplete.tsx",
      "content": "\"use client\";\n\nimport { Autocomplete } from \"@base-ui-components/react/autocomplete\";\nimport { Search, X } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { Input } from \"@/registry/brook/ui/input/input\";\nimport styles from \"./autocomplete.module.css\";\nimport React from \"react\";\n\nconst AutocompleteRoot = ({ \n  ...props \n}: React.ComponentProps<typeof Autocomplete.Root>) => (\n  <Autocomplete.Root {...props} />\n);\n\nconst AutocompleteValue = ({ \n  ...props \n}: React.ComponentProps<typeof Autocomplete.Value>) => (\n  <Autocomplete.Value {...props} />\n);\n\nconst AutocompleteInput = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Input>) => (\n  <Autocomplete.Input\n    render={(props) => <Input {...props} className={cn(className)} />}\n    {...props}\n  />\n);\n\nconst AutocompleteTrigger = ({ \n  className,\n  children,\n  ...props \n}: React.ComponentProps<typeof Autocomplete.Trigger>) => (\n  <Autocomplete.Trigger className={cn(styles.trigger, className)} {...props}>\n    {children || <Search size={16} className={styles.icon} />}\n  </Autocomplete.Trigger>\n);\n\nconst AutocompleteIcon = ({ \n  className,\n  children,\n  ...props \n}: React.ComponentProps<typeof Autocomplete.Icon>) => (\n  <Autocomplete.Icon className={cn(styles.icon, className)} {...props}>\n    {children || <Search size={16} />}\n  </Autocomplete.Icon>\n);\n\nconst AutocompleteClear = ({ \n  className,\n  children,\n  ...props \n}: React.ComponentProps<typeof Autocomplete.Clear>) => (\n  <Autocomplete.Clear className={cn(styles.clear, className)} {...props}>\n    {children || <X size={16} />}\n  </Autocomplete.Clear>\n);\n\nconst AutocompletePortal = Autocomplete.Portal;\n\nconst AutocompleteBackdrop = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Autocomplete.Backdrop>) => (\n  <Autocomplete.Backdrop \n    className={cn(styles.backdrop, className)}\n    {...props}\n  />\n);\n\nconst AutocompletePositioner = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Autocomplete.Positioner>) => (\n  <Autocomplete.Positioner \n    className={cn(styles.positioner, className)}\n    sideOffset={4}\n    {...props}\n  />\n);\n\nconst AutocompletePopup = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Autocomplete.Popup>) => (\n  <Autocomplete.Popup className={cn(styles.popup, className)} {...props} />\n);\n\nconst AutocompleteArrow = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Autocomplete.Arrow>) => (\n  <Autocomplete.Arrow className={cn(styles.arrow, className)} {...props} />\n);\n\nconst AutocompleteStatus = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Autocomplete.Status>) => (\n  <Autocomplete.Status className={cn(styles.status, className)} {...props} />\n);\n\nconst AutocompleteList = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Autocomplete.List>) => (\n  <Autocomplete.List className={cn(styles.list, className)} {...props} />\n);\n\nconst AutocompleteEmpty = ({ \n  className,\n  children,\n  ...props \n}: React.ComponentProps<typeof Autocomplete.Empty>) => (\n  <Autocomplete.Empty className={cn(styles.empty, className)} {...props}>\n    {children || \"No items found\"}\n  </Autocomplete.Empty>\n);\n\nconst AutocompleteCollection = ({ \n  ...props \n}: React.ComponentProps<typeof Autocomplete.Collection>) => (\n  <Autocomplete.Collection {...props} />\n);\n\nconst AutocompleteRow = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Autocomplete.Row>) => (\n  <Autocomplete.Row className={cn(styles.row, className)} {...props} />\n);\n\nconst AutocompleteItem = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Autocomplete.Item>) => (\n  <Autocomplete.Item className={cn(styles.item, className)} {...props} />\n);\n\nconst AutocompleteGroup = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Autocomplete.Group>) => (\n  <Autocomplete.Group className={cn(styles.group, className)} {...props} />\n);\n\nconst AutocompleteGroupLabel = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Autocomplete.GroupLabel>) => (\n  <Autocomplete.GroupLabel className={cn(styles.groupLabel, className)} {...props} />\n);\n\nconst AutocompleteSeparator = ({ \n  className,\n  ...props \n}: React.ComponentProps<typeof Autocomplete.Separator>) => (\n  <Autocomplete.Separator className={cn(styles.separator, className)} {...props} />\n);\n\nexport {\n  AutocompleteRoot as Autocomplete,\n  AutocompleteValue,\n  AutocompleteInput,\n  AutocompleteTrigger,\n  AutocompleteIcon,\n  AutocompleteClear,\n  AutocompletePortal,\n  AutocompleteBackdrop,\n  AutocompletePositioner,\n  AutocompletePopup,\n  AutocompleteArrow,\n  AutocompleteStatus,\n  AutocompleteList,\n  AutocompleteEmpty,\n  AutocompleteCollection,\n  AutocompleteRow,\n  AutocompleteItem,\n  AutocompleteGroup,\n  AutocompleteGroupLabel,\n  AutocompleteSeparator,\n};",
      "type": "registry:file",
      "target": "~/components/ui/autocomplete/autocomplete.tsx"
    },
    {
      "path": "registry/brook/ui/autocomplete/autocomplete.module.css",
      "content": ".input {\n    box-sizing: border-box;\n    padding-left: 0.875rem;\n    margin: 0;\n    border: 1px solid var(--border);\n    width: 100%;\n    height: 2.5rem;\n    border-radius: var(--radius);\n    font-family: inherit;\n    font-size: 0.875rem;\n    background-color: color-mix(in oklab, var(--input) 70%, transparent);\n    color: var(--foreground);\n    outline: none;\n    transition: border-color 150ms ease;\n\n    &::placeholder {\n        color: var(--muted-foreground);\n    }\n\n    &:focus {\n        outline: 2px solid var(--ring);\n        outline-offset: 2px;\n    }\n\n    &[data-disabled] {\n        opacity: 0.5;\n        cursor: not-allowed;\n    }\n\n    &[data-readonly] {\n        background-color: color-mix(in oklab, var(--input) 70%, transparent);\n    }\n}\n\n.trigger {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0.5rem;\n    background: transparent;\n    border: none;\n    cursor: pointer;\n    color: var(--muted-foreground);\n    transition: color 150ms ease;\n\n    &:hover {\n        color: var(--foreground);\n    }\n\n    &:focus-visible {\n        outline: 2px solid var(--ring);\n        outline-offset: 2px;\n    }\n\n    &[data-disabled] {\n        opacity: 0.5;\n        cursor: not-allowed;\n    }\n}\n\n.icon {\n    height: 1rem;\n    width: 1rem;\n    flex-shrink: 0;\n    opacity: 0.6;\n}\n\n.clear {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 0.25rem;\n    border-radius: calc(var(--radius) - 2px);\n    cursor: pointer;\n    color: var(--muted-foreground);\n    transition: all 150ms ease;\n\n    &:hover {\n        color: var(--foreground);\n        background: var(--accent);\n    }\n\n    &:focus-visible {\n        outline: 2px solid var(--ring);\n        outline-offset: 2px;\n    }\n\n    &[data-disabled] {\n        opacity: 0.5;\n        cursor: not-allowed;\n    }\n}\n\n.backdrop {\n    position: fixed;\n    inset: 0;\n    z-index: 40;\n    background-color: rgb(0 0 0 / 0.8);\n    opacity: 0;\n    transition: opacity 150ms ease;\n\n    &[data-open] {\n        opacity: 1;\n    }\n}\n\n.positioner {\n    position: absolute;\n    z-index: 50;\n    width: var(--anchor-width);\n    outline: none;\n}\n\n.popup {\n    box-sizing: border-box;\n    padding-block: 0.5rem;\n    border-radius: var(--radius);\n    background-color: color-mix(in oklch, var(--card) 33%, var(--background));\n    color: var(--popover-foreground);\n    width: var(--anchor-width);\n    max-height: min(var(--available-height), 23rem);\n    max-width: var(--available-width);\n    overflow-y: auto;\n    scroll-padding-block: 0.5rem;\n    overscroll-behavior: contain;\n    border: 1px solid var(--border);\n    box-shadow:\n        0 10px 15px -3px rgb(0 0 0 / 0.1),\n        0 4px 6px -4px rgb(0 0 0 / 0.1);\n    transform-origin: var(--transform-origin);\n    animation: slideDownAndFade 150ms ease-out;\n\n    &[data-starting-style],\n    &[data-ending-style] {\n        opacity: 0;\n        transform: scale(0.95);\n    }\n}\n\n@keyframes slideDownAndFade {\n    from {\n        opacity: 0;\n        transform: translateY(-0.5rem) scale(0.95);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0) scale(1);\n    }\n}\n\n.arrow {\n    position: absolute;\n    width: 0.5rem;\n    height: 0.5rem;\n    background: color-mix(in oklch, var(--card) 33%, var(--background));\n    border: 1px solid var(--border);\n    transform: rotate(45deg);\n}\n\n.arrow[data-side=\"top\"] {\n    bottom: -0.25rem;\n    border-right: none;\n    border-bottom: none;\n}\n\n.arrow[data-side=\"right\"] {\n    left: -0.25rem;\n    border-bottom: none;\n    border-left: none;\n}\n\n.arrow[data-side=\"bottom\"] {\n    top: -0.25rem;\n    border-top: none;\n    border-left: none;\n}\n\n.arrow[data-side=\"left\"] {\n    right: -0.25rem;\n    border-top: none;\n    border-right: none;\n}\n\n.status {\n    padding: 0.5rem 1rem;\n    font-size: 0.875rem;\n    color: var(--muted-foreground);\n}\n\n.list {\n    outline: none;\n}\n\n.empty {\n    box-sizing: border-box;\n    padding: 1rem;\n    font-size: 0.925rem;\n    color: var(--muted-foreground);\n    text-align: center;\n\n    &:empty {\n        margin: 0;\n        padding: 0;\n    }\n}\n\n.row {\n    display: flex;\n    align-items: center;\n}\n\n.item {\n    position: relative;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    padding: 0.5rem 0.75rem;\n    font-size: 0.875rem;\n    border-radius: calc(var(--radius) - 2px);\n    cursor: pointer;\n    transition: all 150ms ease;\n    user-select: none;\n    outline: none;\n\n    &:hover,\n    &[data-highlighted] {\n        background: var(--accent);\n        color: var(--accent-foreground);\n    }\n\n    &[data-disabled] {\n        opacity: 0.5;\n        cursor: not-allowed;\n    }\n}\n\n.group {\n    padding: 0.25rem 0;\n}\n\n.groupLabel {\n    padding: 0.5rem 0.75rem 0.25rem;\n    font-size: 0.75rem;\n    font-weight: 500;\n    color: var(--muted-foreground);\n    text-transform: uppercase;\n    letter-spacing: 0.025em;\n}\n\n.separator {\n    margin: 0.375rem 0.75rem;\n    height: 1px;\n    background-color: var(--border);\n}\n\n@media (max-width: 640px) {\n    .popup {\n        max-width: calc(100vw - 2rem);\n    }\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/autocomplete/autocomplete.module.css"
    }
  ]
}