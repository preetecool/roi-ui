{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "copy-button",
  "type": "registry:item",
  "title": "Copy Button",
  "description": "A button component with animated copy-to-clipboard functionality.",
  "dependencies": ["motion", "lucide-react"],
  "files": [
    {
      "path": "registry/brook/ui/copy-button/copy-button.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Check, Copy } from \"lucide-react\";\nimport { AnimatePresence, motion, MotionConfig } from \"motion/react\";\nimport { useState } from \"react\";\nimport styles from \"./copy-button.module.css\";\n\n/**\n * CopyButton component for copying text to clipboard with animated feedback.\n * Shows a copy icon that animates to a check mark when clicked.\n *\n * @param code - The text content to copy to clipboard\n * @param className - Optional CSS class names\n *\n * @example\n * ```tsx\n * <CopyButton code=\"const example = 'Hello World';\" />\n * ```\n */\nfunction CopyButton({ code, className }: { code: string; className?: string }) {\n  const [copied, setCopied] = useState(false);\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(code);\n      setCopied(true);\n      setTimeout(() => setCopied(false), 800);\n    } catch (error) {\n      console.error(\"Failed to copy code:\", error);\n    }\n  };\n\n  const isHeaderButton = className?.includes(\"header-copy-button\");\n\n  return (\n    <MotionConfig transition={{ duration: 0.4, type: \"spring\", bounce: 0 }}>\n      <motion.button\n        data-slot=\"copy-button\"\n        onClick={handleCopy}\n        className={cn(styles.root, isHeaderButton && styles.header, className)}\n      >\n        <AnimatePresence mode=\"popLayout\">\n          {copied ? (\n            <motion.div\n              key=\"check\"\n              initial={{ scale: 0, rotate: -180, filter: \"blur(4px)\" }}\n              animate={{ scale: 1, rotate: 0, filter: \"blur(0px)\" }}\n              exit={{ scale: 0, rotate: 180, filter: \"blur(4px)\" }}\n              className={styles.iconContainer}\n            >\n              <Check size={14} />\n            </motion.div>\n          ) : (\n            <motion.div\n              key=\"copy\"\n              initial={{ scale: 0, rotate: 180, filter: \"blur(4px)\" }}\n              animate={{ scale: 1, rotate: 0, filter: \"blur(0px)\" }}\n              exit={{ scale: 0, rotate: -180, filter: \"blur(4px)\" }}\n              className={styles.iconContainer}\n            >\n              <Copy size={14} />\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </motion.button>\n    </MotionConfig>\n  );\n}\n\nexport { CopyButton };\n",
      "type": "registry:file",
      "target": "~/components/ui/copy-button/copy-button.tsx"
    },
    {
      "path": "registry/brook/ui/copy-button/copy-button.module.css",
      "content": ".root {\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n    padding: 0.5rem;\n    border-radius: 0.375rem;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    background-color: var(--muted);\n    color: var(--muted);\n    cursor: pointer;\n    transition: all 0.2s;\n    z-index: 10;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 1.875rem;\n    height: 1.875rem;\n}\n\n.root:hover {\n    background-color: var(--muted);\n    color: var(--foreground);\n}\n\n.header {\n    position: static;\n    border: none;\n    background-color: transparent;\n    color: var(--muted-foreground);\n}\n\n.header:hover {\n    background-color: var(--accent);\n}\n\n.iconContainer {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/copy-button/copy-button.module.css"
    }
  ]
}
