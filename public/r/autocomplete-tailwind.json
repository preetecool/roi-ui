{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "autocomplete-tailwind",
  "type": "registry:item",
  "title": "Autocomplete (Tailwind)",
  "description": "An input that suggests options as you type.",
  "files": [
    {
      "path": "registry/brook/tailwind/ui/autocomplete.tsx",
      "content": "\"use client\";\n\nimport { Autocomplete } from \"@base-ui-components/react/autocomplete\";\nimport { Search, X } from \"lucide-react\";\nimport type React from \"react\";\nimport { cn } from \"@/lib/tw-utils\";\n\nfunction AutocompleteRoot({\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Root>) {\n  return <Autocomplete.Root {...props} />;\n}\n\nfunction AutocompleteValue({\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Value>) {\n  return <Autocomplete.Value {...props} />;\n}\n\nfunction AutocompleteInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Input>) {\n  return (\n    <Autocomplete.Input\n      className={cn(\n        \"flex h-10 w-full rounded-[var(--radius)] border border-border\",\n        \"bg-[var(--mix-card-50-bg)] px-3 text-sm transition-all duration-150 ease-out\",\n        \"text-foreground placeholder:text-muted-foreground placeholder:text-sm\",\n        \"data-[focused]:border-ring data-[focused]:shadow-[0_0_0_2px_rgba(var(--ring),0.2)] data-[focused]:outline-none\",\n        \"data-[disabled]:cursor-not-allowed data-[disabled]:opacity-50\",\n        \"data-[invalid]:border-destructive\",\n        \"data-[invalid]:data-[focused]:border-destructive data-[invalid]:data-[focused]:shadow-[0_0_0_2px_rgba(var(--destructive),0.2)] data-[invalid]:focus:border-destructive\",\n        \"data-[valid]:border-success\",\n        \"max-sm:h-11 max-sm:px-4 max-sm:text-[0.9375rem] max-sm:placeholder:text-[0.9375rem]\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteTrigger({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Trigger>) {\n  return (\n    <Autocomplete.Trigger\n      className={cn(\n        \"flex cursor-pointer items-center justify-center border-none bg-transparent p-2\",\n        \"text-muted-foreground transition-colors duration-150\",\n        \"hover:text-foreground\",\n        \"focus-visible:outline-2 focus-visible:outline-ring focus-visible:outline-offset-2\",\n        \"data-[disabled]:cursor-not-allowed data-[disabled]:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      {children || (\n        <Search className=\"h-4 w-4 flex-shrink-0 opacity-60\" size={16} />\n      )}\n    </Autocomplete.Trigger>\n  );\n}\n\nfunction AutocompleteIcon({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Icon>) {\n  return (\n    <Autocomplete.Icon\n      className={cn(\"h-4 w-4 flex-shrink-0 opacity-60\", className)}\n      {...props}\n    >\n      {children || <Search size={16} />}\n    </Autocomplete.Icon>\n  );\n}\n\nfunction AutocompleteClear({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Clear>) {\n  return (\n    <Autocomplete.Clear\n      className={cn(\n        \"flex cursor-pointer items-center justify-center rounded-[calc(var(--radius)-2px)] p-1\",\n        \"text-muted-foreground transition-all duration-150\",\n        \"hover:bg-accent hover:text-foreground\",\n        \"focus-visible:outline-2 focus-visible:outline-ring focus-visible:outline-offset-2\",\n        \"data-[disabled]:cursor-not-allowed data-[disabled]:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      {children || <X size={16} />}\n    </Autocomplete.Clear>\n  );\n}\n\nconst AutocompletePortal = Autocomplete.Portal;\n\nfunction AutocompleteBackdrop({\n  className,\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Backdrop>) {\n  return (\n    <Autocomplete.Backdrop\n      className={cn(\n        \"fixed inset-0 z-[140] bg-[var(--dialog-overlay)] opacity-0 transition-opacity duration-150\",\n        \"data-[open]:opacity-100\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AutocompletePositioner({\n  className,\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Positioner>) {\n  return (\n    <Autocomplete.Positioner\n      className={cn(\n        \"absolute z-[150] w-[var(--anchor-width)] outline-none\",\n        className\n      )}\n      sideOffset={4}\n      {...props}\n    />\n  );\n}\n\nfunction AutocompletePopup({\n  className,\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Popup>) {\n  return (\n    <Autocomplete.Popup\n      className={cn(\n        \"mt-px box-border rounded-[var(--radius)] p-1\",\n        \"bg-[var(--mix-card-75-bg)] text-popover-foreground\",\n        \"max-h-[min(var(--available-height),23rem)] w-[var(--anchor-width)] max-w-[var(--available-width)]\",\n        \"overflow-y-auto overscroll-contain [scroll-padding-block:0.5rem]\",\n        \"border border-border shadow-[0_10px_15px_-3px_rgba(0,0,0,0.1),0_4px_6px_-4px_rgba(0,0,0,0.1)]\",\n        \"origin-[var(--transform-origin)] animate-[slideDownAndFade_150ms_ease-out]\",\n        \"data-[starting-style]:scale-95 data-[starting-style]:opacity-0\",\n        \"data-[ending-style]:scale-95 data-[ending-style]:opacity-0\",\n        \"max-sm:max-w-[calc(100vw-2rem)] max-sm:p-2\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteArrow({\n  className,\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Arrow>) {\n  return (\n    <Autocomplete.Arrow\n      className={cn(\n        \"absolute h-2 w-2 rotate-45 border border-border bg-[var(--mix-card-33-bg)]\",\n        \"data-[side=top]:-bottom-1 data-[side=top]:border-r-0 data-[side=top]:border-b-0\",\n        \"data-[side=right]:-left-1 data-[side=right]:border-b-0 data-[side=right]:border-l-0\",\n        \"data-[side=bottom]:-top-1 data-[side=bottom]:border-t-0 data-[side=bottom]:border-l-0\",\n        \"data-[side=left]:-right-1 data-[side=left]:border-t-0 data-[side=left]:border-r-0\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteStatus({\n  className,\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Status>) {\n  return (\n    <Autocomplete.Status\n      className={cn(\"px-4 py-2 text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteList({\n  className,\n  ...props\n}: React.ComponentProps<typeof Autocomplete.List>) {\n  return (\n    <Autocomplete.List className={cn(\"outline-none\", className)} {...props} />\n  );\n}\n\nfunction AutocompleteEmpty({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Empty>) {\n  return (\n    <Autocomplete.Empty\n      className={cn(\n        \"box-border p-4 text-center text-[0.925rem] text-muted-foreground\",\n        \"empty:m-0 empty:p-0\",\n        \"max-sm:p-5 max-sm:text-[0.9375rem]\",\n        className\n      )}\n      {...props}\n    >\n      {children || \"No items found\"}\n    </Autocomplete.Empty>\n  );\n}\n\nfunction AutocompleteCollection({\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Collection>) {\n  return <Autocomplete.Collection {...props} />;\n}\n\nfunction AutocompleteRow({\n  className,\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Row>) {\n  return (\n    <Autocomplete.Row\n      className={cn(\"flex items-center\", className)}\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteItem({\n  className,\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Item>) {\n  return (\n    <Autocomplete.Item\n      className={cn(\n        \"relative z-0 flex cursor-pointer select-none items-center gap-2 px-3 py-2 text-sm outline-none\",\n        \"data-[highlighted]:relative data-[highlighted]:z-10\",\n        \"data-[highlighted]:before:-z-10 data-[highlighted]:before:absolute data-[highlighted]:before:content-['']\",\n        \"data-[highlighted]:before:inset-0 data-[highlighted]:before:rounded-[calc(var(--radius)-2px)]\",\n        \"data-[highlighted]:before:bg-[var(--mix-accent-33-trans)]\",\n        \"data-[disabled]:cursor-not-allowed data-[disabled]:opacity-50\",\n        \"max-sm:px-4 max-sm:py-3 max-sm:text-[0.9375rem]\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteGroup({\n  className,\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Group>) {\n  return <Autocomplete.Group className={cn(\"py-1\", className)} {...props} />;\n}\n\nfunction AutocompleteGroupLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof Autocomplete.GroupLabel>) {\n  return (\n    <Autocomplete.GroupLabel\n      className={cn(\n        \"px-3 pt-2 pb-1 font-medium text-muted-foreground text-xs uppercase tracking-wide\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nfunction AutocompleteSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Autocomplete.Separator>) {\n  return (\n    <Autocomplete.Separator\n      className={cn(\"mx-3 my-1.5 h-px bg-border\", className)}\n      {...props}\n    />\n  );\n}\n\nexport {\n  AutocompleteRoot as Autocomplete,\n  AutocompleteArrow,\n  AutocompleteBackdrop,\n  AutocompleteClear,\n  AutocompleteCollection,\n  AutocompleteEmpty,\n  AutocompleteGroup,\n  AutocompleteGroupLabel,\n  AutocompleteIcon,\n  AutocompleteInput,\n  AutocompleteItem,\n  AutocompleteList,\n  AutocompletePopup,\n  AutocompletePortal,\n  AutocompletePositioner,\n  AutocompleteRow,\n  AutocompleteSeparator,\n  AutocompleteStatus,\n  AutocompleteTrigger,\n  AutocompleteValue,\n};\n",
      "type": "registry:file",
      "target": "~/components/ui/autocomplete/autocomplete.tsx"
    }
  ]
}