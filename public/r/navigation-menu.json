{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "navigation-menu",
  "type": "registry:item",
  "title": "Navigation Menu",
  "description": "A navigation menu component.",
  "files": [
    {
      "path": "registry/brook/ui/navigation-menu/navigation-menu.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { NavigationMenu } from \"@base-ui-components/react/navigation-menu\";\nimport styles from \"./navigation-menu.module.css\";\n\nconst NavigationMenuRoot = ({ className, ...props }: React.ComponentProps<typeof NavigationMenu.Root>) => (\n  <NavigationMenu.Root className={cn(styles.root, className)} {...props} />\n);\n\nconst NavigationMenuList = ({ className, ...props }: React.ComponentProps<typeof NavigationMenu.List>) => (\n  <NavigationMenu.List className={cn(styles.list, className)} {...props} />\n);\n\nconst NavigationMenuItem = ({ className, ...props }: React.ComponentProps<typeof NavigationMenu.Item>) => (\n  <NavigationMenu.Item className={cn(styles.item, className)} {...props} />\n);\n\nconst NavigationMenuTrigger = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.Trigger>) => {\n  return <NavigationMenu.Trigger className={cn(styles.trigger, className)} {...props} />;\n};\n\nconst NavigationMenuPortal = NavigationMenu.Portal;\n\nconst NavigationMenuIcon = ({ className, ...props }: React.ComponentProps<typeof NavigationMenu.Icon>) => (\n  <NavigationMenu.Icon className={cn(styles.chevron, className)} {...props} />\n);\n\nconst NavigationMenuArrow = ({ className, ...props }: React.ComponentProps<typeof NavigationMenu.Arrow>) => (\n  <NavigationMenu.Arrow className={cn(styles.arrow, className)} {...props}>\n    <svg width=\"16\" height=\"8\" viewBox=\"0 0 16 8\" fill=\"none\">\n      <path d=\"M8 0L16 8H0L8 0Z\" className={styles.arrowFill} />\n      <path\n        d=\"M8 0L16 8H0L8 0Z\"\n        className={styles.arrowOuterStroke}\n        stroke=\"currentColor\"\n        strokeWidth=\"1\"\n        fill=\"none\"\n      />\n    </svg>\n  </NavigationMenu.Arrow>\n);\n\nconst NavigationMenuPositioner = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.Positioner>) => (\n  <NavigationMenu.Positioner className={cn(styles.positioner, className)} {...props} />\n);\n\nconst NavigationMenuPopup = ({\n  className,\n  children,\n  showArrow = true,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.Popup> & {\n  showArrow?: boolean;\n}) => (\n  <NavigationMenu.Popup className={cn(styles.popup, className)} {...props}>\n    {showArrow && (\n      <NavigationMenu.Arrow className={cn(styles.arrow)}>\n        <svg width=\"16\" height=\"8\" viewBox=\"0 0 16 8\" fill=\"none\">\n          <path d=\"M8 0L16 8H0L8 0Z\" className={styles.arrowFill} />\n          <path\n            d=\"M8 0L0 8\"\n            className={styles.arrowOuterStroke}\n            stroke=\"currentColor\"\n            strokeWidth=\"1\"\n            fill=\"none\"\n          />\n          <path\n            d=\"M8 0L16 8\"\n            className={styles.arrowOuterStroke}\n            stroke=\"currentColor\"\n            strokeWidth=\"1\"\n            fill=\"none\"\n          />\n        </svg>\n      </NavigationMenu.Arrow>\n    )}\n    <NavigationMenu.Viewport className={styles.viewport}>{children}</NavigationMenu.Viewport>\n  </NavigationMenu.Popup>\n);\n\nconst NavigationMenuViewport = ({\n  className,\n  children,\n  showArrow = false,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.Positioner> & {\n  showArrow?: boolean;\n}) => (\n  <NavigationMenuPortal>\n    <NavigationMenuPositioner className={className} {...props}>\n      <NavigationMenuPopup showArrow={showArrow}>{children}</NavigationMenuPopup>\n    </NavigationMenuPositioner>\n  </NavigationMenuPortal>\n);\n\nconst NavigationMenuContent = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.Content>) => (\n  <NavigationMenu.Content className={cn(styles.content, className)} {...props} />\n);\n\nconst NavigationMenuLink = ({ className, ...props }: React.ComponentProps<typeof NavigationMenu.Link>) => (\n  <NavigationMenu.Link className={cn(styles.link, className)} {...props} />\n);\n\nconst NavigationMenuLinkItem = ({\n  className,\n  title,\n  description,\n  children,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.Link> & {\n  title?: string;\n  description?: string;\n}) => (\n  <NavigationMenu.Link className={cn(styles.linkCard, className)} {...props}>\n    <div>\n      {title && <div className={styles.linkTitle}>{title}</div>}\n      {description && <div className={styles.linkDescription}>{description}</div>}\n    </div>\n    {children}\n  </NavigationMenu.Link>\n);\n\nexport {\n  NavigationMenuRoot as NavigationMenu,\n  NavigationMenuArrow,\n  NavigationMenuContent,\n  NavigationMenuIcon,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuLinkItem,\n  NavigationMenuList,\n  NavigationMenuPortal,\n  NavigationMenuPositioner,\n  NavigationMenuTrigger,\n  NavigationMenuViewport,\n};\n",
      "type": "registry:file",
      "target": "~/components/ui/navigation-menu/navigation-menu.tsx"
    },
    {
      "path": "registry/brook/ui/navigation-menu/navigation-menu.module.css",
      "content": ".root {\n  position: relative;\n  display: flex;\n  min-width: min-content;\n}\n\n.root *,\n.root *::before,\n.root *::after {\n  list-style: none;\n}\n\n.positioner {\n  --easing: cubic-bezier(0.22, 1, 0.36, 1);\n  --duration: 0.35s;\n  box-sizing: border-box;\n  transition-property: top, left, right, bottom;\n  transition-duration: var(--duration);\n  transition-timing-function: var(--easing);\n  width: var(--positioner-width);\n  height: var(--positioner-height);\n  max-width: var(--available-width);\n}\n\n.positioner[data-instant] {\n  transition: none;\n}\n\n.popup {\n  position: relative;\n  box-sizing: border-box;\n  border-radius: 0.5rem;\n  background: color-mix(in oklch, var(--card) 33%, var(--background));\n  border: 1px solid var(--border);\n  box-shadow:\n    0 10px 15px -3px rgba(0, 0, 0, 0.1),\n    0 4px 6px -2px rgba(0, 0, 0, 0.05);\n  color: var(--foreground);\n  transform-origin: var(--transform-origin);\n  transition-property: opacity, transform, width, height;\n  transition-duration: var(--duration);\n  transition-timing-function: var(--easing);\n}\n\n.popup[data-starting-style],\n.popup[data-ending-style] {\n  opacity: 0;\n  transform: scale(0.95);\n}\n\n.popup[data-ending-style] {\n  transition-timing-function: ease;\n  transition-duration: 0.15s;\n}\n\n.arrow {\n  display: flex;\n  transition: left calc(var(--duration)) var(--easing);\n}\n\n.arrow[data-side=\"top\"] {\n  bottom: -8px;\n  rotate: 180deg;\n}\n\n.arrow[data-side=\"bottom\"] {\n  top: -8px;\n  rotate: 0deg;\n}\n\n.arrow[data-side=\"left\"] {\n  right: -13px;\n  rotate: 90deg;\n}\n\n.arrow[data-side=\"right\"] {\n  left: -13px;\n  rotate: -90deg;\n}\n\n.arrowFill {\n  fill: color-mix(in oklch, var(--card) 33%, var(--background));\n}\n\n.arrowOuterStroke {\n  stroke: var(--border);\n}\n\n.list {\n  display: flex;\n  flex: 1;\n  list-style: none;\n  align-items: center;\n  justify-content: center;\n  gap: 0.25rem;\n  margin: 0;\n  padding: 0;\n}\n\n.item {\n  position: relative;\n}\n\n.item:hover .content,\n.item:focus-within .content,\n.item[data-state=\"open\"] .content {\n  display: block;\n}\n\n.trigger:focus {\n  outline: none;\n}\n\n.trigger:focus-visible {\n  outline: 2px solid var(--ring);\n  outline-offset: 2px;\n}\n\n.trigger[data-popup-open] {\n  background: color-mix(in oklch, var(--card) 33%, var(--background));\n  color: var(--foreground);\n}\n\n.chevron {\n  width: 1rem;\n  height: 1rem;\n  flex-shrink: 0;\n  transition: transform 150ms ease-out;\n}\n\n.trigger[data-popup-open] .chevron {\n  transform: rotate(180deg);\n}\n\n.content {\n  --easing: cubic-bezier(0.22, 1, 0.36, 1);\n  --duration: 0.35s;\n  transition:\n    opacity calc(var(--duration) * 0.5) ease,\n    transform var(--duration) var(--easing);\n  padding: 0.75rem;\n  width: calc(100vw - 40px);\n  height: 100%;\n  list-style: none;\n  box-sizing: border-box;\n}\n\n@media (min-width: 500px) {\n  .content {\n    width: max-content;\n    min-width: 400px;\n  }\n}\n\n.link {\n  display: block;\n  padding: 0.5rem 1rem;\n  font-size: 0.875rem;\n  color: var(--text);\n  text-decoration: none;\n  border-radius: 0.25rem;\n  transition: all 150ms ease-out;\n}\n\n.link:hover {\n  background: var(--background-hover);\n  color: var(--title);\n}\n\n.link:focus {\n  outline: none;\n  background: var(--background-hover);\n  color: var(--title);\n}\n\n.link[data-active] {\n  background: var(--background-hover);\n  color: var(--title);\n  font-weight: 500;\n}\n\n.indicator {\n  position: absolute;\n  top: 100%;\n  z-index: 1;\n  display: flex;\n  height: 0.625rem;\n  align-items: flex-end;\n  justify-content: center;\n  overflow: hidden;\n  transition:\n    width 0.15s ease,\n    transform 0.15s ease;\n}\n\n.indicator::before {\n  content: \"\";\n  position: relative;\n  top: 60%;\n  height: 0.5rem;\n  width: 0.5rem;\n  border: 1px solid var(--border);\n  border-bottom: none;\n  border-right: none;\n  background: color-mix(in oklch, var(--card) 33%, var(--background));\n  border-radius: 0.125rem 0 0 0;\n  transform: rotate(45deg);\n}\n\n.viewport {\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n}\n\n.linkCard {\n  display: flex;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 0.5rem;\n  text-decoration: none;\n  color: inherit;\n  transition: background-color 200ms ease;\n  background: transparent;\n  list-style: none;\n}\n\n.linkCard:hover {\n  background-color: color-mix(in oklch, var(--card) 66%, var(--background));\n}\n\n.linkCard:focus-visible {\n  outline: 2px solid var(--ring);\n  outline-offset: 2px;\n}\n\n.linkTitle {\n  margin: 0 0 0.25rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.25;\n  color: var(--foreground);\n}\n\n.linkDescription {\n  margin: 0;\n  font-size: 0.8rem;\n  line-height: 1.4;\n  color: var(--muted-foreground);\n}\n\n.gridLinkList {\n  display: grid;\n  grid-template-columns: 12rem 12rem;\n  gap: 0.5rem;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\n@media (max-width: 500px) {\n  .gridLinkList {\n    grid-template-columns: 1fr;\n  }\n}\n\n.flexLinkList {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n  max-width: 400px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/navigation-menu/navigation-menu.module.css"
    }
  ]
}