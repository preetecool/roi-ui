{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "navigation-menu",
  "type": "registry:item",
  "title": "Navigation Menu",
  "description": "A navigation menu component.",
  "files": [
    {
      "path": "registry/brook/ui/navigation-menu/navigation-menu.tsx",
      "content": "\"use client\";\n\nimport { NavigationMenu } from \"@base-ui-components/react/navigation-menu\";\nimport { cn } from \"@/lib/utils\";\nimport styles from \"./navigation-menu.module.css\";\n\nconst NavigationMenuRoot = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.Root>) => (\n  <NavigationMenu.Root className={cn(styles.root, className)} {...props} />\n);\n\nconst NavigationMenuList = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.List>) => (\n  <NavigationMenu.List className={cn(styles.list, className)} {...props} />\n);\n\nconst NavigationMenuItem = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.Item>) => (\n  <NavigationMenu.Item className={cn(styles.item, className)} {...props} />\n);\n\nconst NavigationMenuTrigger = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.Trigger>) => {\n  return <NavigationMenu.Trigger className={cn(styles.trigger, className)} {...props} />;\n};\n\nconst NavigationMenuPortal = NavigationMenu.Portal;\n\nconst NavigationMenuIcon = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.Icon>) => (\n  <NavigationMenu.Icon className={cn(styles.chevron, className)} {...props} />\n);\n\nconst NavigationMenuArrow = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.Arrow>) => (\n  <NavigationMenu.Arrow className={cn(styles.arrow, className)} {...props}>\n    <svg width=\"16\" height=\"8\" viewBox=\"0 0 16 8\" fill=\"none\">\n      <path\n        d=\"M8 0L16 8H0L8 0Z\"\n        className={styles.arrowFill}\n      />\n      <path\n        d=\"M8 0L16 8H0L8 0Z\"\n        className={styles.arrowOuterStroke}\n        stroke=\"currentColor\"\n        strokeWidth=\"1\"\n        fill=\"none\"\n      />\n    </svg>\n  </NavigationMenu.Arrow>\n);\n\nconst NavigationMenuPositioner = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.Positioner>) => (\n  <NavigationMenu.Positioner className={cn(styles.positioner, className)} {...props} />\n);\n\nconst NavigationMenuPopup = ({\n  className,\n  children,\n  showArrow = true,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.Popup> & {\n  showArrow?: boolean;\n}) => (\n  <NavigationMenu.Popup className={cn(styles.popup, className)} {...props}>\n    {showArrow && (\n      <NavigationMenu.Arrow className={cn(styles.arrow)}>\n        <svg width=\"16\" height=\"8\" viewBox=\"0 0 16 8\" fill=\"none\">\n          <path\n            d=\"M8 0L16 8H0L8 0Z\"\n            className={styles.arrowFill}\n          />\n          <path\n            d=\"M8 0L0 8\"\n            className={styles.arrowOuterStroke}\n            stroke=\"currentColor\"\n            strokeWidth=\"1\"\n            fill=\"none\"\n          />\n          <path\n            d=\"M8 0L16 8\"\n            className={styles.arrowOuterStroke}\n            stroke=\"currentColor\"\n            strokeWidth=\"1\"\n            fill=\"none\"\n          />\n        </svg>\n      </NavigationMenu.Arrow>\n    )}\n    <NavigationMenu.Viewport className={styles.viewport}>{children}</NavigationMenu.Viewport>\n  </NavigationMenu.Popup>\n);\n\nconst NavigationMenuViewport = ({\n  className,\n  children,\n  showArrow = true,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.Positioner> & {\n  showArrow?: boolean;\n}) => (\n  <NavigationMenuPortal>\n    <NavigationMenuPositioner className={className} {...props}>\n      <NavigationMenuPopup showArrow={showArrow}>{children}</NavigationMenuPopup>\n    </NavigationMenuPositioner>\n  </NavigationMenuPortal>\n);\n\nconst NavigationMenuContent = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.Content>) => (\n  <NavigationMenu.Content className={cn(styles.content, className)} {...props} />\n);\n\nconst NavigationMenuLink = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.Link>) => (\n  <NavigationMenu.Link className={cn(styles.link, className)} {...props} />\n);\n\nconst NavigationMenuLinkItem = ({\n  className,\n  title,\n  description,\n  children,\n  ...props\n}: React.ComponentProps<typeof NavigationMenu.Link> & {\n  title?: string;\n  description?: string;\n}) => (\n  <NavigationMenu.Link className={cn(styles.linkCard, className)} {...props}>\n    <div>\n      {title && <div className={styles.linkTitle}>{title}</div>}\n      {description && <div className={styles.linkDescription}>{description}</div>}\n    </div>\n    {children}\n  </NavigationMenu.Link>\n);\n\nconst NavigationMenuFooter = ({\n  className,\n  children,\n  title,\n  buttonText,\n  buttonHref,\n  onButtonClick,\n  horizontal = false,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement> & {\n  title?: string;\n  buttonText?: string;\n  buttonHref?: string;\n  onButtonClick?: () => void;\n  horizontal?: boolean;\n}) => {\n  if (horizontal && title && buttonText) {\n    return (\n      <div className={cn(styles.footer, styles.horizontalFooter, className)} {...props}>\n        <div className={styles.footerTitle}>{title}</div>\n        <NavigationMenuLink\n          href={buttonHref}\n          onClick={onButtonClick}\n          className={styles.footerButton}\n        >\n          {buttonText}\n          <NavigationMenuIcon>\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <path d=\"M5 12h14M12 5l7 7-7 7\"/>\n            </svg>\n          </NavigationMenuIcon>\n        </NavigationMenuLink>\n      </div>\n    );\n  }\n\n  return (\n    <div className={cn(styles.footer, className)} {...props}>\n      {children}\n    </div>\n  );\n};\n\nexport {\n  NavigationMenuRoot as NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuTrigger,\n  NavigationMenuContent,\n  NavigationMenuViewport,\n  NavigationMenuLink,\n  NavigationMenuLinkItem,\n  NavigationMenuFooter,\n  NavigationMenuIcon,\n  NavigationMenuArrow,\n  NavigationMenuPositioner,\n  NavigationMenuPortal,\n};\n",
      "type": "registry:file",
      "target": "~/components/ui/navigation-menu/navigation-menu.tsx"
    },
    {
      "path": "registry/brook/ui/navigation-menu/navigation-menu.module.css",
      "content": ".root {\n    position: relative;\n    display: flex;\n    min-width: min-content;\n}\n\n.root *,\n.root *::before,\n.root *::after {\n    list-style: none;\n}\n\n.positioner {\n    --easing: cubic-bezier(0.22, 1, 0.36, 1);\n    --duration: 0.35s;\n    box-sizing: border-box;\n    transition-property: top, left, right, bottom;\n    transition-duration: var(--duration);\n    transition-timing-function: var(--easing);\n    width: var(--positioner-width);\n    height: var(--positioner-height);\n    max-width: var(--available-width);\n}\n\n.positioner[data-instant] {\n    transition: none;\n}\n\n.popup {\n    position: relative;\n    box-sizing: border-box;\n    border-radius: 0.5rem;\n    background: color-mix(in oklch, var(--card) 33%, var(--background));\n    border: 1px solid var(--border);\n    box-shadow:\n        0 10px 15px -3px rgba(0, 0, 0, 0.1),\n        0 4px 6px -2px rgba(0, 0, 0, 0.05);\n    color: var(--foreground);\n    transform-origin: var(--transform-origin);\n    transition-property: opacity, transform, width, height;\n    transition-duration: var(--duration);\n    transition-timing-function: var(--easing);\n    width: var(--popup-width);\n    height: var(--popup-height);\n}\n\n.popup[data-starting-style],\n.popup[data-ending-style] {\n    opacity: 0;\n    transform: scale(0.9);\n}\n\n.popup[data-ending-style] {\n    transition-timing-function: ease;\n    transition-duration: 0.15s;\n}\n\n.arrow {\n    display: flex;\n    transition: left calc(var(--duration)) var(--easing);\n}\n\n.arrow[data-side=\"top\"] {\n    bottom: -8px;\n    rotate: 180deg;\n}\n\n.arrow[data-side=\"bottom\"] {\n    top: -8px;\n    rotate: 0deg;\n}\n\n.arrow[data-side=\"left\"] {\n    right: -13px;\n    rotate: 90deg;\n}\n\n.arrow[data-side=\"right\"] {\n    left: -13px;\n    rotate: -90deg;\n}\n\n.arrowFill {\n    fill: color-mix(in oklch, var(--card) 33%, var(--background));\n}\n\n.arrowOuterStroke {\n    stroke: var(--border);\n}\n\n.list {\n    display: flex;\n    flex: 1;\n    list-style: none;\n    align-items: center;\n    justify-content: center;\n    gap: 0.25rem;\n    margin: 0;\n    padding: 0;\n}\n\n.item {\n    position: relative;\n}\n\n.item:hover .content,\n.item:focus-within .content,\n.item[data-state=\"open\"] .content {\n    display: block;\n}\n\n.trigger {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.25rem;\n    padding: 0.5rem 1rem;\n    color: var(--foreground);\n    background: transparent;\n    border: none;\n    border-radius: 0.375rem;\n    cursor: pointer;\n    transition: all 150ms ease-out;\n}\n\n.trigger:hover {\n    background: var(--background-hover);\n    color: var(--title);\n}\n\n.trigger:focus {\n    outline: none;\n}\n\n.trigger:focus-visible {\n    outline: 2px solid var(--ring);\n    outline-offset: 2px;\n}\n\n.trigger[data-popup-open] {\n    background: var(--background-hover);\n    color: var(--title);\n}\n\n.chevron {\n    width: 1rem;\n    height: 1rem;\n    flex-shrink: 0;\n    transition: transform 150ms ease-out;\n}\n\n.trigger[data-popup-open] .chevron {\n    transform: rotate(180deg);\n}\n\n.content {\n    --easing: cubic-bezier(0.22, 1, 0.36, 1);\n    --duration: 0.35s;\n    transition:\n        opacity calc(var(--duration) * 0.5) ease,\n        transform var(--duration) var(--easing);\n    padding: 0.75rem;\n    width: calc(100vw - 40px);\n    height: 100%;\n    list-style: none;\n}\n\n@media (min-width: 500px) {\n    .content {\n        width: max-content;\n        min-width: 350px;\n    }\n}\n\n.content[data-starting-style],\n.content[data-ending-style] {\n    opacity: 0;\n}\n\n.content[data-starting-style][data-activation-direction=\"left\"] {\n    transform: translateX(-50%);\n}\n\n.content[data-starting-style][data-activation-direction=\"right\"] {\n    transform: translateX(50%);\n}\n\n.content[data-ending-style][data-activation-direction=\"left\"] {\n    transform: translateX(50%);\n}\n\n.content[data-ending-style][data-activation-direction=\"right\"] {\n    transform: translateX(-50%);\n}\n\n.content[data-motion=\"from-start\"] {\n    animation: content-from-start 0.15s ease-out;\n}\n\n.content[data-motion=\"from-end\"] {\n    animation: content-from-end 0.15s ease-out;\n}\n\n.content[data-motion=\"to-start\"] {\n    animation: content-to-start 0.15s ease-in;\n}\n\n.content[data-motion=\"to-end\"] {\n    animation: content-to-end 0.15s ease-in;\n}\n\n@keyframes content-in {\n    from {\n        opacity: 0;\n        transform: scale(0.95) translateY(-0.5rem);\n    }\n    to {\n        opacity: 1;\n        transform: scale(1) translateY(0);\n    }\n}\n\n@keyframes content-from-start {\n    from {\n        opacity: 0;\n        transform: translateX(-1rem);\n    }\n    to {\n        opacity: 1;\n        transform: translateX(0);\n    }\n}\n\n@keyframes content-from-end {\n    from {\n        opacity: 0;\n        transform: translateX(1rem);\n    }\n    to {\n        opacity: 1;\n        transform: translateX(0);\n    }\n}\n\n@keyframes content-to-start {\n    from {\n        opacity: 1;\n        transform: translateX(0);\n    }\n    to {\n        opacity: 0;\n        transform: translateX(-1rem);\n    }\n}\n\n@keyframes content-to-end {\n    from {\n        opacity: 1;\n        transform: translateX(0);\n    }\n    to {\n        opacity: 0;\n        transform: translateX(1rem);\n    }\n}\n\n.link {\n    display: block;\n    padding: 0.5rem 1rem;\n    font-size: 0.875rem;\n    color: var(--text);\n    text-decoration: none;\n    border-radius: 0.25rem;\n    transition: all 150ms ease-out;\n}\n\n.link:hover {\n    background: var(--background-hover);\n    color: var(--title);\n}\n\n.link:focus {\n    outline: none;\n    background: var(--background-hover);\n    color: var(--title);\n}\n\n.link[data-active] {\n    background: var(--background-hover);\n    color: var(--title);\n    font-weight: 500;\n    font-size: 1.4rem;\n}\n\n.indicator {\n    position: absolute;\n    top: 100%;\n    z-index: 1;\n    display: flex;\n    height: 0.625rem;\n    align-items: flex-end;\n    justify-content: center;\n    overflow: hidden;\n    transition:\n        width 0.15s ease,\n        transform 0.15s ease;\n}\n\n.indicator::before {\n    content: \"\";\n    position: relative;\n    top: 60%;\n    height: 0.5rem;\n    width: 0.5rem;\n    border: 1px solid var(--border);\n    border-bottom: none;\n    border-right: none;\n    background: color-mix(in oklch, var(--card) 33%, var(--background));\n    border-radius: 0.125rem 0 0 0;\n    transform: rotate(45deg);\n}\n\n.viewport {\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n    height: 100%;\n}\n\n.linkCard {\n    display: flex;\n    align-items: center;\n    padding: 1rem;\n    border-radius: 0.5rem;\n    text-decoration: none;\n    color: inherit;\n    transition: all 150ms ease;\n    background: color-mix(in oklch, var(--card) 33%, var(--background));\n    width: 100%;\n    list-style: none;\n}\n\n.linkCard:hover {\n    background-color: color-mix(in oklab, var(--card) 10%, var(--muted) 90%);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.linkCard:focus-visible {\n    outline: 2px solid var(--ring);\n    outline-offset: 2px;\n}\n\n.linkTitle {\n    margin: 0 0 0.25rem;\n    font-size: 0.875rem;\n    font-weight: 500;\n    line-height: 1.25;\n    color: var(--foreground);\n}\n\n.linkDescription {\n    margin: 0;\n    font-size: 0.8rem;\n    line-height: 1.4;\n    color: var(--muted-foreground);\n}\n\n.gridLinkList {\n    display: grid;\n    grid-template-columns: repeat(2, 12rem);\n    gap: 0.5rem;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n\n@media (max-width: 500px) {\n    .gridLinkList {\n        grid-template-columns: 1fr;\n    }\n}\n\n.flexLinkList {\n    display: flex;\n    flex-direction: column;\n    gap: 0.25rem;\n    max-width: 400px;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n}\n\n.footer {\n    display: flex;\n    flex-direction: column;\n    gap: 0.75rem;\n    margin-top: 1rem;\n    padding-top: 1rem;\n    border-top: 1px solid var(--border);\n}\n\n.footer .linkCard {\n    padding: 0.75rem;\n}\n\n.footer .linkTitle {\n    font-size: 0.8rem;\n    font-weight: 600;\n    color: var(--foreground);\n}\n\n.footer .linkDescription {\n    font-size: 0.75rem;\n    color: var(--muted-foreground);\n}\n\n.horizontalFooter {\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    background: color-mix(in oklch, var(--card) 66%, var(--background));\n    border-radius: 0.5rem;\n    padding: 1rem 1.5rem;\n    margin-top: 1rem;\n    border-top: none;\n}\n\n.footerTitle {\n    font-size: 0.875rem;\n    font-weight: 600;\n    color: var(--secondary-foreground);\n    margin: 0;\n}\n\n.footerButton {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    padding: 0.5rem 1rem;\n    background: transparent;\n    border: 1px solid var(--border);\n    border-radius: 0.375rem;\n    color: var(--secondary-foreground);\n    text-decoration: none;\n    font-size: 0.875rem;\n    font-weight: 500;\n    transition: all 150ms ease;\n}\n\n.footerButton:hover {\n    background: var(--accent);\n    color: var(--accent-foreground);\n    border-color: var(--accent);\n}\n\n.footerButton .chevron {\n    width: 0.875rem;\n    height: 0.875rem;\n    transition: transform 150ms ease;\n}\n\n.footerButton:hover .chevron {\n    transform: translateX(0.125rem);\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/navigation-menu/navigation-menu.module.css"
    }
  ]
}