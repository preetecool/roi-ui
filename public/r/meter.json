{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "meter",
  "type": "registry:item",
  "title": "Meter",
  "description": "A graphical display of a numeric value within a range.",
  "files": [
    {
      "path": "registry/brook/ui/meter/meter.tsx",
      "content": "\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Meter } from \"@base-ui-components/react/meter\";\nimport styles from \"./meter.module.css\";\n\nfunction MeterRoot({\n  className,\n  ...props\n}: React.ComponentProps<typeof Meter.Root>) {\n  return <Meter.Root className={cn(styles.root, className)} {...props} />;\n}\n\nfunction MeterLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof Meter.Label>) {\n  return <Meter.Label className={cn(styles.label, className)} {...props} />;\n}\n\nfunction MeterTrack({\n  className,\n  ...props\n}: React.ComponentProps<typeof Meter.Track>) {\n  return <Meter.Track className={cn(styles.track, className)} {...props} />;\n}\n\nfunction MeterIndicator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Meter.Indicator>) {\n  return (\n    <Meter.Indicator className={cn(styles.indicator, className)} {...props} />\n  );\n}\n\nfunction MeterValue({\n  className,\n  ...props\n}: React.ComponentProps<typeof Meter.Value>) {\n  return <Meter.Value className={cn(styles.value, className)} {...props} />;\n}\n\nexport {\n  MeterRoot as Meter,\n  MeterIndicator,\n  MeterLabel,\n  MeterTrack,\n  MeterValue,\n};\n",
      "type": "registry:file",
      "target": "~/components/ui/meter/meter.tsx"
    },
    {
      "path": "registry/brook/ui/meter/meter.module.css",
      "content": ".root {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  width: 100%;\n}\n\n.label {\n  font-size: 0.875rem;\n  font-weight: 500;\n  color: var(--foreground);\n}\n\n.value {\n  font-size: 0.75rem;\n  color: var(--muted-foreground);\n  font-weight: 500;\n}\n\n.track {\n  position: relative;\n  height: 0.375rem;\n  width: 100%;\n  background-color: var(--mix-card-75-bg);\n  border-radius: 9999px;\n  overflow: hidden;\n}\n\n.indicator {\n  height: 100%;\n  background-color: var(--primary);\n  border-radius: 9999px;\n  transition: all 150ms ease-out;\n  width: var(--meter-indicator-width);\n}\n\n/* Status color variations */\n.root[data-value=\"high\"] .indicator {\n  background-color: var(--destructive);\n}\n\n.root[data-value=\"medium\"] .indicator {\n  background-color: hsl(45 93% 47%);\n}\n\n.root[data-value=\"low\"] .indicator {\n  background-color: var(--primary);\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/meter/meter.module.css"
    }
  ]
}