{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "expandable-card",
  "type": "registry:item",
  "title": "Expandable Card",
  "description": "A card component that can expand to show more content.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "registry/brook/ui/expandable-card/expandable-card.tsx",
      "content": "\"use client\";\nimport { Dialog } from \"@base-ui-components/react/dialog\";\nimport { Plus, X } from \"lucide-react\";\nimport { AnimatePresence, motion } from \"motion/react\";\nimport { useState } from \"react\";\nimport styles from \"./expandable-card.module.css\";\n\ninterface ExpandableCardItem {\n  id: string | number;\n  imageSrc: string;\n  alt: string;\n  cardHeading: string;\n  content?: React.ReactNode;\n}\n\ninterface ExpandableCardProps {\n  item: ExpandableCardItem;\n}\n\nexport default function ExpandableCard({ item }: ExpandableCardProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className={styles.wrapper}>\n      <Dialog.Root open={isOpen} onOpenChange={setIsOpen}>\n        <AnimatePresence>\n          {isOpen && (\n            <Dialog.Backdrop\n              render={\n                <motion.div\n                  className={styles.overlay}\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  exit={{ opacity: 0 }}\n                />\n              }\n            />\n          )}\n        </AnimatePresence>\n\n        <Dialog.Portal keepMounted>\n          <AnimatePresence>\n            {isOpen && (\n              <div className={styles.modalPositioner}>\n                <Dialog.Popup\n                  render={\n                    <motion.div\n                      layoutId={`card-${item.id}`}\n                      className={styles.expandedCard}\n                      style={{\n                        borderRadius: \"24px\",\n                        transform: \"none\",\n                      }}\n                    />\n                  }\n                >\n                  <Dialog.Close className={styles.closeButton} aria-label=\"Close\">\n                    <X width={21} height={21} strokeWidth={2} />\n                  </Dialog.Close>\n\n                  <motion.img\n                    layoutId={`image-${item.id}`}\n                    width={600}\n                    height={600}\n                    src={item.imageSrc}\n                    alt={item.alt}\n                    className={styles.expandedImage}\n                    style={{ borderRadius: \"12px\" }}\n                  />\n\n                  <motion.div className={styles.contentExpanded}>\n                    <motion.div layoutId={`heading-${item.id}`}>\n                      <motion.h3 className={styles.expandedHeading}>{item.cardHeading}</motion.h3>\n                    </motion.div>\n\n                    <motion.div\n                      className={styles.expandedContent}\n                      initial={{ opacity: 0, y: 80, scale: 0.95 }}\n                      animate={{ opacity: 1, y: 0, scale: 1 }}\n                      exit={{ opacity: 0, y: 40, scale: 0.95 }}\n                    >\n                      {item.content}\n                    </motion.div>\n                  </motion.div>\n                </Dialog.Popup>\n              </div>\n            )}\n          </AnimatePresence>\n        </Dialog.Portal>\n\n        <Dialog.Trigger\n          render={\n            <motion.button\n              layoutId={`card-${item.id}`}\n              className={styles.card}\n              style={{ borderRadius: \"24px\" }}\n            />\n          }\n        >\n          <motion.img\n            layoutId={`image-${item.id}`}\n            height={300}\n            width={300}\n            src={item.imageSrc}\n            alt={item.alt}\n            className={styles.image}\n            style={{ borderRadius: \"12px\" }}\n          />\n\n          <div className={styles.contentContainer}>\n            <motion.div layoutId={`heading-${item.id}`}>\n              <motion.h3\n                transition={{ layout: { duration: 0, bounce: 0, delay: 0.3 } }}\n                className={styles.heading}\n              >\n                {item.cardHeading}\n              </motion.h3>\n            </motion.div>\n\n            <motion.div className={styles.expandIcon}>\n              <Plus width={21} height={21} strokeWidth={2} />\n            </motion.div>\n          </div>\n        </Dialog.Trigger>\n      </Dialog.Root>\n    </div>\n  );\n}\n\nexport type { ExpandableCardItem };\n",
      "type": "registry:file",
      "target": "~/components/ui/expandable-card/expandable-card.tsx"
    },
    {
      "path": "registry/brook/ui/expandable-card/expandable-card.module.css",
      "content": ".wrapper {\n  position: relative;\n  width: fit-content;\n  height: fit-content;\n}\n\n.overlay {\n  position: fixed;\n  inset: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n\n  pointer-events: auto;\n}\n\n.overlay[data-starting-style],\n.overlay[data-ending-style] {\n  opacity: 1;\n  transform: none;\n}\n\n.card {\n  all: unset;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 320px;\n  border: 1px solid var(--border);\n  overflow: hidden;\n}\n\n.card:focus-visible {\n  outline: 2px solid var(--ring);\n  outline-offset: 2px;\n}\n\n.image {\n  width: 100%;\n  height: 320px;\n  object-fit: cover;\n}\n\n.heading {\n  font-size: var(--font-size-2xl);\n  font-weight: 600;\n  color: var(--title);\n  margin: 0;\n}\n\n.modalPositioner {\n  position: fixed;\n  inset: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  pointer-events: none;\n}\n\n.expandedCard {\n  position: relative;\n  top: 5vh;\n  width: 100%;\n  max-width: 900px;\n  max-height: 100vh;\n  overflow-y: auto;\n  background-color: color-mix(in oklch, var(--card) 33%, var(--background));\n  border: 1px solid var(--border);\n  padding: 24px;\n  padding-bottom: 8vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  pointer-events: auto;\n  transition: none;\n  animation: none;\n  opacity: 1;\n  transform: none;\n}\n\n.contentExpanded {\n  max-width: 600px;\n  margin: 0 auto;\n  padding-top: 28px;\n  padding-left: 0;\n  padding-right: 0;\n  padding-bottom: 0;\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 36px;\n  text-align: left;\n}\n\n.expandedImage {\n  width: 100%;\n  max-width: 600px;\n  height: auto;\n  object-fit: contain;\n}\n\n.expandedHeading {\n  font-size: 48px;\n  font-weight: 600;\n  color: var(--title);\n  margin: 0;\n  align-self: flex-start;\n  width: 100%;\n}\n\n.expandedContent {\n  color: var(--foreground);\n}\n\n.closeButton {\n  position: absolute;\n  width: 32px;\n  height: 32px;\n  right: 16px;\n  top: 16px;\n  border-radius: 50%;\n  border: 1px solid var(--border);\n  padding: 0;\n  z-index: 10;\n  background: var(--card);\n  color: var(--muted-foreground);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n}\n\n.closeButton:hover {\n  color: var(--foreground);\n  background-color: var(--muted);\n}\n\n.contentContainer {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n}\n\n.expandIcon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--muted-foreground);\n  width: 36px;\n  height: 36px;\n  min-width: 36px;\n  min-height: 36px;\n  border-radius: 50%;\n  border: 1px solid var(--border-dark);\n  margin-left: auto;\n  flex-shrink: 0;\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/expandable-card/expandable-card.module.css"
    }
  ]
}