{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "expandable-card",
  "type": "registry:block",
  "title": "Expandable Card",
  "description": "A card component that can expand to show more content.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "registry/brook/blocks/expandable-card/expandable-card.tsx",
      "content": "\"use client\";\nimport { Dialog } from \"@base-ui-components/react/dialog\";\nimport { Plus, X } from \"lucide-react\";\nimport { AnimatePresence, motion } from \"motion/react\";\nimport { useState } from \"react\";\nimport styles from \"./expandable-card.module.css\";\n\ntype ExpandableCardItem = {\n  id: string | number;\n  imageSrc: string;\n  alt: string;\n  cardHeading: string;\n  content?: React.ReactNode;\n};\n\ntype ExpandableCardProps = {\n  item: ExpandableCardItem;\n};\n\nexport default function ExpandableCard({ item }: ExpandableCardProps) {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className={styles.wrapper}>\n      <Dialog.Root onOpenChange={setIsOpen} open={isOpen}>\n        <AnimatePresence>\n          {isOpen && (\n            <Dialog.Backdrop\n              key=\"overlay\"\n              render={\n                <motion.div\n                  animate={{\n                    opacity: 1,\n                  }}\n                  className={styles.overlay}\n                  exit={{ opacity: 0 }}\n                  hidden={undefined}\n                  initial={{ opacity: 0 }}\n                  transition={{\n                    delay: 0.035,\n                    duration: 0.2,\n                    // biome-ignore lint/style/noMagicNumbers: cubic-bezier easing values\n                    ease: [0.455, 0.03, 0.515, 0.955],\n                  }}\n                />\n              }\n            />\n          )}\n        </AnimatePresence>\n        <Dialog.Portal keepMounted>\n          <AnimatePresence>\n            {isOpen && (\n              <div className={styles.modalPositioner} key=\"positioner\">\n                <Dialog.Popup\n                  hidden={undefined}\n                  render={\n                    <motion.div\n                      className={styles.expandedCard}\n                      layoutId={`card-${item.id}`}\n                      style={{\n                        borderRadius: \"32px\",\n                        overflow: \"hidden\",\n                      }}\n                    />\n                  }\n                >\n                  <div className={styles.scrollableContent}>\n                    <div className={styles.closeButtonContainer}>\n                      <Dialog.Close\n                        aria-label=\"Close\"\n                        render={\n                          <motion.button\n                            animate={{ opacity: 1 }}\n                            className={styles.closeButton}\n                            exit={{ opacity: 0, display: \"flex\" }}\n                            initial={{ opacity: 0 }}\n                            transition={{\n                              type: \"spring\",\n                              duration: 0.2,\n                              delay: 0.1,\n                            }}\n                          />\n                        }\n                      >\n                        <X height={21} strokeWidth={2} width={21} />\n                      </Dialog.Close>\n                    </div>\n\n                    <motion.img\n                      alt={item.alt}\n                      className={styles.expandedImage}\n                      height={600}\n                      layoutId={`image-${item.id}`}\n                      src={item.imageSrc}\n                      style={{ borderRadius: \"16px\" }}\n                      width={600}\n                    />\n\n                    <motion.div className={styles.contentExpanded}>\n                      <motion.div layoutId={`heading-${item.id}`}>\n                        <motion.h3 className={styles.expandedHeading}>\n                          {item.cardHeading}\n                        </motion.h3>\n                      </motion.div>\n\n                      <motion.div\n                        animate={{ opacity: 1, y: 0, scale: 1 }}\n                        className={styles.paragrahWrapper}\n                        exit={{\n                          opacity: 0,\n                          display: \"block\",\n                          y: -40,\n                          scale: 0.95,\n                          transition: { delay: 0.05 },\n                        }}\n                        initial={{ opacity: 0, y: -40, scale: 0.95 }}\n                        transition={{ duration: 0.2 }}\n                      >\n                        {item.content}\n                      </motion.div>\n                    </motion.div>\n                  </div>\n                </Dialog.Popup>\n              </div>\n            )}\n          </AnimatePresence>\n        </Dialog.Portal>\n        <Dialog.Trigger\n          render={\n            <motion.button\n              className={styles.card}\n              layoutId={`card-${item.id}`}\n              style={{ borderRadius: \"24px\" }}\n            />\n          }\n        >\n          <motion.img\n            alt={item.alt}\n            className={styles.image}\n            height={300}\n            layoutId={`image-${item.id}`}\n            src={item.imageSrc}\n            style={{ borderRadius: \"12px\" }}\n            width={300}\n          />\n\n          <div className={styles.contentContainer}>\n            <motion.div layoutId={`heading-${item.id}`}>\n              <motion.h3 className={styles.heading}>\n                {item.cardHeading}\n              </motion.h3>\n            </motion.div>\n\n            <motion.div className={styles.expandIcon}>\n              <Plus height={21} strokeWidth={2} width={21} />\n            </motion.div>\n          </div>\n        </Dialog.Trigger>\n      </Dialog.Root>\n    </div>\n  );\n}\n\nexport type { ExpandableCardItem };\n",
      "type": "registry:file",
      "target": "~/components/blocks/expandable-card/expandable-card.tsx"
    },
    {
      "path": "registry/brook/blocks/expandable-card/expandable-card.module.css",
      "content": ".wrapper {\n  position: relative;\n  width: fit-content;\n  height: fit-content;\n}\n\n.overlay {\n  position: fixed;\n  min-height: 100dvh;\n  z-index: 100;\n  inset: 0;\n  background-color: black;\n  opacity: 1;\n  transition: opacity 300ms cubic-bezier(0.45, 1.005, 0, 1.005);\n\n  @supports (-webkit-touch-callout: none) {\n    position: absolute;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    opacity: 0.95;\n  }\n\n  &[data-starting-style],\n  &[data-ending-style] {\n    opacity: 0;\n  }\n}\n\n.card {\n  all: unset;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 320px;\n  border: 0.5px solid oklch(from var(--border) l c h / 0.7);\n}\n\n.card:focus-visible {\n  outline: 2px solid var(--ring);\n  outline-offset: 2px;\n}\n\n.image {\n  width: 100%;\n  height: 320px;\n  object-fit: cover;\n}\n\n.heading {\n  font-size: var(--font-size-2xl);\n  font-weight: 600;\n  color: var(--secondary-foreground);\n  margin: 0;\n  transition: 150ms ease-out;\n}\n\n.card:hover .heading {\n  color: var(--foreground);\n}\n\n.modalPositioner {\n  position: fixed;\n  inset: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 9999;\n  pointer-events: none;\n  overflow-y: auto;\n  max-height: 100%;\n}\n\n.expandedCard {\n  position: fixed;\n  top: 5vh;\n  width: 100%;\n  max-width: 960px;\n  max-height: 100dvh;\n  overflow: hidden;\n  background-color: var(--mix-card-15-bg);\n  border: 0.5px solid oklch(from var(--border) l c h / 0.6);\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  pointer-events: auto;\n  transition: none;\n  animation: none;\n  opacity: 1;\n  transform: none;\n  scrollbar-width: thin;\n  scrollbar-color: var(--border) transparent;\n}\n\n.scrollableContent {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  overflow-y: auto;\n  padding: 24px;\n  padding-top: 0vh;\n  padding-bottom: 12vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  scrollbar-width: thin;\n  scrollbar-color: var(--border) transparent;\n\n  mask-image: linear-gradient(\n    to bottom,\n    var(--background) calc(100% - 10vh),\n    oklch(from var(--background) l c h / 0.33) calc(100% - calc(8vh / 2)),\n    transparent 100%\n  );\n  -webkit-mask-image: linear-gradient(\n    to bottom,\n    var(--background) calc(100% - 10vh),\n    oklch(from var(--background) l c h / 0.33) calc(100% - calc(8vh / 2)),\n    transparent 100%\n  );\n}\n\n.scrollableContent::-webkit-scrollbar {\n  width: 8px;\n}\n\n.scrollableContent::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.scrollableContent::-webkit-scrollbar-thumb {\n  background-color: var(--border);\n  border-radius: 4px;\n}\n\n.scrollableContent::-webkit-scrollbar-thumb:hover {\n  background-color: var(--muted-foreground);\n}\n\n.contentExpanded {\n  max-width: 700px;\n  line-height: 2;\n  margin: 0 auto;\n  padding-top: 28px;\n  padding-left: 0;\n  padding-right: 0;\n  padding-bottom: 0;\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 36px;\n  text-align: left;\n}\n\n.expandedImage {\n  width: 100%;\n  max-width: 700px;\n  height: auto;\n  object-fit: contain;\n}\n\n.expandedHeading {\n  font-size: 48px;\n  font-weight: 600;\n  color: var(--foreground);\n  margin: 0;\n  align-self: flex-start;\n  width: 100%;\n}\n\n.paragrahWrapper {\n  color: oklch(from var(--secondary-foreground) l c h / 0.8);\n}\n\n.closeButtonContainer {\n  position: sticky;\n  align-self: flex-end;\n  width: 44px;\n  height: 44px;\n  top: 32px;\n  border-radius: 50%;\n  z-index: 20;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n}\n\n.closeButton {\n  width: 32px;\n  height: 32px;\n  border-radius: 999px;\n  border: 0.5px solid oklch(from var(--border) l c h / 0.7);\n  z-index: 20;\n  background: transparent;\n  color: var(--muted-foreground);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: 150ms ease-out;\n}\n\n.closeButton:hover {\n  color: var(--foreground);\n  background-color: var(--muted);\n}\n\n.contentContainer {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 16px;\n}\n\n.expandIcon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--muted-foreground);\n  width: 36px;\n  height: 36px;\n  min-width: 36px;\n  min-height: 36px;\n  border-radius: 50%;\n  border: 0.5px solid oklch(from var(--border) l c h / 0.7);\n  margin-left: auto;\n  flex-shrink: 0;\n  transition: 150ms ease-out;\n}\n.expandIcon:hover,\n.card:hover .expandIcon {\n  background-color: var(--card);\n  color: var(--foreground);\n}\n\n@media (max-width: 768px) {\n  .card {\n    max-width: 300px;\n  }\n  .expandedHeading {\n    font-size: 32px;\n  }\n  .expandedContent {\n    font-size: 14px;\n  }\n\n  .scrollableContent {\n    padding: 0px 16px;\n    justify-content: space-between;\n    gap: 0px;\n    mask-image: linear-gradient(to bottom, #000 0%, #000 95%, transparent 100%);\n    -webkit-mask-image: linear-gradient(\n      to bottom,\n      #000 0%,\n      #000 97%,\n      transparent 100%\n    );\n  }\n}\n",
      "type": "registry:file",
      "target": "~/components/blocks/expandable-card/expandable-card.module.css"
    }
  ]
}