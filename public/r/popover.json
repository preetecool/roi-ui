{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "popover",
  "type": "registry:item",
  "title": "Popover",
  "description": "A floating content container.",
  "files": [
    {
      "path": "registry/brook/ui/popover/popover.tsx",
      "content": "\"use client\";\n\nimport { Popover } from \"@base-ui-components/react/popover\";\nimport { cn } from \"@/lib/utils\";\nimport styles from \"./popover.module.css\";\n\nfunction PopoverRoot({ ...props }: React.ComponentProps<typeof Popover.Root>) {\n  return <Popover.Root {...props} />;\n}\n\nfunction PopoverTrigger({\n  className,\n  render,\n  ...props\n}: React.ComponentProps<typeof Popover.Trigger>) {\n  return (\n    <Popover.Trigger\n      className={cn(styles.trigger, className)}\n      render={render}\n      {...props}\n    />\n  );\n}\n\nconst PopoverPortal = Popover.Portal;\n\nfunction PopoverBackdrop({\n  className,\n  ...props\n}: React.ComponentProps<typeof Popover.Backdrop>) {\n  return (\n    <Popover.Backdrop className={cn(styles.backdrop, className)} {...props} />\n  );\n}\n\nfunction PopoverPositioner({\n  className,\n  ...props\n}: React.ComponentProps<typeof Popover.Positioner>) {\n  return (\n    <Popover.Positioner\n      className={cn(styles.positioner, className)}\n      {...props}\n    />\n  );\n}\n\nfunction PopoverPopup({\n  className,\n  ...props\n}: React.ComponentProps<typeof Popover.Popup>) {\n  return <Popover.Popup className={cn(styles.popup, className)} {...props} />;\n}\n\nfunction PopoverArrow({\n  className,\n  ...props\n}: React.ComponentProps<typeof Popover.Arrow>) {\n  return <Popover.Arrow className={cn(styles.arrow, className)} {...props} />;\n}\n\nfunction PopoverTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof Popover.Title>) {\n  return <Popover.Title className={cn(styles.title, className)} {...props} />;\n}\n\nfunction PopoverDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof Popover.Description>) {\n  return (\n    <Popover.Description\n      className={cn(styles.description, className)}\n      {...props}\n    />\n  );\n}\n\nfunction PopoverClose({\n  className,\n  ...props\n}: React.ComponentProps<typeof Popover.Close>) {\n  return <Popover.Close className={cn(styles.close, className)} {...props} />;\n}\n\nfunction PopoverContent({\n  className,\n  style,\n  ...props\n}: React.ComponentProps<typeof Popover.Popup>) {\n  return (\n    <PopoverPortal>\n      <PopoverPositioner sideOffset={8}>\n        <PopoverPopup\n          className={cn(styles.popup, className)}\n          style={style}\n          {...props}\n        />\n      </PopoverPositioner>\n    </PopoverPortal>\n  );\n}\n\nexport {\n  PopoverRoot as Popover,\n  PopoverArrow,\n  PopoverBackdrop,\n  PopoverClose,\n  PopoverContent,\n  PopoverDescription,\n  PopoverPopup,\n  PopoverPortal,\n  PopoverPositioner,\n  PopoverTitle,\n  PopoverTrigger,\n};\n",
      "type": "registry:file",
      "target": "~/components/ui/popover/popover.tsx"
    },
    {
      "path": "registry/brook/ui/popover/popover.module.css",
      "content": "@media (hover: hover) {\n  .trigger:hover {\n    background-color: var(--accent);\n  }\n}\n\n.trigger:active {\n  background-color: var(--accent);\n}\n\n.trigger[data-popup-open] {\n  background-color: var(--accent);\n}\n\n.trigger:focus-visible {\n  outline: 2px solid var(--ring);\n  outline-offset: -1px;\n}\n\n.backdrop {\n  position: fixed;\n  inset: 0;\n  background-color: oklch(0 0 0 / 0.1);\n  z-index: 998;\n}\n\n.positioner {\n  position: absolute;\n  z-index: 999;\n}\n\n.popup {\n  position: relative;\n  box-sizing: border-box;\n  padding: 1rem 1rem;\n  border-radius: var(--radius);\n  background-color: var(--mix-card-33-bg);\n  color: var(--popover-foreground);\n  transform-origin: var(--transform-origin);\n  transition:\n    transform 150ms ease,\n    opacity 150ms ease;\n  outline: 1px solid var(--border);\n  box-shadow: var(--shadow-lg);\n  z-index: 1000;\n}\n\n.popup[data-starting-style],\n.popup[data-ending-style] {\n  opacity: 0;\n  transform: scale(0.9);\n}\n\n.popup:focus-visible {\n  outline: 1px solid var(--ring);\n  outline-offset: 1px;\n}\n\n.arrow {\n  display: flex;\n}\n\n.arrow[data-side=\"top\"] {\n  bottom: -8px;\n  rotate: 180deg;\n}\n\n.arrow[data-side=\"bottom\"] {\n  top: -8px;\n  rotate: 0deg;\n}\n\n.arrow[data-side=\"left\"] {\n  right: -13px;\n  rotate: 90deg;\n}\n\n.arrow[data-side=\"right\"] {\n  left: -13px;\n  rotate: -90deg;\n}\n\n.arrow svg {\n  fill: var(--mix-card-33-bg);\n  stroke: var(--border);\n  stroke-width: 1px;\n}\n\n.title {\n  margin: 0;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  font-weight: 500;\n  color: var(--popover-foreground);\n}\n\n.description {\n  margin: 0;\n  font-size: 1rem;\n  line-height: 1.5rem;\n  color: var(--muted-foreground);\n}\n\n.close {\n  all: unset;\n  box-sizing: border-box;\n  position: absolute;\n  top: 0.25rem;\n  right: 0.25rem;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 1.5rem;\n  height: 1.5rem;\n  padding: 0;\n  border-radius: var(--radius);\n  cursor: pointer;\n  color: var(--muted-foreground);\n  transition:\n    background-color 150ms ease,\n    color 150ms ease;\n}\n\n.close:hover {\n  background-color: var(--muted);\n  color: var(--foreground);\n}\n\n.close:focus-visible {\n  outline: 2px solid var(--ring);\n  outline-offset: 2px;\n}\n\n.close svg {\n  width: 1rem;\n  height: 1rem;\n}\n\n.actions {\n  display: flex;\n  justify-content: end;\n  gap: 1rem;\n  margin-top: 1rem;\n}\n\n[data-theme=\"dark\"] .backdrop {\n  background-color: oklch(0 0 0 / 0.2);\n}\n\n[data-theme=\"dark\"] .popup {\n  outline: 1px solid var(--border);\n  outline-offset: -1px;\n}\n\n@media (max-width: 640px) {\n  .popup {\n    max-width: calc(100vw - 2rem);\n    margin: 1rem;\n  }\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/popover/popover.module.css"
    }
  ]
}