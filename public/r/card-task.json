{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "card-task",
  "type": "registry:block",
  "title": "Card Task",
  "description": "A task card component with badges, avatars, and action menu.",
  "files": [
    {
      "path": "registry/brook/blocks/card-task/card-task.tsx",
      "content": "\"use client\";\n\nimport {\n  Calendar,\n  LayoutList,\n  MessageCircle,\n  MoreHorizontal,\n  Trash,\n  UserPlus,\n  Users,\n} from \"lucide-react\";\nimport { useState } from \"react\";\nimport {\n  AlertDialog,\n  AlertDialogClose,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/registry/brook/ui/alert-dialog/alert-dialog\";\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from \"@/registry/brook/ui/avatar/avatar\";\nimport { Badge } from \"@/registry/brook/ui/badge/badge\";\nimport { Button } from \"@/registry/brook/ui/button/button\";\nimport {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/registry/brook/ui/card/card\";\nimport {\n  DropdownMenu,\n  DropdownMenuItem,\n  DropdownMenuPopup,\n  DropdownMenuPortal,\n  DropdownMenuPositioner,\n  DropdownMenuTrigger,\n} from \"@/registry/brook/ui/dropdown-menu/dropdown-menu\";\nimport styles from \"./card-task.module.css\";\n\nexport function CardTask() {\n  const [alertOpen, setAlertOpen] = useState(false);\n\n  return (\n    <>\n      <Card className={styles.taskCard}>\n        <CardHeader>\n          <CardTitle style={{ fontSize: \"1rem\" }}>\n            {\" \"}\n            Update Documentation\n          </CardTitle>\n          <CardDescription>\n            Update the card component documentation to reflect the new style\n          </CardDescription>\n          <CardAction>\n            <DropdownMenu>\n              <DropdownMenuTrigger\n                render={(props) => (\n                  <Button {...props} size=\"icon\" variant=\"ghost\">\n                    <MoreHorizontal size=\"16\" />\n                  </Button>\n                )}\n              />\n              <DropdownMenuPortal>\n                <DropdownMenuPositioner>\n                  <DropdownMenuPopup\n                    className={styles.taskDropdown}\n                    style={{ minWidth: \"160px\" }}\n                  >\n                    <DropdownMenuItem icon={<Calendar size=\"14\" />}>\n                      Change due date\n                    </DropdownMenuItem>\n                    <DropdownMenuItem icon={<UserPlus size=\"14\" />}>\n                      Add collaborator\n                    </DropdownMenuItem>\n\n                    <DropdownMenuItem\n                      className={styles.destructiveMenuItem}\n                      icon={<Trash size=\"14\" />}\n                      onClick={() => setAlertOpen(true)}\n                    >\n                      Delete task\n                    </DropdownMenuItem>\n                  </DropdownMenuPopup>\n                </DropdownMenuPositioner>\n              </DropdownMenuPortal>\n            </DropdownMenu>\n          </CardAction>\n        </CardHeader>\n        <CardContent>\n          <div className={styles.contentContainer}>\n            <div className={styles.badgeContainer}>\n              <Badge size=\"sm\" variant=\"destructive\">\n                <span>Urgent</span>\n              </Badge>\n              <Badge size=\"sm\">\n                <span>Docs</span>\n              </Badge>\n            </div>\n            <div>\n              <Avatar style={{ width: \"28px\", height: \"28px\" }}>\n                <AvatarImage\n                  alt=\"profile image for @preetecool\"\n                  src=\"/preetecool.png\"\n                />\n                <AvatarFallback>AD</AvatarFallback>\n              </Avatar>\n            </div>\n          </div>\n        </CardContent>\n\n        <div className={styles.divider} />\n        <CardFooter className={styles.taskFooter}>\n          <div className={styles.footerContainer}>\n            <div className={styles.footerLeftGroup}>\n              <div className={styles.footerItem}>\n                <Users size=\"14\" />\n\n                <span>2</span>\n              </div>\n              <div className={styles.footerItem}>\n                <MessageCircle size=\"14\" />\n                <span>4</span>\n              </div>\n              <div className={styles.footerItem}>\n                <LayoutList size=\"14\" />\n                <span>4/5</span>\n              </div>\n            </div>\n            <div className={styles.footerItem}>\n              <Calendar size=\"14\" />\n              <span className={styles.tomorrowText}>1d </span>\n            </div>\n          </div>\n        </CardFooter>\n      </Card>\n\n      <AlertDialog onOpenChange={setAlertOpen} open={alertOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Delete Task</AlertDialogTitle>\n            <AlertDialogDescription>\n              Are you sure you want to delete this task?\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <AlertDialogFooter>\n            <AlertDialogClose\n              render={<Button variant=\"outline\">Cancel</Button>}\n            />\n            <Button onClick={() => setAlertOpen(false)} variant=\"destructive\">\n              Delete\n            </Button>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  );\n}\n",
      "type": "registry:file",
      "target": "~/components/blocks/card-task/card-task.tsx"
    },
    {
      "path": "registry/brook/blocks/card-task/card-task.module.css",
      "content": ".taskCard {\n  width: 100%;\n  max-width: 300px;\n  gap: 1rem;\n  padding: 16px;\n}\n\n.contentContainer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n}\n\n.badgeContainer {\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n}\n\n.divider {\n  width: calc(100% + 32px);\n  height: 1px;\n  background: var(--border);\n  margin-left: -16px;\n  margin-right: -16px;\n  margin-top: auto;\n}\n\n.footerContainer {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  color: var(--muted-foreground);\n  font-size: 12px;\n}\n\n.footerLeftGroup {\n  display: flex;\n  gap: 0.75rem;\n  align-items: center;\n}\n\n.footerItem {\n  display: flex;\n  justify-content: flex-center;\n  align-items: center;\n  gap: 4px;\n}\n.tomorrowText {\n  color: var(--warning-foreground);\n}\n\n.taskFooter {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.taskDropdown {\n  display: flex;\n  flex-direction: column;\n  gap: 0.25rem;\n}\n\n.taskDropdown .destructiveMenuItem {\n  color: var(--destructive);\n}\n\n.taskDropdown .destructiveMenuItem:hover,\n.taskDropdown .destructiveMenuItem[data-highlighted] {\n  background-color: var(--mix-destructive-66-bg) !important;\n  color: var(--destructive-foreground) !important;\n}\n\n@media (max-width: 1280px) {\n  .taskCard {\n    min-height: auto;\n  }\n}\n",
      "type": "registry:file",
      "target": "~/components/blocks/card-task/card-task.module.css"
    }
  ]
}