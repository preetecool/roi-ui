{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "accordion-tailwind",
  "type": "registry:item",
  "title": "Accordion (Tailwind)",
  "description": "A collapsible content component.",
  "files": [
    {
      "path": "registry/brook/tailwind/ui/accordion.tsx",
      "content": "\"use client\";\n\nimport { Accordion } from \"@base-ui-components/react/accordion\";\nimport { ChevronDown } from \"lucide-react\";\nimport { cn } from \"@/lib/tw-utils\";\n\nfunction AccordionRoot({\n  className,\n  ...props\n}: Accordion.Root.Props) {\n  return (\n    <Accordion.Root\n      className={cn(\n        \"flex w-[32rem] max-w-[calc(100vw-8rem)] cursor-inherit flex-col\",\n        className\n      )}\n      data-slot=\"accordion-root\"\n      {...props}\n    />\n  );\n}\n\nfunction AccordionItem({\n  className,\n  ...props\n}: Accordion.Item.Props) {\n  return (\n    <Accordion.Item\n      className={cn(\n        \"border-border/80 border-b-[0.5px] last:border-b-0\",\n        className\n      )}\n      data-slot=\"accordion-item\"\n      {...props}\n    />\n  );\n}\n\nfunction AccordionHeader({\n  className,\n  ...props\n}: Accordion.Header.Props) {\n  return (\n    <Accordion.Header\n      className={cn(\"m-0 font-medium text-sm tracking-inherit\", className)}\n      data-slot=\"accordion-header\"\n      {...props}\n    />\n  );\n}\n\nfunction AccordionTrigger({\n  className,\n  children,\n  ...props\n}: Accordion.Trigger.Props) {\n  return (\n    <Accordion.Trigger\n      className={cn(\n        \"box-border flex w-full cursor-pointer items-center justify-between border-none bg-transparent px-0 text-left font-normal\",\n        \"h-[41.5px]\",\n        \"text-secondary-foreground\",\n        \"hover:text-foreground hover:underline [&:hover_svg]:text-foreground\",\n        \"focus:outline-none focus-visible:z-[1] focus-visible:outline-2 focus-visible:outline-ring focus-visible:outline-offset-2\",\n        \"data-[disabled]:cursor-not-allowed data-[disabled]:opacity-50 data-[disabled]:hover:bg-transparent\",\n        className\n      )}\n      data-slot=\"accordion-trigger\"\n      {...props}\n    >\n      {children}\n      <ChevronDown\n        className={cn(\n          \"h-4 w-4 flex-shrink-0 text-muted-foreground transition-transform duration-150 ease-[ease]\",\n          \"[[data-panel-open]_&]:rotate-180\"\n        )}\n      />\n    </Accordion.Trigger>\n  );\n}\n\nfunction AccordionPanel({\n  className,\n  children,\n  ...props\n}: Accordion.Panel.Props) {\n  return (\n    <Accordion.Panel\n      className={cn(\n        \"box-border h-[var(--accordion-panel-height)] overflow-hidden leading-[1.4rem]\",\n        \"transition-[height] duration-150\",\n        \"data-[ending-style]:h-0 data-[starting-style]:h-0\",\n        className\n      )}\n      data-slot=\"accordion-panel\"\n      style={{ transitionTimingFunction: \"var(--ease-out-expo)\" }}\n      {...props}\n    >\n      <div\n        className={cn(\n          \"pr-3 pb-5 pl-0 font-normal text-secondary-foreground text-sm leading-[1.5]\"\n        )}\n      >\n        {children}\n      </div>\n    </Accordion.Panel>\n  );\n}\n\n// biome-ignore lint/performance/noBarrelFile: Re-exporting icon as part of component API\nexport { ChevronDown as ChevronDownIcon } from \"lucide-react\";\n\nexport {\n  AccordionRoot as Accordion,\n  AccordionHeader,\n  AccordionItem,\n  AccordionPanel,\n  AccordionRoot,\n  AccordionTrigger,\n};\n",
      "type": "registry:file",
      "target": "~/components/ui/accordion/accordion.tsx"
    }
  ]
}