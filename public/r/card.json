{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "card",
  "type": "registry:item",
  "title": "Card",
  "description": "A container component for displaying content.",
  "files": [
    {
      "path": "registry/brook/ui/card/card.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport Image from \"next/image\";\nimport styles from \"./card.module.css\";\n\nconst cardVariants = cva(styles.card, {\n  variants: {\n    variant: {\n      default: \"\",\n      lift: styles.cardLift,\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n  },\n});\n\n/**\n * Card component for displaying content in a contained layout.\n *\n * @param variant - The visual style of the card\n *   - `\"default\"` - Standard card appearance\n *   - `\"lift\"` - Animated card with hover effects. On hover, the image scales up, content and footer animate with elevation effects\n * @param className - Optional CSS class names\n *\n * @example\n * ```tsx\n * // Standard card\n * <Card>\n *   <CardHeader>\n *     <CardTitle>Title</CardTitle>\n *   </CardHeader>\n *   <CardContent>Content goes here</CardContent>\n * </Card>\n *\n * // Lift variant with hover animations\n * <Card variant=\"lift\">\n *   <CardImage src=\"/image.jpg\" alt=\"Image\" />\n *   <CardContent>\n *     <CardTitle>Title</CardTitle>\n *   </CardContent>\n *   <CardFooter>Footer content</CardFooter>\n * </Card>\n * ```\n */\nfunction Card({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof cardVariants>) {\n  return <div data-slot=\"card\" className={cn(cardVariants({ variant }), className)} {...props} />;\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return <div data-slot=\"card-header\" className={cn(styles.header, className)} {...props} />;\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return <div data-slot=\"card-title\" className={cn(styles.title, className)} {...props} />;\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return <div data-slot=\"card-description\" className={cn(styles.description, className)} {...props} />;\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return <div data-slot=\"card-content\" className={cn(styles.content, className)} {...props} />;\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return <div data-slot=\"card-footer\" className={cn(styles.footer, className)} {...props} />;\n}\n\n/**\n * CardImage component for displaying images within a Card. Uses Next Image.\n *\n * @param src - The image source URL\n * @param alt - Alternative text for the image (required for accessibility)\n * @param className - Optional CSS class names\n *\n * @example\n * ```tsx\n * <Card>\n *   <CardImage src=\"/scene.jpg\" alt=\"Mountain landscape\" />\n *   <CardContent>...</CardContent>\n * </Card>\n * ```\n */\nfunction CardImage({\n  className,\n  src,\n  alt,\n  ...props\n}: {\n  className?: string;\n  src: string;\n  alt: string;\n} & Omit<React.ComponentProps<typeof Image>, \"src\" | \"alt\" | \"width\" | \"height\" | \"children\">) {\n  return (\n    <Image\n      data-slot=\"card-image\"\n      className={cn(styles.image, className)}\n      src={src}\n      alt={alt}\n      width={300}\n      height={300}\n      {...props}\n    />\n  );\n}\n\n/**\n * CardImageContent component for overlaying content on top of a CardImage.\n * Creates an absolutely positioned overlay with a gradient background for text readability.\n *\n * @param className - Optional CSS class names\n * @param children - Content to display in the overlay (typically text or CTAs)\n *\n * @example\n * ```tsx\n * <Card>\n *   <CardImage src=\"/scene.jpg\" alt=\"Mountain landscape\" />\n *   <CardImageContent>\n *     <h2>Mountain Adventure</h2>\n *     <p>Explore the peaks</p>\n *   </CardImageContent>\n *   <CardContent>...</CardContent>\n * </Card>\n * ```\n */\nfunction CardImageContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return <div data-slot=\"card-image-content\" className={cn(styles.imageContent, className)} {...props} />;\n}\n\nfunction CardIcon({ className, children, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div data-slot=\"card-icon\" className={cn(styles.icon, className)} {...props}>\n      {children}\n    </div>\n  );\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return <div data-slot=\"card-action\" className={cn(styles.action, className)} {...props} />;\n}\n\nexport {\n  Card,\n  CardAction,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardIcon,\n  CardImage,\n  CardImageContent,\n  CardTitle,\n};\n",
      "type": "registry:file",
      "target": "~/components/ui/card/card.tsx"
    },
    {
      "path": "registry/brook/ui/card/card.module.css",
      "content": ".card {\n  border-radius: var(--radius);\n  color: var(--foreground);\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  padding: 1.5rem;\n\n  background-color: var(--mix-card-33-bg);\n  border: 1px solid var(--border-dark);\n  position: relative;\n  justify-content: space-between;\n}\n\n.cardLift {\n  overflow: hidden;\n  padding-bottom: 0;\n  gap: 0;\n}\n\n.cardLift .content {\n  padding: 1.5rem 1.5rem 2rem;\n  transition: transform 0.25s var(--ease-in-out-quad);\n  background-color: var(--mix-card-33-bg);\n  width: calc(100% + 3rem);\n  margin: 0 -1.5rem;\n}\n\n.cardLift:hover .content {\n  transform: translateY(-2rem);\n}\n\n.cardLift:hover .footer {\n  opacity: 1;\n  transform: translateY(-1rem);\n}\n\n.cardLift:hover .image {\n  transform: scale(1.04);\n}\n\n.header {\n  display: grid;\n  grid-template-columns: 1fr auto;\n  gap: 0.5rem;\n  align-items: center;\n  max-width: 100%;\n}\n\n.title {\n  font-size: 1.25rem;\n  font-weight: 500;\n  line-height: 1;\n  letter-spacing: -0.025em;\n  margin: 0;\n}\n\n.description {\n  font-size: 0.875rem;\n  color: var(--muted-foreground);\n  margin: 0;\n  grid-column: 1 / -1;\n  white-space: unset;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.textContent {\n  display: flex;\n  flex-direction: column;\n  gap: 0.375rem;\n}\n\n.footer {\n  display: flex;\n  align-items: center;\n}\n\n.cardLift .footer {\n  opacity: 0;\n  transition:\n    opacity 0.25s var(--ease-in-out-quad),\n    transform 0.25s var(--ease-in-out-quad);\n  position: absolute;\n  bottom: 0;\n  left: 1.5rem;\n  right: 1.5rem;\n}\n\n.image {\n  width: calc(100% + 3rem + 2px);\n  margin: calc(-1.5rem - 1px) calc(-1.5rem - 1px) 0;\n  object-fit: cover;\n  height: 300px;\n  aspect-ratio: 16/9;\n  transition: transform 0.25s var(--ease-in-out-quad);\n  border-radius: var(--radius) var(--radius) 0 0;\n  max-width: 100vw;\n  box-sizing: border-box;\n}\n\n@media (max-width: 768px) {\n  .image {\n    width: 100%;\n    margin: -1.5rem 0 0;\n    max-width: none;\n    height: 250px;\n  }\n\n  .cardLift .image {\n    margin-left: -1.5rem;\n    margin-right: -1.5rem;\n    width: calc(100% + 3rem);\n  }\n}\n\n.imageContent {\n  position: absolute;\n  inset: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n\n  background: linear-gradient(transparent, rgba(0, 0, 0, 0.6));\n  color: white;\n}\n\n.default {\n  background-color: var(--background-muted);\n}\n\n.icon {\n  background-color: var(--muted);\n  border-radius: var(--radius);\n  border: 1px solid var(--border);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  z-index: 1;\n  padding: 6px;\n  margin-bottom: 1.125rem;\n  width: 32px;\n  height: 32px;\n}\n\n.action {\n  grid-column: 2;\n  grid-row: 1;\n  align-self: start;\n  justify-self: end;\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/card/card.module.css"
    }
  ]
}