{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "card",
  "type": "registry:item",
  "title": "Card",
  "description": "A container component for displaying content.",
  "files": [
    {
      "path": "registry/brook/ui/card/card.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport styles from \"./card.module.css\";\nimport Image from \"next/image\";\n\nexport interface CardProps extends React.HTMLAttributes<HTMLDivElement> {\n  ref?: React.Ref<HTMLDivElement>;\n  variant?: \"default\" | \"lift\";\n}\n\nexport const Card = ({ className, ref, variant = \"default\", ...props }: CardProps) => (\n  <div ref={ref} className={cn(styles.card, variant === \"lift\" && styles.cardLift, className)} {...props} />\n);\nCard.displayName = \"Card\";\n\nexport interface CardHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  ref?: React.Ref<HTMLDivElement>;\n}\n\nexport const CardHeader = ({ className, ref, ...props }: CardHeaderProps) => (\n  <div ref={ref} className={cn(styles.header, className)} {...props} />\n);\nCardHeader.displayName = \"CardHeader\";\n\nexport interface CardTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {\n  ref?: React.Ref<HTMLHeadingElement>;\n}\n\nexport const CardTitle = ({ className, ref, ...props }: CardTitleProps) => (\n  <h3 ref={ref} className={cn(styles.title, className)} {...props} />\n);\nCardTitle.displayName = \"CardTitle\";\n\nexport interface CardDescriptionProps extends React.HTMLAttributes<HTMLParagraphElement> {\n  ref?: React.Ref<HTMLParagraphElement>;\n}\n\nexport const CardDescription = ({ className, ref, ...props }: CardDescriptionProps) => (\n  <p ref={ref} className={cn(styles.description, className)} {...props} />\n);\nCardDescription.displayName = \"CardDescription\";\n\nexport interface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  ref?: React.Ref<HTMLDivElement>;\n}\n\nexport const CardContent = ({ className, ref, ...props }: CardContentProps) => (\n  <div ref={ref} className={cn(styles.content, className)} {...props} />\n);\nCardContent.displayName = \"CardContent\";\n\nexport interface CardFooterProps extends React.HTMLAttributes<HTMLDivElement> {\n  ref?: React.Ref<HTMLDivElement>;\n}\n\nexport const CardFooter = ({ className, ref, ...props }: CardFooterProps) => (\n  <div ref={ref} className={cn(styles.footer, className)} {...props} />\n);\nCardFooter.displayName = \"CardFooter\";\n\nexport interface CardImageProps extends Omit<React.ComponentProps<typeof Image>, \"children\"> {\n  alt: string;\n  children?: React.ReactNode;\n}\n\nexport const CardImage = ({ className, children, alt, ...props }: CardImageProps) => {\n  return (\n    <>\n      <Image className={cn(styles.image, className)} {...props} width={300} alt={alt} height={300} />\n      {children && <div className={styles.imageContent}>{children}</div>}\n    </>\n  );\n};\nCardImage.displayName = \"CardImage\";\n\nexport interface CardLiftDivProps extends React.HTMLAttributes<HTMLDivElement> {\n  ref?: React.Ref<HTMLDivElement>;\n}\n\nexport const CardLiftDiv = ({ className, ref, ...props }: CardLiftDivProps) => (\n  <div ref={ref} className={cn(styles.liftDiv, className)} {...props} />\n);\nCardLiftDiv.displayName = \"CardLiftDiv\";\n\nexport interface CardIconProps extends React.HTMLAttributes<HTMLDivElement> {\n  ref?: React.Ref<HTMLDivElement>;\n}\n\nexport const CardIcon = ({ className, ref, children, ...props }: CardIconProps) => (\n  <div ref={ref} className={cn(styles.icon, className)} {...props}>\n    {children}\n  </div>\n);\nCardIcon.displayName = \"CardIcon\";\n\nexport interface CardActionProps extends React.HTMLAttributes<HTMLDivElement> {\n  ref?: React.Ref<HTMLDivElement>;\n}\n\nexport const CardAction = ({ className, ref, ...props }: CardActionProps) => (\n  <div ref={ref} className={cn(styles.action, className)} {...props} />\n);\nCardAction.displayName = \"CardAction\";\n",
      "type": "registry:file",
      "target": "~/components/ui/card/card.tsx"
    },
    {
      "path": "registry/brook/ui/card/card.module.css",
      "content": ".card {\n  border-radius: var(--radius);\n  color: var(--foreground);\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  padding: 1.5rem;\n\n  background-color: color-mix(in oklch, var(--card) 33%, var(--background));\n  border: 1px solid var(--border);\n  position: relative;\n  justify-content: space-between;\n}\n\n.cardLift {\n  overflow: hidden;\n  padding-bottom: 0;\n  gap: 0;\n}\n\n.cardLift .content {\n  padding: 1.5rem 0;\n  transition: transform 0.4s ease;\n  background-color: color-mix(in oklch, var(--card) 33%, var(--background));\n  width: calc(100% + 3rem);\n  margin-left: -1.5rem;\n  margin-right: -1.5rem;\n  padding-left: 1.5rem;\n  padding-right: 1.5rem;\n  padding-bottom: 2rem;\n}\n\n.cardLift:hover .liftDiv {\n  transform: translateY(-1rem);\n}\n\n.cardLift:hover .content {\n  transform: translateY(-3rem);\n}\n\n.cardLift:hover .footer {\n  opacity: 1;\n  transform: translateY(-1rem);\n}\n\n.cardLift:hover .image {\n  transform: scale(1.04);\n}\n\n.header {\n  display: grid;\n  grid-template-columns: 1fr auto;\n  gap: 0.5rem;\n  align-items: center;\n  max-width: 100%;\n}\n\n.title {\n  font-size: 1.25rem;\n  font-weight: 500;\n  line-height: 1;\n  letter-spacing: -0.025em;\n  margin: 0;\n}\n\n.description {\n  font-size: 0.875rem;\n  color: var(--muted-foreground);\n  margin: 0;\n  grid-column: 1 / -1;\n  white-space: unset;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n}\n\n.textContent {\n  display: flex;\n  flex-direction: column;\n  gap: 0.375rem;\n}\n\n.footer {\n  display: flex;\n  align-items: center;\n}\n\n.cardLift .footer {\n  opacity: 0;\n  transition:\n    opacity 0.3s ease,\n    transform 0.3s ease;\n  position: absolute;\n  bottom: 0px;\n  left: 24px;\n  right: 24px;\n}\n\n.image {\n  width: calc(100% + 3rem + 2px);\n  margin: -1.5rem -1.5rem 0 -1.5rem;\n  margin-top: calc(-1.5rem - 1px);\n  margin-left: calc(-1.5rem - 1px);\n  margin-right: calc(-1.5rem - 1px);\n  object-fit: cover;\n  height: 300px;\n  aspect-ratio: 16/9;\n  transition: transform 0.3s ease;\n  border-radius: var(--radius) var(--radius) 0 0;\n  max-width: 100vw;\n  box-sizing: border-box;\n}\n\n@media (max-width: 768px) {\n  .image {\n    width: 100%;\n    margin: 0;\n    margin-top: -1.5rem;\n    margin-bottom: 0;\n    max-width: none;\n    height: 250px;\n  }\n\n  .cardLift .image {\n    margin-left: -1.5rem;\n    margin-right: -1.5rem;\n    width: calc(100% + 3rem);\n  }\n}\n\n.imageContent {\n  position: absolute;\n  inset: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n\n  background: linear-gradient(transparent, rgba(0, 0, 0, 0.6));\n  color: white;\n}\n\n.default {\n  background-color: var(--background-muted);\n}\n\n.icon {\n  background-color: var(--muted);\n  border-radius: var(--radius);\n  border: 1px solid var(--border);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  z-index: 1;\n  padding: 6px;\n  margin-bottom: 1.125rem;\n  width: 32px;\n  height: 32px;\n}\n\n.action {\n  grid-column: 2;\n  grid-row: 1;\n  align-self: start;\n  justify-self: end;\n}\n",
      "type": "registry:file",
      "target": "~/components/ui/card/card.module.css"
    }
  ]
}