.linkList {
  display: grid;
  margin: 0;
  column-gap: 10px;
  list-style: none;
  padding: 0.5rem;
}

.linkList.one {
  width: 350px;
  grid-template-columns: 1fr 1.5fr;
  grid-template-rows: repeat(3, 1fr);
  row-gap: 0;
}

.linkList.two {
  width: 400px;
  grid-template-columns: 1fr auto 1fr;
  grid-template-rows: repeat(3, 1fr);
}

@media (max-width: 768px) {
  .linkList.one {
    width: 100%;
    grid-template-columns: 1fr;
    grid-template-rows: auto;
  }

  .linkList.one .previewCard {
    grid-row: auto;
    grid-column: 1;
    min-height: 150px;
  }

  .linkList.two {
    width: 100%;
    grid-template-columns: 1fr;
    grid-template-rows: auto;
  }

  .separator {
    display: none;
  }
}

.linkList.two {
  padding-left: 8px;
  padding-right: 8px;
}

.separator {
  width: 1px;
  background-color: var(--border);
  grid-row: 1 / span 3;
  grid-column: 2;
}

.linkListItem {
  all: unset;
  cursor: pointer;
  display: block;
  outline: none;
  text-decoration: none;
  user-select: none;
  border-radius: 6px;

  line-height: 1;
  padding: 0.5rem;
  transition: background-color 0.2s ease;
}

.linkListItem:hover {
  background-color: oklch(from var(--secondary) l c h / 0.6);
}

.linkListItemHeading {
  font-weight: 400;
  font-size: 0.875rem;
  line-height: 1.2;
  margin-bottom: 5px;
  color: var(--foreground);
}

.linkListItemText {
  all: unset;
  color: var(--muted-foreground);
  font-size: 0.75rem;
  line-height: 1.4;
  font-weight: initial;
}

.previewCard {
  grid-row: 1 / span 3;
  grid-column: 2;
  position: relative;
  border-radius: 6px;
  overflow: hidden;
}

.previewContent {
  position: relative;
  width: 100%;
  height: 100%;
  border-radius: 6px;
  overflow: hidden;
  background-image: linear-gradient(
    180deg,
    oklch(from var(--accent) l c h / 0.05) 0%,
    oklch(from var(--accent) l c h / 0.1) 100%
  );
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 1.5rem;
}

.previewSvg {
  position: absolute;
  top: 50%;
  right: 0;
  transform: translate(50%, -50%) rotate(180deg);
  width: 150%;
  height: 100%;
  pointer-events: none;
}

.rotatingEllipse {
  transform-origin: center;
}
