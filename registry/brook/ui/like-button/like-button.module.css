.container {
    min-height: 200px;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.animationWrapper {
    position: relative;
    width: 100%;
    max-width: 240px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.particlesContainer {
    position: absolute;
    inset: 0;
    overflow: visible;
    pointer-events: none;
}

.particle {
    position: absolute;
    left: 50%;
    top: 50%;
    will-change: transform, opacity;
    animation: particleMotion 1s ease-out forwards;
    animation-delay: var(--delay);
}

.starShape {
    width: var(--size);
    height: var(--size);
    position: relative;
    display: block;
    transform: rotate(var(--rotation));
}

.starShape::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: var(--foreground);
    clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
}

.circleShape {
    width: var(--size);
    height: var(--size);
    background: var(--foreground);
    border-radius: 50%;
    transform: scale(var(--scale));
}

.thumbButton {
    padding: 12px;
    border-radius: 50%;
    transition: all 0.3s ease;
    position: relative;
    background: transparent;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
}

.thumbButton:hover {
    transform: scale(1.05);
}

.thumbButton:focus-visible {
    outline: 2px solid var(--ring);
    outline-offset: 2px;
}

.thumbIcon {
    transition: all 0.3s ease;
    width: 24px;
    height: 24px;
}

.scaledIcon {
    transform: scale(1.1);
}

.fillAnimation {
    animation: fillThumb 0.2s ease-out forwards;
}

.animateThumbTilt {
    animation: thumbTilt 1.2s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes particleMotion {
    0% {
        transform: translate(-50%, -50%) scale(0.5);
        opacity: 0;
    }
    50% {
        transform: translate(
                calc(-50% + (cos(var(--angle)) * var(--distance))),
                calc(-50% + (sin(var(--angle)) * var(--distance)))
            )
            scale(1);
        opacity: 1;
    }
    80% {
        transform: translate(
                calc(-50% + (cos(var(--angle)) * var(--distance) * 0.75)),
                calc(-50% + (sin(var(--angle)) * var(--distance) * 0.75))
            )
            scale(0.8);
        opacity: 0.5;
    }
    100% {
        transform: translate(
                calc(-50% + (cos(var(--angle)) * var(--distance) * 0)),
                calc(-50% + (sin(var(--angle)) * var(--distance) * 0))
            )
            scale(0.05);
        opacity: 0;
    }
}

@keyframes fillThumb {
    0% {
        fill: none;
    }
    100% {
        fill: var(--primary);
    }
}

@keyframes thumbTilt {
    0% {
        transform: rotate(0deg) scale(1);
    }
    50% {
        transform: rotate(-30deg) scale(1.2);
    }
    100% {
        transform: rotate(0deg) scale(1);
    }
}
